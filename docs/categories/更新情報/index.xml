<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>更新情報 on My New Hugo Site</title>
    <link>http://example.org/categories/%E6%9B%B4%E6%96%B0%E6%83%85%E5%A0%B1/</link>
    <description>Recent content in 更新情報 on My New Hugo Site</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 11 Oct 2020 08:32:07 +0000</lastBuildDate>
    <atom:link href="http://example.org/categories/%E6%9B%B4%E6%96%B0%E6%83%85%E5%A0%B1/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>記事更新： 泥舟からの決死の脱出</title>
      <link>http://example.org/blog/post-1737/</link>
      <pubDate>Sun, 11 Oct 2020 08:32:07 +0000</pubDate>
      <guid>http://example.org/blog/post-1737/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;昔々、スクエニのロマンシング・サガってRPGゲームがあって、田中(゜p゜)はSFC版でリアルタイムにやっとったんですが、サルーインという&lt;strong&gt;邪神&lt;/strong&gt;がラスボスなのです。&lt;/p&gt;
&lt;p&gt;このサルーインという邪神は、1000年ほど前、ディスティニーストーンという必殺兵器を身に着けた人間に敗れ、封印されてしまった存在。&lt;/p&gt;
&lt;p&gt;このラスボスサルーインが、主人公との対峙の前に言うセリフ。&lt;br&gt;
田中(゜p゜)はこの上なく好きなのです。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;セリフが流れていって、「はいぼく！」の前で一度区切れるところが秀逸。&lt;/p&gt;
&lt;p&gt;神はあらかじめ存在を定義されたものであって、決して過ちを認められないからこそ神なのです。&lt;br&gt;
そして逆に人間は過ちを認め、変われるからこそ人間なのだと思います。&lt;/p&gt;
&lt;p&gt;前ふり長くなりましたけど、&lt;strong&gt;田中(゜p゜)の ただいちどの ……はいぼく！&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;http://example.org/article/escape-from-burning-pj/&#34;&gt;泥船から決死の脱出&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress on GAE Standard  構築(済)</title>
      <link>http://example.org/blog/post-1091/</link>
      <pubDate>Sun, 27 Sep 2020 08:26:19 +0000</pubDate>
      <guid>http://example.org/blog/post-1091/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;http://example.org/blog/post-1074/&#34;&gt;前回のKusanagi on GKEギブアップ&lt;/a&gt;からまだ懲りてません(笑)&lt;br&gt;
今度は&lt;!-- raw HTML omitted --&gt;Google App Engine(GAE)&lt;!-- raw HTML omitted --&gt;を使ってWordPressを構築します。&lt;/p&gt;
&lt;p&gt;ちなみにStandardの方で構築するので、CloudSQL以外は、&lt;strong&gt;使った分だけお金を支払えばよいというスグレモノ&lt;/strong&gt;。しかもスケーリングも証明書も、何もかもやってくれるオマケ付き。&lt;/p&gt;
&lt;p&gt;間違えてフレキシブルで構築すると、自由度が高い代わりにGCEインスタンス代がコンスタントにかかってしまうので注意です。比較表はこちら(外部サイト) &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.serversus.work/topics/5jbu7y90jk81kcdqfzf0/&#34;&gt;https://www.serversus.work/topics/5jbu7y90jk81kcdqfzf0/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;進捗状況&#34;&gt;進捗状況&lt;/h2&gt;
&lt;p&gt;今回のは&lt;strong&gt;実はもうサイトできてます&lt;/strong&gt;。既存のサイトからの移行方法も検証済。&lt;br&gt;
&lt;a href=&#34;http://www.tmp-net.biz/&#34;&gt;サイトはこちら。&lt;/a&gt; ※2020/09/29追記 移行しちゃったのでもうありません。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ハハッ。&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)の技術者としての能力も捨てたもんじゃないね！&lt;/p&gt;
&lt;p&gt;というか、田中(゜p゜)は昔この構成でWordPressやったことあるんですけどね！&lt;br&gt;
最近チュートリアルがアップデートされて、画像ファイルとかの扱いがさらに容易くなりました。&lt;/p&gt;
&lt;p&gt;GKEであれだけ苦戦してたのがウソのよう。&lt;br&gt;
&lt;strong&gt;GAEサイコー!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;運用上の注意点&#34;&gt;運用上の注意点&lt;/h2&gt;
&lt;p&gt;ただし、そんなに上手い話は世にはなかなかないのです。&lt;br&gt;
カンタンにできるから真似してみよう！ と思われる方のために注意点。&lt;/p&gt;
&lt;p&gt;この構成の一番の問題は、GAEに上げちゃったが最後、&lt;strong&gt;WPのGUIから更新できないものが発生する&lt;/strong&gt;ことです。&lt;/p&gt;
&lt;p&gt;更新できないものを以下に並べます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;プラグイン(設定は除く)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;テーマ(設定は除く)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;投稿・固定ページへの直接画像貼り付け(メディアライブラリからはOK)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3つともかなり致命的だと思います。&lt;br&gt;
これに関連してWP側でエラーが出ることがありますが、そもそもGAEはディスクに書き込めないものだというのを知っておかないと混乱します。&lt;/p&gt;
&lt;h2 id=&#34;回避方法&#34;&gt;回避方法&lt;/h2&gt;
&lt;p&gt;カンタンにいうと、&lt;strong&gt;ローカルにサーバを立てて、そこで管理&lt;/strong&gt;します。&lt;br&gt;
&lt;strong&gt;GAEはCloudSQL Proxyってのを使わないとCloudSQLには接続できない&lt;/strong&gt;ので、ローカルにも同じプロキシを入れてDBにアクセスできるようにします。&lt;br&gt;
&lt;strong&gt;図中の①です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;また、ローカルのWordPressは、環境構築した後、yaml書いてGAEにデプロイします。&lt;br&gt;
&lt;strong&gt;図中②の部分&lt;/strong&gt;です。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;じゃあ更新はどうするのか&lt;/strong&gt;というと、ローカルにPHPサーバ構築して、WordPressのGUIを動かして更新します。&lt;/p&gt;
&lt;p&gt;記事はDBに書かれるので特にアクションは必要ないですが、&lt;strong&gt;画像、テーマ、プラグインを更新した場合は②のデプロイが必要になります。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;デプロイはワンライナーですけど&lt;strong&gt;めんどくせえ・・・。&lt;/strong&gt;&lt;br&gt;
けど、WordPressをクラスタ化したら、どのみち更新用の端末とか必要になってきそうだしなー。&lt;/p&gt;
&lt;h2 id=&#34;構築方法&#34;&gt;構築方法&lt;/h2&gt;
&lt;p&gt;それでもやりたい方のために、構築を方法を書きます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;つ Googleのチュートリアル。&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&#34;&gt;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;…というだけでは投稿の意味がないので、注意点を少し。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;チュートリアルにミス。&lt;br&gt;
×php vendor/bin/wp-gae&lt;br&gt;
○php vendor/bin/wp-gae create&lt;/li&gt;
&lt;li&gt;WP CLIのインストールは、チュートリアルじゃなくて公式のほうが良い。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://wp-cli.org/ja/&#34;&gt;https://wp-cli.org/ja/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;サーバの作り方が書いてないが、php、php-mysqlインストールして、以下で行ける。&lt;br&gt;
cd &amp;lt;WordPressのフォルダ&amp;gt;&lt;br&gt;
php -S 127.0.0.1:9000&lt;br&gt;
ブラウザでhttp://127.0.0.1:9000/にアクセス。&lt;/li&gt;
&lt;li&gt;ただし遅いので、レスポンス気になるならきちんとサーバ立てたほうが良い。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新の早い世の中ですから、公式と最新版のギャップは大きくなっていくものと思われます。もちろんこのブログもです。&lt;/p&gt;
&lt;p&gt;以下、既存のWordPressサイトからの移行方法ですので、新規の方は見なくて良いと思います。&lt;/p&gt;
&lt;h2 id=&#34;移行方法1-移行用プラグイン利用&#34;&gt;移行方法1： 移行用プラグイン利用&lt;/h2&gt;
&lt;p&gt;要は&lt;strong&gt;移行用プラグインを&lt;/strong&gt;移行元と移行先に入れて、エクスポート→インポートするだけのはずですが、ローカルのホスト名が127.0.0.1なので、サイト内でのURL整合性が取れなくなります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;賢い移行ツールは、インポート先のホスト名を見て、DBなり設定ファイルなりを書き換えてしまう&lt;/strong&gt;のです。そのおかげで、見た目キレイに移行できるんですけどね…。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)がこれを解決するためにやったのは、以下のような感じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;念の為、移行元サイトの絶対パスを相対パスに書き換えておく。&lt;!-- raw HTML omitted --&gt;このあたり参照&lt;!-- raw HTML omitted --&gt;(外部サイト)&lt;br&gt;
スタティックに書いてるやつは修正が必要かもしれない。&lt;/li&gt;
&lt;li&gt;ツールで移行元からおもむろにエクスポート&lt;/li&gt;
&lt;li&gt;host等で移行先サイトのFQDNを、127.0.0.1で解決できるようにしておく。&lt;/li&gt;
&lt;li&gt;php -S &amp;lt;移行先のFQDN&amp;gt;:80&lt;br&gt;
コマンドでサーバを起動し、ブラウザでhttp://&amp;lt;移行先のFQDN&amp;gt;/にアクセス。&lt;br&gt;
※移行先と混乱しないよう、PING等で事前に宛先確認。あとCloudSQL Proxyの起動を忘れないこと。&lt;/li&gt;
&lt;li&gt;ツールでおもむろにローカルにインポート&lt;/li&gt;
&lt;li&gt;GAEにデプロイ&lt;/li&gt;
&lt;li&gt;外部確認の際は、hostsは元に戻す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こうすると賢いツールさんも、自分が移行先にいるのだと勘違いして、正しくない設定を入れてくれます。※デプロイ先では正しい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;それでもテーマ設定等、一部の設定は反映されない&lt;/strong&gt;ので、サイト全体に渡って確認必要です。それと、一部のプラグインは入れ直しが必要かもしれません。&lt;/p&gt;
&lt;p&gt;デプロイした後にファイルを勝手に書くような、お行儀の悪いプラグインは削除ですね。&lt;/p&gt;
&lt;h2 id=&#34;移行方法2-力こそパワー&#34;&gt;移行方法2： 力こそパワー&lt;/h2&gt;
&lt;p&gt;すみません。&lt;br&gt;
要するに、多くのサイトがやっているWordPressの標準機能を使うやり方です。田中(゜p゜)も念の為やってみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移行元WPの管理画面のツール→エクスポートでDBをエクスポート&lt;/li&gt;
&lt;li&gt;移行元のwp-contentフォルダをダンロードし、ローカルのwp-contentにコピー&lt;/li&gt;
&lt;li&gt;移行元のエクスポートファイルを移行先にインポート&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で、キレイに行くはずなんですが、全然見た目が反映されません。おそらく以下はDBのどこかに保存されていて、エクスポートでは出ないものと思われます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プラグインの設定&lt;/li&gt;
&lt;li&gt;テーマ設定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;プラグインの設定はともかく、テーマ設定は非常にしんどいです。&lt;/p&gt;
&lt;p&gt;この方法はDBや設定ファイルに余計なことしないので、わかりやすくはありますが、&lt;strong&gt;移行後の作業量がエグい&lt;/strong&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;田中pの既存サイトはどうするのか&#34;&gt;田中(゜p゜)の既存サイトはどうするのか&lt;/h2&gt;
&lt;p&gt;結局、ローカルにコンテンツ置いとかなきゃいけないのがリスキーな気がしていましたが、コンテンツはクラウドにあってなくなるわけじゃないですし、この後Gitなどでの運用の学習も考えると、**デプロイ前提でどこかに置いておく、**というのは悪くない気がしてきました。&lt;/p&gt;
&lt;p&gt;大規模な運用を鑑みると、結局更新用端末と、閲覧用のサーバー分けなきゃいけないような気がしますしね。&lt;/p&gt;
&lt;p&gt;何より、GAEのコスパと性能がダントツだし、面倒だったHTTPS化と証明書のインポートをごくサラッとやってくれたので、&lt;strong&gt;ちょっと移行しちゃおうかなー&lt;/strong&gt;、なんて考えています。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
  </channel>
</rss>
