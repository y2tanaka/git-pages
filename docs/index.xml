<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Make the Web Fun Again on ITインフラエンジニアのなんとか</title>
    <link>https://y2tanaka.github.io/git-pages/</link>
    <description>Recent content in Make the Web Fun Again on ITインフラエンジニアのなんとか</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 15 Oct 2020 12:20:20 +0000</lastBuildDate>
    <atom:link href="https://y2tanaka.github.io/git-pages/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>WEBHOOK-test</title>
      <link>https://y2tanaka.github.io/git-pages/webhook-test/</link>
      <pubDate>Thu, 15 Oct 2020 12:20:20 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/webhook-test/</guid>
      <description>&lt;p&gt;てすとです。テストです。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>静的サイト化検討</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1774/</link>
      <pubDate>Tue, 13 Oct 2020 11:41:36 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1774/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;SiteSpeedのスコアがどうしても上がりません。&lt;br&gt;
プラグインは最小限にしてるし、Luxeritasの機能使っても、これ以上のスピードは望めないようだ。&lt;/p&gt;
&lt;h2 id=&#34;原因と対策&#34;&gt;原因と対策&lt;/h2&gt;
&lt;p&gt;スコア分析すると、JavaScriptが遅いのはGoogle AnalysticsとAdsenseがあるのでしょうがないとしても、やっぱりLAMP Stackのレスポンスが悪いみたい。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;よって、JAM Stack化を検討しとるのです。&lt;/p&gt;
&lt;p&gt;JAM Stackとはなにかっつうのは&lt;!-- raw HTML omitted --&gt;このアタリ&lt;!-- raw HTML omitted --&gt;が詳しいですが、要するにクライアントサイドで処理するということ。&lt;br&gt;
当然ながら田中のサイトはWordPressなので、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;MySQLとPHPでゴリゴリにサーバーサイド処理&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;となります。&lt;/p&gt;
&lt;p&gt;スピードも当然のこと、サーバーサイド(クラウド)のリソースを使うのでお財布にも優しくない。&lt;br&gt;
今の所GAEの無料枠に収まってるけど、いつバズっちゃうとも限らんし。&lt;/p&gt;
&lt;h2 id=&#34;jam-stackを軽くテストしてみる&#34;&gt;JAM Stackを軽くテストしてみる&lt;/h2&gt;
&lt;p&gt;手元にHugo(Go言語で静的サイトをビルドするしくみ)環境を構築して動かしてみました。&lt;br&gt;
Git対応してるんで、HugoとテーマをCloneしてちょいちょいいじるだけでカンタンにWebサイト上がってきます。&lt;/p&gt;
&lt;p&gt;が…・&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;・・・&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ちょっとWordPressに比べちゃうとキツイ&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;気がする。&lt;br&gt;
田中はいちおうエンジニアですけど、メリデメ整理してみます。&lt;/p&gt;
&lt;p&gt;○Goで書かれてるので、GAEとの相性が大変に良い。&lt;br&gt;
○動きは軽い。ハンパない。&lt;br&gt;
○Gitで管理できる。&lt;/p&gt;
&lt;p&gt;ちょっとしんどい点は&lt;/p&gt;
&lt;p&gt;×テーマが圧倒的に少ない。&lt;br&gt;
×日本語に対応したテーマもやはり少ない&lt;br&gt;
×マークアップ言語で書く&lt;br&gt;
　→技術者以外に更新は難しいんじゃ・・・。&lt;br&gt;
×テーマのフォルダ構造が直感的じゃない。慣れかな？&lt;br&gt;
×デプロイに多少時間がかかる。&lt;br&gt;
×フォーラムとかコメントとか別で実装する必要がある。&lt;br&gt;
　→結局DBとかそれに変わるものが必要。&lt;/p&gt;
&lt;p&gt;本当に大規模なサイトでスケーラビリティ、コスト、セキュリティを追い込んでかないと必要ないんじゃないかなー。&lt;br&gt;
もう少し詳しい比較はこちらにもあります。(外部サイト)&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://dyno.design/articles/jamstack-cms-pros-cons-comparison/&#34;&gt;https://dyno.design/articles/jamstack-cms-pros-cons-comparison/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;結局田中pどうするのか&#34;&gt;結局田中(゜p゜)どうするのか&lt;/h2&gt;
&lt;p&gt;Gitで管理するところ、スピードにはものすごく興味あるのですが、結局トレードオフにするものが大きすぎる。&lt;br&gt;
コレやるんだったら自作じゃなくて&lt;!-- raw HTML omitted --&gt;StackBits&lt;!-- raw HTML omitted --&gt;経由で&lt;!-- raw HTML omitted --&gt;Netlify&lt;!-- raw HTML omitted --&gt;とか投稿用インターフェイスついてそうなホスティングサービス使うかなー。&lt;br&gt;
ただ、コレだとレールが敷かれすぎてて何も勉強にならん気がする。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;WPの投稿をフックしてNetlifyに出力できるプラグイン&lt;!-- raw HTML omitted --&gt;あるみたいなので、コメント、フォーラム以外はこっちに出力して、静的サイトにホスティングするとか。&lt;/p&gt;
&lt;p&gt;ますますサイト構成が複雑になりそう。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了： 補給戦</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1779/</link>
      <pubDate>Mon, 12 Oct 2020 11:16:00 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1779/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;昔々、一部上場企業の情シスやってた頃、バックヤードの重要性を訴えるために読んだ本。&lt;br&gt;
リアル本しかないのがキツイけど。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;その企業は、オーナーが一代で起こした会社で、田中(゜p゜)はこういうのが超人なんだろなー、と思ってオーナーのことを見てました。&lt;br&gt;
その人は、企業の活動を戦争に例えるのが得意で、インターネットの隆興を、戦争で言う「空中戦」に例えてたのです。&lt;/p&gt;
&lt;p&gt;確かに、地上戦、海上戦をローカルの闘いに例えるなら、グローバルで国境を超えて制圧するのは空中戦。&lt;br&gt;
例えとしても、とても上手いこと言うし、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;オーナーが20年以上前にその事実に気づいてた&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ことに驚愕しました。&lt;/p&gt;
&lt;p&gt;この本は、そういう意味で言えば無力だった田中(゜p゜)のささやかな意趣返し。&lt;br&gt;
要は、コアビジネスでは空中戦大事ですけど、兵站(補給)が戦略の要ですよ、ということを言いたかった。&lt;br&gt;
もちろん、刺せる機会は訪れなかったのですけど。&lt;/p&gt;
&lt;p&gt;戦争の歴史は、兵站(ロジスティクス)の歴史です。&lt;br&gt;
WW2で日本軍が惨敗した例でも分かる通り、兵站を考えないものに勝利はないし、フロントの戦闘力よりも兵站のほうが戦略上重要だというのは、この本にて語られてます。&lt;/p&gt;
&lt;p&gt;また、その技術？も進化してるのです。&lt;/p&gt;
&lt;p&gt;企業も同じで、いかにフロントが強力でもバックヤードが支えない限りスケールしないし、軽視していれば、会社が大きくなればなるほどクビが締まる、戦略上重要なポジションであるはずです。&lt;br&gt;
大きな会社のバックヤードが結局重く、大きくなるのは、結局の所フロント重視で突っ走ってカオスになった結果かなぁ、と。&lt;/p&gt;
&lt;p&gt;中世の兵站て、常に「現地調達」だったんですよね。&lt;br&gt;
なんとなくベンチャーのそれに似てる。なんて思いました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>記事更新： 泥舟からの決死の脱出</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1737/</link>
      <pubDate>Sun, 11 Oct 2020 08:32:07 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1737/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;昔々、スクエニのロマンシング・サガってRPGゲームがあって、田中(゜p゜)はSFC版でリアルタイムにやっとったんですが、サルーインという&lt;strong&gt;邪神&lt;/strong&gt;がラスボスなのです。&lt;/p&gt;
&lt;p&gt;このサルーインという邪神は、1000年ほど前、ディスティニーストーンという必殺兵器を身に着けた人間に敗れ、封印されてしまった存在。&lt;/p&gt;
&lt;p&gt;このラスボスサルーインが、主人公との対峙の前に言うセリフ。&lt;br&gt;
田中(゜p゜)はこの上なく好きなのです。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;セリフが流れていって、「はいぼく！」の前で一度区切れるところが秀逸。&lt;/p&gt;
&lt;p&gt;神はあらかじめ存在を定義されたものであって、決して過ちを認められないからこそ神なのです。&lt;br&gt;
そして逆に人間は過ちを認め、変われるからこそ人間なのだと思います。&lt;/p&gt;
&lt;p&gt;前ふり長くなりましたけど、&lt;strong&gt;田中(゜p゜)の ただいちどの ……はいぼく！&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/escape-from-burning-pj/&#34;&gt;泥船から決死の脱出&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Lubuntu20.04インスコでバタつく</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1676/</link>
      <pubDate>Sat, 10 Oct 2020 11:49:37 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1676/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;こないだ18.04にしたんじゃなかったっけ？&lt;br&gt;
とか思われそうですが、なんか寝る前にポップアップで&lt;strong&gt;20.04が利用可能&lt;/strong&gt;とか出てて、16.04→18.04のときも無問題だったので、&lt;strong&gt;まあいいかな&lt;/strong&gt;と思いポチー。&lt;/p&gt;
&lt;p&gt;予想に反してインストール自体は上手くいき、見た目は少しカスタム必要だけど悪くない感じ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;が、しかし。&lt;/p&gt;
&lt;h2 id=&#34;vm-playerが動かん&#34;&gt;VM Playerが動かん&lt;/h2&gt;
&lt;p&gt;このままOS上げてったらいつかはこうなるだろな、と思ってましたが、ついに来ちゃった。&lt;br&gt;
VM Playerを起動しようとするとコレ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;要するに、カーネルのHeader参照してて、それがないので怒られてるようだ。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ヤバい。&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)はVM Player上でWindows10を動かしてOfficeを使ってるので、&lt;!-- raw HTML omitted --&gt;これがないとマトモにお絵描きもできないし、仕事にも差し障る&lt;!-- raw HTML omitted --&gt;。&lt;/p&gt;
&lt;h2 id=&#34;切り分け&#34;&gt;切り分け&lt;/h2&gt;
&lt;p&gt;Webを探すといろいろ情報出てきたが、&lt;!-- raw HTML omitted --&gt;要するにシンボリックリンクがはられてない&lt;!-- raw HTML omitted --&gt;んじゃないの？&lt;br&gt;
とのことだった。&lt;/p&gt;
&lt;p&gt;が、同じようにシンボリックリンク貼ろうとしても、ディレクトリねえよ、とOSさんに怒られる。&lt;br&gt;
ディレクトリ先を探すと以下のような感じで、kernelは5.4.0-48ってバージョンかな？&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;で、リンク貼るコマンドで「uname -r」しとるんで、それ見ると。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;んん？&lt;br&gt;
なんじゃこりゃ。ヘッダーは5.4.0-48なのに、実際使ってるカーネルは4.15.0-118？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;このOS、何かあるな・・・&lt;!-- raw HTML omitted --&gt;。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;取り急ぎ、5.4.0-48のカーネルも入ってないようだったので、aptで入れて再起動してみたら、あっさりVM Player起動。&lt;/p&gt;
&lt;p&gt;めでたしめでたし。&lt;/p&gt;
&lt;h2 id=&#34;と思ったら無線lan使えん&#34;&gt;と思ったら無線LAN使えん&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;ヤバいです。&lt;/strong&gt;&lt;br&gt;
VM Playerが使えないどころじゃなく、PCが使えなくなってまった。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)家はWiMAXなので、無線LAN使えないとインターネット使えんくなってしまうのです。&lt;br&gt;
泣きながらスマホだったり、カーネルを4.15.0-118に戻したりしてインターネットで原因探索。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;ココに&lt;!-- raw HTML omitted --&gt;書いてあったのだけど、おそらくbcmwl-kernel-sourceつう、ドライバとカーネルを連携するモジュールが正しく入っていないのが原因とのこと。&lt;/p&gt;
&lt;p&gt;しかし、ここで困ったことが。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;カーネルを4.15.0-118で起動してもbcmwl-kernel-sourceは最新だよ、とのことで何も起こらない。&lt;/li&gt;
&lt;li&gt;カーネル5.4.0-48ではそもそもネットワーク繋がらんので依存関係を解決できない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;詰んだ＼(^o^)／&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;ワークアラウンド&#34;&gt;ワークアラウンド&lt;/h2&gt;
&lt;p&gt;往生際悪い田中(゜p゜)がこんなんで詰むわけねーだろ、ということで、&lt;strong&gt;秘密兵器登場&lt;/strong&gt;です。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;無線がダメなら有線で繋げばいいじゃない。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;左端のはプラネックスコミュニケーションのMZK-300N2つう製品で、無線LANクライアントとして接続して、有線に流してくれるという言わばコンバーターと言われるもの。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)は10年位前に買った気がするけど、まだ現役なんね。田中(゜p゜)の中では今でも秘密兵器です。&lt;br&gt;
無線LANしか使えないデータセンターで、サーバーをインターネット経由でライセンス認証するのにコッソリ使ったりした(笑)&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;はい。でココから先はアッサリ。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;過去の経験から、Linuxは有線LANドライバに対する要求がゆるいので、カーネル5.4.0-18の状態で有線LANはアッサリ繋がり、OSのアップデート要求するポップアップ出てきたので、それに従ってアップデート。&lt;/p&gt;
&lt;p&gt;なんか「kernel-modules-extra」とかいうのをインストールしたっぽいけどちゃんと見ていない。&lt;br&gt;
結果、再起動を要求されて、&lt;!-- raw HTML omitted --&gt;無事、無線LAN繋がりましたとさ。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;実は思い当たることが一つある。&lt;br&gt;
16.04時代からPC内蔵LANが上手く繋がらなくなって、&lt;!-- raw HTML omitted --&gt;BaffaloのWI-U2-433DMSという無線LANアダプタ&lt;!-- raw HTML omitted --&gt;を入れていたのだ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;コイツはOS標準のドライバではサポートされておらず、&lt;!-- raw HTML omitted --&gt;ソースダウンロードしてmake install&lt;!-- raw HTML omitted --&gt;した気がする。&lt;/p&gt;
&lt;p&gt;推測するに、Ubuntuのアップグレードプログラムが、&lt;strong&gt;カーネルを上げようとしたらLANが繋がらなくなってしまったので、カーネルを据え置いた&lt;/strong&gt;、というのが原因じゃなかろうか、という気がする。&lt;br&gt;
真相は不明。&lt;/p&gt;
&lt;p&gt;たぶん、Ubuntuのアップグレードは無線でコケる可能性高いんで、有線LANでやるのがいいんじゃないかと思う。&lt;br&gt;
※公式とかに書いてそうだけど読んでない(笑)&lt;/p&gt;
&lt;h2 id=&#34;ubuntu-2004ltsの使い勝手&#34;&gt;Ubuntu 20.04LTSの使い勝手&lt;/h2&gt;
&lt;p&gt;**なんか全体的に動きが早くなった。**インターネットだけじゃなく、デスクトップも。&lt;br&gt;
田中(゜p゜)はプラシーボ効果に対しては敏感なので、本当に早くなってるっぽい。&lt;/p&gt;
&lt;p&gt;要因としては&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;LXQTが速い&lt;/li&gt;
&lt;li&gt;カーネルが速い&lt;/li&gt;
&lt;li&gt;そもそもUSBの無線アダプタより、内蔵無線LANの方が性能良い。&lt;br&gt;
→ノートPCは、ディスプレイの周りに内蔵無線LAN用のアンテナ張り巡らしてるのです。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;が、考えられますが、&lt;strong&gt;まあメデタシメデタシ&lt;/strong&gt;、ですね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>VS Code RemoteでWordPressのコード管理</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1670/</link>
      <pubDate>Fri, 09 Oct 2020 11:22:23 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1670/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;VS Codeすげぇなぁ。&lt;br&gt;
MSの開発ツールなのにUbuntuでもMacでも使えるし。プラグインで大抵の言語のツール入るし。&lt;/p&gt;
&lt;p&gt;ということで、本日はリモート(SSH)でコード管理できる「&lt;!-- raw HTML omitted --&gt;VS Code Remote&lt;!-- raw HTML omitted --&gt;」導入してみました。&lt;br&gt;
もー、最初っからこれ入れとけば、Web UIとかviでチマチマ編集することなかったのに。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ご覧のように、WordPressサーバのCSSファイルに、VS Codeで気軽にアクセスして、補完機能の助け借りてコード編集できちゃいます。&lt;br&gt;
Web上で表示される色までサンプルが出てます。&lt;/p&gt;
&lt;p&gt;ま、本番のコードがサクッいじれちゃうのはちょっと怖いけど、検証環境のワークスペース分けといて、デプロイのルール定めとけばいいだけな気がする。&lt;/p&gt;
&lt;p&gt;よーし、お父さんVS CodeでCOBOLもゴリゴリ書いちゃうぞー！ (棒)&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了：プロジェクト失敗は誰のせい？</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1663/</link>
      <pubDate>Thu, 08 Oct 2020 13:54:18 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1663/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;毎日更新するつもりだったのに、仕事復帰しちゃってもうネタがねーんですよ。&lt;br&gt;
でも読んだ本のストックは山ほどあるんで、小出しにリリースしていきます。&lt;/p&gt;
&lt;p&gt;いやなに、SF本とかあやしいビジネス啓蒙本とか山ほど読んでるんで田中(゜p゜)。当分ネタはつきませんわ。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;Adsense停止食らってるからAmazonアソシエイトでサイト運営費用を回収しないとだしね。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;内容&#34;&gt;内容&lt;/h2&gt;
&lt;p&gt;・・・前置き長くなりましたが。&lt;br&gt;
この本は、プロジェクト失敗の要因をいかに回避し、リカバリするのか、というのをドラマ仕立てに書き上げたものになります。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;主人公は法務部なので、生臭い契約とスコープの話だったり、泥臭いリスク管理の話だったりが中心&lt;!-- raw HTML omitted --&gt;で、おおよそシステムとは関係ない話が中心。&lt;/p&gt;
&lt;p&gt;ただ、田中(゜p゜)はプロジェクトの成否はステークホルダーマネジメントにあると思ってるので、この本がユーザに伝えたい内容というのは痛いほど分かる。&lt;/p&gt;
&lt;p&gt;・・・分かる。&lt;br&gt;
・・・分かるんだが。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;現実のプロジェクトはこんなスンナリいかねーよ！！！！！！&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;と、思わずサイトのデザインポリシーに反して赤大字使っちゃうくらいのツッコミ。&lt;/p&gt;
&lt;p&gt;なにせ主人公周辺の人間は超人クラスの能力者だし、客の関係者も人数少なくてスンナリ納得しすぎだし、ダンプカーみたいにちゃぶ台ひっくり返す経営者もいないし。&lt;!-- raw HTML omitted --&gt;正直現実のプロジェクトはこの100倍は大変で、よしんば上手く行ったとしても、年単位での根回しとか調整が必要なアレ&lt;!-- raw HTML omitted --&gt;です。&lt;br&gt;
金融業界の人がドラマ半沢直樹にツッコミ入れてる気持ちがよく分かる。&lt;/p&gt;
&lt;p&gt;ただ、&lt;!-- raw HTML omitted --&gt;プロジェクトの成否がこういう生臭い/泥臭いモノで左右されるものだ&lt;!-- raw HTML omitted --&gt;というのは、キラキラを夢見ている若者たちにぜひ伝えたいところではあります。&lt;/p&gt;
&lt;p&gt;ちなみに日曜(10/11)夜もう一度来て下さい。&lt;br&gt;
記事で田中(゜p゜)がホンモノのドロドロを見せてあげますよ。(美味しんぼ調)&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>来ちゃった… ///  (Adsense警告が)</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1658/</link>
      <pubDate>Wed, 07 Oct 2020 13:56:50 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1658/</guid>
      <description>&lt;p&gt;まああれだけはっちゃけてクリックしちゃったからしょうがないすね。&lt;br&gt;
30日謹慎します。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ただ、広告は広告で賑やかしっぽくて、ないとなんだか寂しいんすよね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPressテーマ（Luxeritas）カスタマイズ記録</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1637/</link>
      <pubDate>Tue, 06 Oct 2020 14:03:14 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1637/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;もう新しい会社での勤務始まってしまってるというのに、サイトのデザインが気になってしまい、デフォルトのカスタマイズ機能に加え、CSSにも手を加え始めました。なんかもう収集着かない気がするけど。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://thk.kanzae.net/wp/&#34;&gt;Luxeritas&lt;/a&gt;テーマは前に使ってたCatch Boxに比べると遥かに動作が早く、カスタマイズ性に富んでます。&lt;br&gt;
昔田中(゜p゜)は自分のサイトのHTMLもCSSもJavascriptも手で書いてたので、便利になったものだなぁ、と感動することしきりです。&lt;/p&gt;
&lt;p&gt;備忘録も兼ねて、変更内容まとめときます。&lt;/p&gt;
&lt;h2 id=&#34;大まかな変更ポイント&#34;&gt;大まかな変更ポイント&lt;/h2&gt;
&lt;p&gt;だいたい以下のような感じです。だいぶイメージ変わりました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;サイト全体のカラーイメージを緑に変更。Androidはブラウザのヘッダーも緑に。&lt;/li&gt;
&lt;li&gt;フォントを丸っこく変更し、田中(゜p゜)のアレっぽさを向上。&lt;/li&gt;
&lt;li&gt;見出しのスタイルを変更&lt;/li&gt;
&lt;li&gt;Nest/Prevウィジェットのスタイル変更&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;luxeritasの外観カスタマイズ&#34;&gt;Luxeritasの外観カスタマイズ&lt;/h2&gt;
&lt;p&gt;これはWordPress管理機能だけでいけるので、詳しい手順は割愛。&lt;/p&gt;
&lt;p&gt;・フォント変更&lt;br&gt;
・背景色変更&lt;/p&gt;
&lt;h2 id=&#34;luxeritas-childのstylecssに追記&#34;&gt;Luxeritas Childのstyle.cssに追記&lt;/h2&gt;
&lt;p&gt;WordPressのテーマエディターからCSSを直接編集。対応する内容はコメントに追記。&lt;br&gt;
比較的ライト。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;luxeritas-childのadd-headersphpに追記&#34;&gt;Luxeritas Childのadd-headers..phpに追記&lt;/h2&gt;
&lt;p&gt;これも比較的カンタンなやつ。ヘッダのカラーを変更。ただしAndroidのみ。&lt;br&gt;
PHPなのでコメントは「#」で。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;luxeritasのstylecssカスタマイズ&#34;&gt;Luxeritasのstyle.cssカスタマイズ&lt;/h2&gt;
&lt;p&gt;これが一番しんどかったやつ。投稿下部のNext/Prevのアイコンサイズが大きくて気になって死にそうだったんだけど、ずっと画像だと勘違いして、テーマのフォルダをあさりまくったりした。&lt;br&gt;
これってフォントなんすね。こんな感じ。 → &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;コードはこんな感じ。&lt;br&gt;
&amp;lt;i class=”fas fa-home fa-lg”&amp;gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;いうことで、CSSの該当箇所を発見し、以下のように編集。正直、デフォルトはフォントの位置とか微妙に調整してあって、けっこう苦戦。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;「#」はコメントかと思ってたけど、Luxeritasの場合はOFF/ONできるウィジェットの変数？みたいですね。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;テーマへの理解深まりました。なんかCSSとかPHPもだんだん思い出してきた気がする。今だったらやりたいことはほぼ何でもできそう。&lt;br&gt;
でも、これ以上行くとHTML5とかになって、収集つかなくなるような気も。&lt;/p&gt;
&lt;p&gt;ま、勉強だからいいか。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Sitemapがイカれた</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1602/</link>
      <pubDate>Mon, 05 Oct 2020 14:16:05 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1602/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;sitemap.xmlを生成するプラグインをいくつか試していたら、どうやってもxmlが404で読めなくなってしまい、困り果てました。&lt;/p&gt;
&lt;p&gt;なんとなくPHPじゃなくて静的にsitemap.xmlを生成する&lt;a href=&#34;https://wordpress.org/plugins/google-sitemap-plugin/&#34;&gt;Sitemap by BestWebSoft&lt;/a&gt;というプラグインが悪さしてるっぽかったんだけど、どうにも原因がはっきりしない。アンインストールしてももどらん。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;原因&lt;/h2&gt;
&lt;p&gt;プラグインやWordPressが山ほど「.htaccess」に何か書いとった。これって、アクセス制御のために使うだけじゃないんですね。&lt;br&gt;
↓ 「.htaccess」の中身に、特定のリクエストした時にリダイレクトする処理が書いてあった。この画面ではコメントアウトしてるけど。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;.htaccessを色々ググッててわかったんですが、これ色々URLやコンテンツの処理書ける便利マクロ？なんすね。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;謎の呪文とか、魔法の文字列&lt;!-- raw HTML omitted --&gt;とか、おおよそIT業界に似つかわしくない言葉が並んでて笑った。&lt;br&gt;
昔、sendmail.cfなる謎の呪文マクロあったけど、それと同じようなものか。&lt;/p&gt;
&lt;p&gt;モチロン田中(゜p゜)はCF使ってましたよ。あとパフォーマンス問題でqmailとか好きだった。&lt;br&gt;
わかんねぇか・・・。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了：ティール組織</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1529/</link>
      <pubDate>Sun, 04 Oct 2020 03:25:34 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1529/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;この本は…、&lt;strong&gt;ヤバいですね。&lt;/strong&gt;&lt;br&gt;
常々田中(゜p゜)は&lt;!-- raw HTML omitted --&gt;会社とは利益よりもその社会貢献を優先すべきではないか&lt;!-- raw HTML omitted --&gt;、との考えを持ってましたが、実践してる企業がいて、かつその具体的なプロセス、移行方法、失敗談なども具体的に書かれてます。&lt;/p&gt;
&lt;p&gt;ただし、&lt;!-- raw HTML omitted --&gt;万人受けはしない&lt;!-- raw HTML omitted --&gt;と思います。&lt;br&gt;
自身の欲求レベルがそこに至っていないとなかなか刺さりづらい本だとは思う。&lt;/p&gt;
&lt;h2 id=&#34;キーワードを拾う&#34;&gt;キーワードを拾う&lt;/h2&gt;
&lt;p&gt;この本は、将来の会社組織としてのあり方を「従来型」と「進化(ティール)型」という観点で語ってます。&lt;br&gt;
「従来型」と「進化型」の主な違いをキーワードを3つで拾うと以下でしょうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;統制 ⇔ 自己経営&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;利益重視 ⇔ 存在目的重視&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;分業 ⇔ 全体性&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;進化型の企業について&#34;&gt;進化型の企業について&lt;/h2&gt;
&lt;p&gt;大半の日本企業は従来型に属するものかと思いますが、ティール組織の運営プロセスは従来のそれとは全く異なります。ココでは語りきれないので、本を見て下さい。田中(゜p゜)も従来型のプロセスに染まっちゃってる部分があって、反省しきりです。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は感覚的にザッポスやサウスウエスト航空なんかは近しいのかな、と思ってましたが、ほぼ当たりでした。また、コレを実行しようとした時に、従来型の株主との対立が生じるのではないかという想像もほぼ当り。&lt;br&gt;
次に読むのは「ザッポス伝説」とか、ホラクラシーについての本かなぁ。&lt;/p&gt;
&lt;p&gt;CEOは従来型の意思決定プロセスに関わる必要はないですが、そのカルチャーを浸透させるのに、ステークホルダー間を駆けずり回る必要ありそうですね。既存の会社が従来型だと恐ろしくハードルが高い。日本はトップダウンが難しいので特にハードル上がりそう。&lt;/p&gt;
&lt;p&gt;これ実践してるどの会社もそうでしたが、&lt;!-- raw HTML omitted --&gt;これやるんだったら自分の会社立ち上げたほうが速い&lt;!-- raw HTML omitted --&gt;ですね。&lt;br&gt;
日本でやってる企業あるのかな？ 知名度は高くなさそうだけど。&lt;/p&gt;
&lt;h2 id=&#34;田中pのポジション&#34;&gt;田中(゜p゜)のポジション&lt;/h2&gt;
&lt;p&gt;どっかの記事に書いた通り、このティール型組織は田中(゜p゜)の理想に極めて近いです。つまり利益よりも社会貢献。&lt;br&gt;
ただ、いかに自分が進化型組織を目指して行動したとしても、どの会社行ってもギャップがあり、田中(゜p゜)は苦しいです。&lt;!-- raw HTML omitted --&gt;事例で2つくらいの企業が従来型に戻ってました&lt;!-- raw HTML omitted --&gt;が、CEOが進化型であってさえそうなのです。&lt;/p&gt;
&lt;p&gt;とはいいつつも、従来型の経営に行き詰まりがあるのは、世界の経済動向見てても明らかなのかな、と思うので、いずれこうした進化型の組織が主流の時代になるのかな、とは思います。&lt;/p&gt;
&lt;p&gt;こうした現在のメインストリームとのギャップが明らかになったこと、それから&lt;!-- raw HTML omitted --&gt;進化型の組織がどのようなプロセスで運営されているか知れた&lt;!-- raw HTML omitted --&gt;のは、田中(゜p゜)にとって非常に有意義でした。&lt;br&gt;
また数年後、世間の流れが変わった時に振り返ってみると、新しい発見がありそうな、良い本でした。&lt;/p&gt;
&lt;h2 id=&#34;余談&#34;&gt;余談&lt;/h2&gt;
&lt;p&gt;こうした個人主義、競争主義よりも、全体(世界)への貢献を重視すべき、というのは、経営の世界だけの話じゃないんじゃないでしょうか。こないだ紹介した&lt;!-- raw HTML omitted --&gt;アドラー心理学の本&lt;!-- raw HTML omitted --&gt;もそうだったし。&lt;/p&gt;
&lt;p&gt;ちなみに田中(゜p゜)はこういう本読む前、2015年位だったかな？ &lt;!-- raw HTML omitted --&gt;京都に宿坊に行った時に、禅寺の和尚さんから学びました&lt;!-- raw HTML omitted --&gt;よ。&lt;br&gt;
禅は言葉の人工性を否定するので、こんなふうに文章で書いてみたところで、内面で捉えた事象を正確には伝えられないんですけどね。言葉って難しいんだよなぁ。&lt;/p&gt;
&lt;p&gt;※たぶんこのエントリ見られたら、和尚さんに勝手な解釈すんなって怒られそう。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Google Search ConsoleでSitemap読み込みに成功！</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1522/</link>
      <pubDate>Sat, 03 Oct 2020 14:18:22 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1522/</guid>
      <description>&lt;p&gt;何言ってるか分からねーと思いますが、SEO対策を始めた人間にとって、&lt;a href=&#34;https://search.google.com/&#34;&gt;Google Search Console&lt;/a&gt; に対するsitemap.xml読み込みは死活問題なのです。いくら良いコンテンツを作成しても、Google様の検索に引っかからなければ、意味がないのです。&lt;/p&gt;
&lt;p&gt;すいません。&lt;br&gt;
田中(゜p゜)もアフェリで一発当ててえとかじゃなくてこのサイト運営に月額1000円ほどかかるので、そのくらいは回収させていただきたく、SEOを実施しております。&lt;/p&gt;
&lt;h2 id=&#34;事象&#34;&gt;事象&lt;/h2&gt;
&lt;p&gt;↓コレ。いつ何時、何回やってもsitemap.xmlが読み込まれない。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.google.com/search?q=sitemap+%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BE%E3%82%8C%E3%81%AA%E3%81%84&amp;amp;oq=sitemap++%E8%AA%AD%E3%81%BF%E8%BE%BC%E3%81%BE%E3%82%8C%E3%81%AA%E3%81%84&amp;amp;aqs=chrome..69i57.9366j0j9&amp;amp;sourceid=chrome&amp;amp;ie=UTF-8&#34;&gt;google様で「sitemap ＋ 読み込まれない」で検索&lt;/a&gt;すると、Googleのサポートに山ほどトピックできてて、どれも解決してない根深い問題。中の人も、たぶんバグで読み込まれてるよ、みたいな適当な回答。&lt;/p&gt;
&lt;h2 id=&#34;ワークアラウンド&#34;&gt;ワークアラウンド&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;WordPressで&lt;strong&gt;Google XML Sitemaps&lt;/strong&gt;プラグインを入れます。&lt;/li&gt;
&lt;li&gt;プラグインを適当に設定します。&lt;/li&gt;
&lt;li&gt;search ConsoleのサイトマップのURLに「&lt;strong&gt;/index.php?xml_sitemap=params=&lt;/strong&gt;」と入力します。&lt;/li&gt;
&lt;li&gt;読み込みが成功します。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;このURLというのは、パーマリンクの設定が基本(無効)じゃないと出てこない、プラグインが生成しているURLです。&lt;br&gt;
つまり、&lt;!-- raw HTML omitted --&gt;プラグインがパーマリンクとしてsitemap.xmlを見せとる&lt;!-- raw HTML omitted --&gt;ということです。&lt;/p&gt;
&lt;p&gt;ですが、&lt;strong&gt;なんでこっちの生のURLの方がsearch console通るのかは全然分かりません&lt;/strong&gt;！&lt;/p&gt;
&lt;h2 id=&#34;その後&#34;&gt;その後&lt;/h2&gt;
&lt;p&gt;残念ながら、他のプラグインでも、&lt;!-- raw HTML omitted --&gt;パーマリンクで特定のURLを生成しているものがいくつか発覚&lt;!-- raw HTML omitted --&gt;し、&lt;!-- raw HTML omitted --&gt;パーマリンクを使わないという昨日の方針はもろくも崩れ去りました。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;つまりまたもや&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;リンク修正地獄。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;br&gt;
ま、今回は生リンクで貼り直してたんで、修正してなくても問題ないんですけどね。&lt;/p&gt;
&lt;p&gt;なんか、このあたりまとめて個人用のWordPressの運用ベストプラクティスとしてまとめようかしら。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPressのスラッグで大事故</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1469/</link>
      <pubDate>Fri, 02 Oct 2020 18:26:26 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1469/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;たぶん&lt;a href=&#34;https://thk.kanzae.net/wp/&#34;&gt;テーマ&lt;/a&gt;の挙動なんだろうけど、スラッグの構造が変わってしまい、リンク全部貼り直しました。&lt;/p&gt;
&lt;h2 id=&#34;スラッグとは&#34;&gt;スラッグとは&lt;/h2&gt;
&lt;p&gt;サイトのURLの特定の文字列を、Wordpressの記事IDに紐付ける仕組みで、例えば&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;スラグ無しオリジナル&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://tmp-net.biz/&#34;&gt;https://tmp-net.biz/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;?page_id=189&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;スラッグ有り&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://tmp-net.biz/&#34;&gt;https://tmp-net.biz/&lt;/a&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;記事一覧/ITコンサルタントとは？&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;という感じで、サイト構造に合わせてURLをか分かりやすいものにできる便利な機能で、田中(゜p゜)も気に入っていて使っていました。&lt;br&gt;
SEOサイトで、検索にかかりやすくなるので日本語URLオススメ！みたいな記事もあったしね！&lt;/p&gt;
&lt;h2 id=&#34;テーマ適用後に小トラブル&#34;&gt;テーマ適用後に小トラブル&lt;/h2&gt;
&lt;p&gt;ただ、先日採用したテーマは、バリデーション(入力値)チェックでスラッグに&lt;!-- raw HTML omitted --&gt;日本語、英大文字が使えない&lt;!-- raw HTML omitted --&gt;ようなのです。&lt;br&gt;
具体的にいうと上のURLは、&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://tmp-net.biz&#34;&gt;https://tmp-net.biz&lt;/a&gt;**/&lt;!-- raw HTML omitted --&gt;page-392/it/&lt;!-- raw HTML omitted --&gt;**&lt;/p&gt;
&lt;p&gt;という感じに強制変換されてしまうのです。&lt;br&gt;
当初は新規作成した記事だけがそうなっていて、苦々しい気持ちでいっぱいだったんですが、それでも我慢して使ってました。&lt;/p&gt;
&lt;h2 id=&#34;そして大事故&#34;&gt;そして大事故&lt;/h2&gt;
&lt;p&gt;ある日、サイトのメニュー構成のパートで手が滑ってしまい、階層がずれたメニューを元に戻したところ、結果&lt;!-- raw HTML omitted --&gt;メニュー配下の記事のスラッグが全てバリデーションチェックの対象となってしまう&lt;!-- raw HTML omitted --&gt;大事故&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;に。&lt;/p&gt;
&lt;p&gt;つまり固定で書いてたリンクも全てリンク切れ。&lt;br&gt;
&lt;strong&gt;リンク修正地獄&lt;/strong&gt;のはじまりです。&lt;/p&gt;
&lt;h2 id=&#34;修正に当たって&#34;&gt;修正に当たって&lt;/h2&gt;
&lt;p&gt;取り急ぎ翻訳ツール使っての英語化や、やっつけでのリンク修正も考えましたが、テーマ変えたり,環境変えたりして事故ったらたまらんので、WodPressのOriginに近いものにしよう、ということで、&lt;!-- raw HTML omitted --&gt;当サイトの内部リンクは全てスラッグを止め、WordPressのページID表記&lt;!-- raw HTML omitted --&gt;となりました。&lt;/p&gt;
&lt;p&gt;リンクチェッカー使ったりして場所は確認したけど、修正はほぼ手動。&lt;br&gt;
&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;しんだ。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;結果&lt;/h2&gt;
&lt;p&gt;階層構造ではなくなったけど、まあシンプルにはなったので、田中(゜p゜)としては満足。&lt;br&gt;
あと、階層構造と日本語化を勧めるSEOサイトには憎しみの気持ち(笑)&lt;/p&gt;
&lt;p&gt;ただ、影響は内部だけかと思ったら、&lt;!-- raw HTML omitted --&gt;外部からのリンクや、検索結果のリンクが全てリンク切れ&lt;!-- raw HTML omitted --&gt;に。orz&lt;br&gt;
いや、当サイトはまだ1ヶ月ちょっとしか経ってないので、影響は最小限と思われますが。&lt;/p&gt;
&lt;h2 id=&#34;教訓&#34;&gt;教訓&lt;/h2&gt;
&lt;p&gt;テーマも、スラッグ機能も便利で、色々やってくれるスグレモノですが、&lt;!-- raw HTML omitted --&gt;何をやってるのかを理解して使わないと、事故った時にえらいことになるんだなー&lt;!-- raw HTML omitted --&gt;、というのが教訓でした。&lt;/p&gt;
&lt;p&gt;あと、普段はいい加減なのに、こういう構造とかが異常に気になる自分の性格はなんとかしたい。&lt;br&gt;
怖いし、めんどくさいので触らない、というのも選択肢としてはアリだと思うんですよね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>よやっとサイト移行落ち着いたかな？</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1442/</link>
      <pubDate>Thu, 01 Oct 2020 16:15:29 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1442/</guid>
      <description>&lt;p&gt;テストサイトがあまりにうまく行ったので、勢いで移行しちゃいましたが、デプロイ時のTypoやテーマの挙動に苦しみました。&lt;br&gt;
が、ようやっと今日になってそこそこ納得行く結果になったかもしれない。&lt;br&gt;
これを契機にAdsenseも配置してみましたが、ユーザビリティを損なわずに上手く配置できた。…気がする。&lt;/p&gt;
&lt;p&gt;添付画像の赤枠が腐ってたキャッシュで、ココにIPが入っちゃってました。そのせいか、サイトのスピードも落ちていたような。&lt;br&gt;
※たぶんテーマが悪いんじゃなくて、田中(゜p゜)の使い方がトンチキなだけ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;今回の結果を受けて、&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/migration-site-to-gae/&#34;&gt;GAE移行のエントリに、運用時の注意点も追記&lt;/a&gt;しました。&lt;br&gt;
はー。疲れたわぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>よやっとサイト移行落ち着いたかな？</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1401/</link>
      <pubDate>Thu, 01 Oct 2020 12:20:27 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1401/</guid>
      <description>&lt;p&gt;テストサイトがあまりにうまく行ったので、勢いで移行しちゃいましたが、デプロイ時のTypoやテーマの挙動に苦しみました。&lt;br&gt;
が、ようやっと今日になってそこそこ納得行く結果になったかもしれない。&lt;br&gt;
これを契機にAdsenseも配置してみましたが、ユーザビリティを損なわずに上手く配置できた。…気がする。&lt;/p&gt;
&lt;p&gt;添付画像の赤枠が腐ってたキャッシュで、ココにIPが入っちゃってました。そのせいか、サイトのスピードも落ちていたような。&lt;br&gt;
※たぶんテーマが悪いんじゃなくて、田中(゜p゜)の使い方がトンチキなだけ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;今回の結果を受けて、&lt;a href=&#34;https://y2tanaka.github.io/git-pages/?p=1104/&#34;&gt;GAE移行のエントリに、運用時の注意点も追記&lt;/a&gt;しました。&lt;br&gt;
はー。疲れたわぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GAEのエッジキャッシュ・テーマ・Adsenseに苦戦…。</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1373/</link>
      <pubDate>Wed, 30 Sep 2020 12:02:37 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1373/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;転職前のボーナス期間も今日までなので、サイトの仕上げにかかってます。&lt;br&gt;
やった内容は以下二点。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;軽量化・デザイン向上目指して&lt;!-- raw HTML omitted --&gt;Luxeritas&lt;!-- raw HTML omitted --&gt;テーマの導入&lt;/li&gt;
&lt;li&gt;AddSenseの導入&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;しかし、GAEの仕様、Adsenseの仕様、テーマの仕様に苦戦…。&lt;br&gt;
別々にやればよかったんだけど、テーマ入れたタイミングでAdsenseのOK出るんだもんなー。もうグダグダです。&lt;/p&gt;
&lt;h2 id=&#34;苦戦ポイント&#34;&gt;苦戦ポイント&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;そもそもLuxeritasとAddsenseの仕様把握に苦戦&lt;/li&gt;
&lt;li&gt;LuxeritasのjsコードにローカルIPが埋め込まれており、取り除くのに苦戦&lt;/li&gt;
&lt;li&gt;直したと思ったら、GAEのエッジキャッシュが効いてすぐには反映されず&lt;/li&gt;
&lt;li&gt;app.yamlにTypoあり、jsじゃなくて&lt;strong&gt;jsi&lt;/strong&gt;を対象にしてしまってた。バカすぎ。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ChromeのF12で赤字探してエラー潰しまくってるんですが、田中(゜p゜)のPCのブラウザ、シークレットタブ、スマホ、&lt;strong&gt;ぜんぶ見た目が違います&lt;/strong&gt;。&lt;br&gt;
一体全体ユーザ様からはどう見えてるんだろうか。&lt;/p&gt;
&lt;p&gt;あと、せっかく&lt;a href=&#34;https://developers.google.com/speed/pagespeed/insights/?hl=JA&#34;&gt;PageSpeed(Googleのサイト構成チェックツール)&lt;/a&gt;で、前のテーマから30ポイント近く向上したのに、Adsenseのせいで元に戻った。orz&lt;br&gt;
いや、自分の所のツールなんだから、少し甘くしてくれても良さそうなものなのに。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;昔々、Webサイトを手で全部書いてたので、コンポーネント組み合わせるだけだろー、とか思ってたら、ぜんぶ高機能すぎてホントウに大変です。&lt;br&gt;
イマドキのWebエンジニア様って大変なんだなぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>記事更新</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1243/</link>
      <pubDate>Tue, 29 Sep 2020 08:09:20 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1243/</guid>
      <description>&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;結局、GAEの使い勝手がかなり良くなっていたので、サラッとこのサイト移行して記事化しちゃいました。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/migration-site-to-gae/&#34;&gt;WordPress on GAEに移行&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;GKEどうしよ…。 意外とハードが深く絡んでて、個人で検証するにはしんどいんだなぁ。&lt;br&gt;
ちなみに田中(゜p゜)は転職に伴い有給休暇を頂いており、10月から新しい仕事になりますが、ここまで3割英語、3割ブログ4割GCPという感じでしたね。&lt;/p&gt;
&lt;p&gt;前のお仕事が、なかなか勉強の時間も取れないようなレガシーなお仕事だったので、学習意欲という面ではだいぶ満たされました。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>GCEでSSHエラーが出る時の対処法</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1180/</link>
      <pubDate>Mon, 28 Sep 2020 22:08:24 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1180/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;いやー、ハマりました。4時間位無駄にしてしまったかも。&lt;/p&gt;
&lt;p&gt;ハマったので備忘録ついでにワークアラウンド書いておきます。&lt;br&gt;
スクリーンショット取っておかなかったのが悔やまれますな。&lt;/p&gt;
&lt;h2 id=&#34;事象&#34;&gt;事象&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;GCEにSSHアクセス時に、「&lt;strong&gt;Permission denied (publickey,gssapi-keyex,gssapi-with-mic).&lt;/strong&gt;」エラーが出る。&lt;/li&gt;
&lt;li&gt;ローカルSSHでもクラウドシェルでも事象は同じ&lt;/li&gt;
&lt;li&gt;鍵を手動作成しても事象は変わらない。&lt;/li&gt;
&lt;li&gt;特定のプロジェクトだけで事象が発生&lt;/li&gt;
&lt;li&gt;正常なプロジェクトと比較すると、GCEの「メタデータ」に鍵が作成されている。何度消しても蘇る。正常なプロジェクトは、「認証鍵鍵生成」タブに生成される。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;参考にしたサイト外部リンク&#34;&gt;参考にしたサイト(外部リンク)&lt;/h2&gt;
&lt;p&gt;同様の事象で悩んでた方。田中(゜p゜)はこれで解決しなかった。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://qiita.com/keisukeYamagishi/items/baff3383a95bdd829636&#34;&gt;https://qiita.com/keisukeYamagishi/items/baff3383a95bdd829636&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;Google公式SSHトラブルシューティング。相変わらずわかりにくい…。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh?hl=ja&#34;&gt;https://cloud.google.com/compute/docs/troubleshooting/troubleshooting-ssh?hl=ja&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;ワークアラウンド&#34;&gt;ワークアラウンド&lt;/h2&gt;
&lt;p&gt;ダメだったときには次に行く感じで、上から順に実行してます。これで鍵の再作成が走り、だいたい復旧します。&lt;br&gt;
任意のユーザ名はローカルのログインユーザに合わせ、任意の鍵名はホントに任意です。どうせ再作成されるので。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;コンソールのGCEのページで出力されるコマンドに、以下の太字部分を追加。&lt;br&gt;
gcloud compute ssh –zone “&amp;lt;ゾーン名&amp;gt;” “&lt;strong&gt;&amp;lt;任意のユーザ名&amp;gt;&lt;/strong&gt;@&amp;lt;対象のマシン名&amp;gt;” –project “&amp;lt;プロジェクトID&amp;gt;” &lt;strong&gt;–ssh-key-file=~/.ssh/&amp;lt;任意の鍵名&amp;gt; –force-key-file-overwrite&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;「1」に加えて「rm-rf ~/.ssh/google*」実行。&lt;/li&gt;
&lt;li&gt;「1」「2」に加えて、GCEのメタデータのsshKeys(任意のユーザ名に対応するもの)、認証鍵生成のタグにあるユーザを全て削除。&lt;/li&gt;
&lt;/ol&gt;
&lt;pre&gt;&lt;code&gt;ただ、**メタデータの削除については、正直プロジェクト内での設計を確認したほうが良い**です。他に影響出てしまうかも。  

あくまでワークアラウンドなので、根本原因、解決策お持ちの方は教えて下さい…
&lt;/code&gt;&lt;/pre&gt;
&lt;h2 id=&#34;トリガー&#34;&gt;トリガー？&lt;/h2&gt;
&lt;p&gt;正常なプロジェクトとの違いは以下のような感じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;GKEでクラスタ作った&lt;/li&gt;
&lt;li&gt;AppEngine、およびGAEのAPIを有効化した&lt;/li&gt;
&lt;li&gt;CloudSQL利用のためにサービスアカウントへの権限付与、およびAPIを有効にした。&lt;/li&gt;
&lt;li&gt;他プロジェクトからイメージ引っ張るためにIAMをゴニョゴニョした&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;参考サイトにもありますが、正直どうしてこうなるのか全く持って不明です。&lt;br&gt;
こういう時、AWSなら事例がたくさんあって楽なのにな…。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress on GAE Standard  構築(済)</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1091/</link>
      <pubDate>Sun, 27 Sep 2020 08:26:19 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1091/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1074/&#34;&gt;前回のKusanagi on GKEギブアップ&lt;/a&gt;からまだ懲りてません(笑)&lt;br&gt;
今度は&lt;!-- raw HTML omitted --&gt;Google App Engine(GAE)&lt;!-- raw HTML omitted --&gt;を使ってWordPressを構築します。&lt;/p&gt;
&lt;p&gt;ちなみにStandardの方で構築するので、CloudSQL以外は、&lt;strong&gt;使った分だけお金を支払えばよいというスグレモノ&lt;/strong&gt;。しかもスケーリングも証明書も、何もかもやってくれるオマケ付き。&lt;/p&gt;
&lt;p&gt;間違えてフレキシブルで構築すると、自由度が高い代わりにGCEインスタンス代がコンスタントにかかってしまうので注意です。比較表はこちら(外部サイト) &lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.serversus.work/topics/5jbu7y90jk81kcdqfzf0/&#34;&gt;https://www.serversus.work/topics/5jbu7y90jk81kcdqfzf0/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;進捗状況&#34;&gt;進捗状況&lt;/h2&gt;
&lt;p&gt;今回のは&lt;strong&gt;実はもうサイトできてます&lt;/strong&gt;。既存のサイトからの移行方法も検証済。&lt;br&gt;
&lt;a href=&#34;http://www.tmp-net.biz/&#34;&gt;サイトはこちら。&lt;/a&gt; ※2020/09/29追記 移行しちゃったのでもうありません。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ハハッ。&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)の技術者としての能力も捨てたもんじゃないね！&lt;/p&gt;
&lt;p&gt;というか、田中(゜p゜)は昔この構成でWordPressやったことあるんですけどね！&lt;br&gt;
最近チュートリアルがアップデートされて、画像ファイルとかの扱いがさらに容易くなりました。&lt;/p&gt;
&lt;p&gt;GKEであれだけ苦戦してたのがウソのよう。&lt;br&gt;
&lt;strong&gt;GAEサイコー!&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;運用上の注意点&#34;&gt;運用上の注意点&lt;/h2&gt;
&lt;p&gt;ただし、そんなに上手い話は世にはなかなかないのです。&lt;br&gt;
カンタンにできるから真似してみよう！ と思われる方のために注意点。&lt;/p&gt;
&lt;p&gt;この構成の一番の問題は、GAEに上げちゃったが最後、&lt;strong&gt;WPのGUIから更新できないものが発生する&lt;/strong&gt;ことです。&lt;/p&gt;
&lt;p&gt;更新できないものを以下に並べます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;プラグイン(設定は除く)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;テーマ(設定は除く)&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;投稿・固定ページへの直接画像貼り付け(メディアライブラリからはOK)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3つともかなり致命的だと思います。&lt;br&gt;
これに関連してWP側でエラーが出ることがありますが、そもそもGAEはディスクに書き込めないものだというのを知っておかないと混乱します。&lt;/p&gt;
&lt;h2 id=&#34;回避方法&#34;&gt;回避方法&lt;/h2&gt;
&lt;p&gt;カンタンにいうと、&lt;strong&gt;ローカルにサーバを立てて、そこで管理&lt;/strong&gt;します。&lt;br&gt;
&lt;strong&gt;GAEはCloudSQL Proxyってのを使わないとCloudSQLには接続できない&lt;/strong&gt;ので、ローカルにも同じプロキシを入れてDBにアクセスできるようにします。&lt;br&gt;
&lt;strong&gt;図中の①です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;また、ローカルのWordPressは、環境構築した後、yaml書いてGAEにデプロイします。&lt;br&gt;
&lt;strong&gt;図中②の部分&lt;/strong&gt;です。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;じゃあ更新はどうするのか&lt;/strong&gt;というと、ローカルにPHPサーバ構築して、WordPressのGUIを動かして更新します。&lt;/p&gt;
&lt;p&gt;記事はDBに書かれるので特にアクションは必要ないですが、&lt;strong&gt;画像、テーマ、プラグインを更新した場合は②のデプロイが必要になります。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;デプロイはワンライナーですけど&lt;strong&gt;めんどくせえ・・・。&lt;/strong&gt;&lt;br&gt;
けど、WordPressをクラスタ化したら、どのみち更新用の端末とか必要になってきそうだしなー。&lt;/p&gt;
&lt;h2 id=&#34;構築方法&#34;&gt;構築方法&lt;/h2&gt;
&lt;p&gt;それでもやりたい方のために、構築を方法を書きます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;つ Googleのチュートリアル。&lt;/strong&gt;&lt;br&gt;
&lt;a href=&#34;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&#34;&gt;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;…というだけでは投稿の意味がないので、注意点を少し。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;チュートリアルにミス。&lt;br&gt;
×php vendor/bin/wp-gae&lt;br&gt;
○php vendor/bin/wp-gae create&lt;/li&gt;
&lt;li&gt;WP CLIのインストールは、チュートリアルじゃなくて公式のほうが良い。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://wp-cli.org/ja/&#34;&gt;https://wp-cli.org/ja/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;サーバの作り方が書いてないが、php、php-mysqlインストールして、以下で行ける。&lt;br&gt;
cd &amp;lt;WordPressのフォルダ&amp;gt;&lt;br&gt;
php -S 127.0.0.1:9000&lt;br&gt;
ブラウザでhttp://127.0.0.1:9000/にアクセス。&lt;/li&gt;
&lt;li&gt;ただし遅いので、レスポンス気になるならきちんとサーバ立てたほうが良い。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;更新の早い世の中ですから、公式と最新版のギャップは大きくなっていくものと思われます。もちろんこのブログもです。&lt;/p&gt;
&lt;p&gt;以下、既存のWordPressサイトからの移行方法ですので、新規の方は見なくて良いと思います。&lt;/p&gt;
&lt;h2 id=&#34;移行方法1-移行用プラグイン利用&#34;&gt;移行方法1： 移行用プラグイン利用&lt;/h2&gt;
&lt;p&gt;要は&lt;strong&gt;移行用プラグインを&lt;/strong&gt;移行元と移行先に入れて、エクスポート→インポートするだけのはずですが、ローカルのホスト名が127.0.0.1なので、サイト内でのURL整合性が取れなくなります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;賢い移行ツールは、インポート先のホスト名を見て、DBなり設定ファイルなりを書き換えてしまう&lt;/strong&gt;のです。そのおかげで、見た目キレイに移行できるんですけどね…。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)がこれを解決するためにやったのは、以下のような感じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;念の為、移行元サイトの絶対パスを相対パスに書き換えておく。&lt;!-- raw HTML omitted --&gt;このあたり参照&lt;!-- raw HTML omitted --&gt;(外部サイト)&lt;br&gt;
スタティックに書いてるやつは修正が必要かもしれない。&lt;/li&gt;
&lt;li&gt;ツールで移行元からおもむろにエクスポート&lt;/li&gt;
&lt;li&gt;host等で移行先サイトのFQDNを、127.0.0.1で解決できるようにしておく。&lt;/li&gt;
&lt;li&gt;php -S &amp;lt;移行先のFQDN&amp;gt;:80&lt;br&gt;
コマンドでサーバを起動し、ブラウザでhttp://&amp;lt;移行先のFQDN&amp;gt;/にアクセス。&lt;br&gt;
※移行先と混乱しないよう、PING等で事前に宛先確認。あとCloudSQL Proxyの起動を忘れないこと。&lt;/li&gt;
&lt;li&gt;ツールでおもむろにローカルにインポート&lt;/li&gt;
&lt;li&gt;GAEにデプロイ&lt;/li&gt;
&lt;li&gt;外部確認の際は、hostsは元に戻す&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;こうすると賢いツールさんも、自分が移行先にいるのだと勘違いして、正しくない設定を入れてくれます。※デプロイ先では正しい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;それでもテーマ設定等、一部の設定は反映されない&lt;/strong&gt;ので、サイト全体に渡って確認必要です。それと、一部のプラグインは入れ直しが必要かもしれません。&lt;/p&gt;
&lt;p&gt;デプロイした後にファイルを勝手に書くような、お行儀の悪いプラグインは削除ですね。&lt;/p&gt;
&lt;h2 id=&#34;移行方法2-力こそパワー&#34;&gt;移行方法2： 力こそパワー&lt;/h2&gt;
&lt;p&gt;すみません。&lt;br&gt;
要するに、多くのサイトがやっているWordPressの標準機能を使うやり方です。田中(゜p゜)も念の為やってみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移行元WPの管理画面のツール→エクスポートでDBをエクスポート&lt;/li&gt;
&lt;li&gt;移行元のwp-contentフォルダをダンロードし、ローカルのwp-contentにコピー&lt;/li&gt;
&lt;li&gt;移行元のエクスポートファイルを移行先にインポート&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;で、キレイに行くはずなんですが、全然見た目が反映されません。おそらく以下はDBのどこかに保存されていて、エクスポートでは出ないものと思われます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;プラグインの設定&lt;/li&gt;
&lt;li&gt;テーマ設定&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;プラグインの設定はともかく、テーマ設定は非常にしんどいです。&lt;/p&gt;
&lt;p&gt;この方法はDBや設定ファイルに余計なことしないので、わかりやすくはありますが、&lt;strong&gt;移行後の作業量がエグい&lt;/strong&gt;です。&lt;/p&gt;
&lt;h2 id=&#34;田中pの既存サイトはどうするのか&#34;&gt;田中(゜p゜)の既存サイトはどうするのか&lt;/h2&gt;
&lt;p&gt;結局、ローカルにコンテンツ置いとかなきゃいけないのがリスキーな気がしていましたが、コンテンツはクラウドにあってなくなるわけじゃないですし、この後Gitなどでの運用の学習も考えると、**デプロイ前提でどこかに置いておく、**というのは悪くない気がしてきました。&lt;/p&gt;
&lt;p&gt;大規模な運用を鑑みると、結局更新用端末と、閲覧用のサーバー分けなきゃいけないような気がしますしね。&lt;/p&gt;
&lt;p&gt;何より、GAEのコスパと性能がダントツだし、面倒だったHTTPS化と証明書のインポートをごくサラッとやってくれたので、&lt;strong&gt;ちょっと移行しちゃおうかなー&lt;/strong&gt;、なんて考えています。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Kusanagi on GKEチャレンジ その5  ギブアップ</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1074/</link>
      <pubDate>Sat, 26 Sep 2020 04:38:45 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1074/</guid>
      <description>&lt;p&gt;タイトルに書いた通り&lt;strong&gt;今回を持ってギブアップ&lt;/strong&gt;でございます。残念です。&lt;br&gt;
以下に経緯と理由書きます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1044/&#34;&gt;Kubenetesチャレンジ その1&lt;br&gt;
&lt;/a&gt; &lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1052/&#34;&gt;Kubenetesチャレンジ その2&lt;br&gt;
&lt;/a&gt; &lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1059/&#34;&gt;Kubenetesチャレンジ その3&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1066/&#34;&gt;Kubenetesチャレンジ その4&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;そもそもの要件は何だったのか&#34;&gt;そもそもの要件は何だったのか&lt;/h2&gt;
&lt;p&gt;やってるうちに自分でも何がしたかったんだか分からなくなってきたので今一度整理しますが、そもそもの要件は、「&lt;strong&gt;&lt;a href=&#34;https://kusanagi.tokyo/cloud/kusanagi-runs-on-docker/&#34;&gt;Kusanagi on Docker&lt;/a&gt;のイメージそのままに、yamlちょろっと書き換えてGKEに上げたいなー&lt;/strong&gt;」です。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;こちらもKusanagi on Dockerやってらっしゃいます&lt;!-- raw HTML omitted --&gt;が、イメージは自身で作成されたものをGCRからPullする形になってます。&lt;/p&gt;
&lt;p&gt;バージョンがコロコロ変わることを考えると、**公式DockerHUBからPullしてGKEにデプロイできないかな、**というのが狙いでした。&lt;/p&gt;
&lt;h2 id=&#34;敗因&#34;&gt;敗因&lt;/h2&gt;
&lt;p&gt;えー、簡潔にいうと、Kusanagiプロビジョニング時に利用する&lt;strong&gt;シェルスクリプト&lt;/strong&gt;をGKE用にカスタマイズできない、&lt;strong&gt;もしくはカスタマイズにとてつもなく時間がかかる&lt;/strong&gt;、からです。&lt;/p&gt;
&lt;p&gt;以下の図を見て下さい。&lt;br&gt;
青線はボリュームのマウント状態、緑はコマンド実行の流れです。DockerへのKusanagiプロビジョニングは**「kusanagi-docker(.sh)」で実行**されますが、ステップは主に以下の3つです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;①変数から環境設定ファイル、dockerデプロイ用yamlファイル作成。&lt;/li&gt;
&lt;li&gt;②docker-compose経由でコンテナをデプロイ&lt;/li&gt;
&lt;li&gt;③(たぶん)config用コンテナにゴニョゴニョして環境設定。&lt;strong&gt;ローカルで環境設定した&lt;/strong&gt;WordPressをインストール。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;※簡略化するために、色々すっ飛ばしてます。&lt;/p&gt;
&lt;p&gt;①②は問題ないです。田中(゜p゜)がちょいyaml書き換えて、GKEに問題なくデプロイできてます。&lt;br&gt;
&lt;strong&gt;問題は③です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ちょろっとシェルスクリプト修正すりゃーkubectl化できる話じゃないのです。&lt;br&gt;
ファイルが十数個にまたがってるのと、docker、docker-compose、wp-cliコマンドフル活用で、流れ追うのもやっと。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;そもそもコレをkubectlに変換すんの？ つうかできんの？&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;立ち止まって考えてみた結果&#34;&gt;立ち止まって考えてみた結果&lt;/h2&gt;
&lt;p&gt;そもそもの要件は「&lt;strong&gt;ちょろっとyaml書き換えてGKEに上げよう！&lt;/strong&gt;」だったので、&lt;strong&gt;シェルスクリプトを重厚に書き換えるのは脱線しすぎ&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;よしんばコミュニティへの貢献とかのために、頑張って田中(゜p゜)がシェルスクリプト書いたとしても、ろくでもない品質のために迷惑かけかねませんし、田中(゜p゜)も&lt;strong&gt;シェルスクリプトをマスターしたいわけじゃない&lt;/strong&gt;です。&lt;br&gt;
※いや、仕事で2ヶ月くれるっつうなら頑張るけど…。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;よって潔くギブアップ！&lt;/strong&gt;&lt;br&gt;
残念ですけど、GCPにWordPressデプロイするとしたら以下の2パターンにしようと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/tutorials/persistent-disk?hl=ja&#34;&gt;公式よろしく無難なハッピーセットでGKEにデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://console.cloud.google.com/marketplace/details/kusanagi-for-gcp/kusanagi?project=astute-citadel-289908&#34;&gt;Kusanagi on GCEでデプロイ&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;趣味のWordPressなら、後者のほうが圧倒的にコスパ良さそうですけどね。&lt;br&gt;
仕事用にするんでも、後者はMySQLオミットしてCloudSQLに切り替え、コンテンツ領域をPersistentDiskにすれば、ロードバランサ＋オートスケーラーでブン回せそうですし。おすし。&lt;/p&gt;
&lt;h2 id=&#34;今後の展開&#34;&gt;今後の展開&lt;/h2&gt;
&lt;p&gt;なんでこのシェルスクリプトはDockerFileに置き換えないんだろなー、とか考えましたが、そもそもフツーのOSに載せていたスクリプトから派生しているようなのと、Kusanagiのロードマップやビジネスプランなどから、あまりパワーを入れたくない領域なのかもしれません。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)個人としては、Dev/Opsのインフラ領域について理解を深めたいので、それっぽいテーマ定めてKubernetesトレースしたいと思います。&lt;/p&gt;
&lt;p&gt;skaffoldあたりやってみたいなー。&lt;br&gt;
でも田中(゜p゜)プログラミング開発環境あんまりだからなー。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetesチャレンジ その4</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1066/</link>
      <pubDate>Fri, 25 Sep 2020 12:00:31 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1066/</guid>
      <description>&lt;p&gt;まだ続いてます(笑)&lt;br&gt;
相変わらず、何かの問題解決目的に来た方は、ご期待に添えず申し訳ございません。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1044/&#34;&gt;Kubenetesチャレンジ その1&lt;br&gt;
&lt;/a&gt; &lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1052/&#34;&gt;Kubenetesチャレンジ その2&lt;br&gt;
&lt;/a&gt; &lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1059/&#34;&gt;Kubenetesチャレンジ その3&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;しかし、その3で突っかかってた「Dockerでデプロイできて、MinikubeではPodのConfig中にコケる」事象は不本意ながら解決しました。↓&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;つまり、&lt;strong&gt;Minikubeではデプロイできないけど、GKEではデプロイでけた&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;何じゃそりゃ。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ローカルの権限周りをトレースしてみたいけど、目的はローカルで動かすんじゃなく、GKEで動かすことなんだから、ローカルに固執する理由は何もない。&lt;/p&gt;
&lt;p&gt;ということで、せっかく作った**ローカルのKubernetes(Minikube)環境は全部廃棄。&lt;br&gt;
** これで2GBくらいディスク空いたった。&lt;/p&gt;
&lt;p&gt;よく考えたら、マシンリソース節約してコスト削減するために、開発環境を必要な時だけ上げとくなんてのは、当たり前のことだね。&lt;br&gt;
あと、イメージPullするのにWi-Fiのギガ消費するのも抑えられるし。※田中(゜p゜)家はモビリティ重視でWiMAXなのです。&lt;/p&gt;
&lt;p&gt;ということで&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1052/&#34;&gt;その3の悩み&lt;/a&gt;はスッキリ解決。&lt;br&gt;
あとはyamlゴリゴリ書くだけだぜー。&lt;/p&gt;
&lt;p&gt;よーしお父さん、次の次あたりにKusanagi on GKEのタイトルで記事化しちゃうぞー！&lt;/p&gt;
&lt;p&gt;続く。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubenetesチャレンジ その3</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1059/</link>
      <pubDate>Thu, 24 Sep 2020 14:42:46 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1059/</guid>
      <description>&lt;p&gt;まあ案の定、詰まっとります。&lt;br&gt;
今突っかかってるのは概ね2つ。&lt;/p&gt;
&lt;h2 id=&#34;問題その1-デプロイ時権限差異&#34;&gt;問題その1 デプロイ時権限差異？&lt;/h2&gt;
&lt;p&gt;Dockerでデプロイできたイメージが、Minikubeだとデプロイできない。どうも権限が違うっぽい。&lt;br&gt;
PoDのログはコレ↓。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;具体的には、docker-entrypoint.shというスクリプトがファイル書き込みのPermissionでコケてる。スクリプト動いてるのはhttpdというユーザなのに、書き込み先はwwwというユーザに割り当てられてる。&lt;/p&gt;
&lt;p&gt;Kubeさんのポリシーが関係してるのかもしれない。トレースが必要。&lt;br&gt;
&lt;a href=&#34;https://unit42.paloaltonetworks.jp/non-root-containers-kubernetes-cve-2019-11245-care/&#34;&gt;https://unit42.paloaltonetworks.jp/non-root-containers-kubernetes-cve-2019-11245-care/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;うーん。&lt;br&gt;
DockerFileからいじらせてもらえば権限問題もなんとでもなる気がするんだけどなあ。&lt;/p&gt;
&lt;h2 id=&#34;問題その2-ローカル環境の理解不足&#34;&gt;問題その2 ローカル環境の理解不足&lt;/h2&gt;
&lt;p&gt;どうも田中(゜p゜)の入れたMinicubeってのはDockerコンテナの一つでしかないみたいで、リポジトリを共有してないっぽい。仮想マシンで動かすタイプもあるみたいなので、他のもそうかもしれない。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;切り分けのためにDockerでデプロイしたコンテナをコミットして、ちょっとMinikubeで動かしたいだけなのに、Docker上でレジストリサービス用のコンテナ立てたりしないとならんらしい。&lt;/p&gt;
&lt;p&gt;ローカルでファイル受け渡ししたいだけなのに、面倒なことです。&lt;br&gt;
あと、Dockerリポジトリの切り替えがシェルの環境変数でしかできないのも面倒&lt;/p&gt;
&lt;h2 id=&#34;上手くいってるもの&#34;&gt;上手くいってるもの&lt;/h2&gt;
&lt;p&gt;Minikubeでのボリュームマウントと、環境変数の受け渡し(ConfigMap)は思ったよりずっとあっさりでけた。&lt;/p&gt;
&lt;p&gt;要はKusanagiの環境変数ファイルをConfigMapに読み込んで、yamlで呼んでやればよいだけ。&lt;br&gt;
&lt;a href=&#34;https://kubernetes.io/ja/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files&#34;&gt;https://kubernetes.io/ja/docs/tasks/configure-pod-container/configure-pod-configmap/#create-configmaps-from-files&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;結局ヤバそうなのは早々に片付き、想定もしてなかったのが課題になっとる感じ。&lt;/p&gt;
&lt;p&gt;続きます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubernetes チャレンジ その2</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1052/</link>
      <pubDate>Wed, 23 Sep 2020 10:52:18 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1052/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;どうしてもGKE上で&lt;a href=&#34;https://kusanagi.tokyo/cloud/kusanagi-runs-on-docker/&#34;&gt;Kusanagi on Docker&lt;/a&gt;動かしたい。シリーズその2。&lt;/p&gt;
&lt;p&gt;**何かの解決を期待してこのエントリにたどり着いた方、申し訳ございませんがその足でお帰り下さい。**田中(゜p゜)の悩みが深まっただけでございます。&lt;/p&gt;
&lt;p&gt;**&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1044/&#34;&gt;前回のエントリ&lt;/a&gt;**の通り、ローカルのKubernetes環境の構築には成功。&lt;br&gt;
しかし本日は一進二退という感じで、むしろ退きました。&lt;/p&gt;
&lt;p&gt;既にKusanagiはローカルのDockerにデプロイはできているんですが、何故かどーしてもコレ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;まー、ボリュームのマウントがうまくいってないんだろな、というのは分かりましたが、色々切り分けると、何故かKusanagI on Dockerは、Dockerコンテナをダウンさせても、データが残るという事象に到達。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;もはやKubernetes関係ない。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;結論からいうと、&lt;strong&gt;裏でKusanagiがVolumeマウントしてやがりました。&lt;/strong&gt;&lt;br&gt;
「docker volume ls」すれば一発なんだろうけど、ああ悲しきかな、田中(゜p゜)は初心者。かなりの時間右往左往してしまいました。&lt;/p&gt;
&lt;p&gt;挙句の果に、&lt;strong&gt;Docker落とさずにマウントされた実体ファイルを移動してみる&lt;/strong&gt;という暴挙に居たり、結果がコレ。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;まあ普通に壊れますわな。&lt;/strong&gt;&lt;br&gt;
その後、Dockerの再インストールはなんとか食い止めましたが、Kusanagiさんは再インストール。orz。&lt;/p&gt;
&lt;p&gt;で、Kusanagiのボリュームのマッピングはだいたい把握したので、いかにそれをKubernetes用に落とし込むか、というのが課題となりまして。&lt;br&gt;
Webを漁るとやっぱりディスクのマウントというのは課題になるみたいで、&lt;a href=&#34;https://kubernetes.io/ja/docs/concepts/storage/persistent-volumes/&#34;&gt;Kubernetesでもゴニョゴニョ開発中&lt;/a&gt;のこと。嫌な予感するなあ。&lt;/p&gt;
&lt;p&gt;そもそもKubernetesのPODつうのは揮発性でかつ複数存在するものであって、書き込みが必要なデータをどっかに置いとかなきゃいけない。&lt;br&gt;
一般的なシステムならDBにおけば解決なんだろうけど、残念ながら田中(゜p゜)が使いたいのはWordpressで&lt;strong&gt;おもいきりディスク依存&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;レガシーな田中(゜p゜)の知識でも、複数のノードから一つのディスクにアクセスするっつうのは排他制御などの関係からえらく面倒だという認識はある。&lt;/p&gt;
&lt;p&gt;結局、可用性も物理考慮しないとだし、ディスクの悩み解決してないし、**レガシーなインフラとあまり変わらんやん！&lt;br&gt;
**&lt;br&gt;
ということで、もう少し頑張りたいと思います。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Kubenetes(Minikube) on ローカル環境構築</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1044/</link>
      <pubDate>Tue, 22 Sep 2020 08:53:27 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1044/</guid>
      <description>&lt;p&gt;どうしてもGKE上で&lt;a href=&#34;https://kusanagi.tokyo/cloud/kusanagi-runs-on-docker/&#34;&gt;Kusanagi on Docker&lt;/a&gt;動かしたい。&lt;br&gt;
けど、KusanagiのGitにはDocker-compose用のyamlしかないので、ローカルでKubenetes動かして、自分でyaml作ってみることにした。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;が、ローカル環境構築でとにかく苦戦。&lt;/strong&gt;&lt;br&gt;
こんな時、Macならトモダチがたくさんいるのにな。&lt;/p&gt;
&lt;p&gt;ただ、いちおうダッシュボードまで上がり、テスト用のデプロイも上手くいったので、環境構築はなんとか完了です。環境構築だけでもうグッタリ。ちなみにUbuntu18.04です。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;GKEクリソツですが、ローカルのダッシュボード環境です。&lt;/p&gt;
&lt;p&gt;構築の「流れ」はブログとか参照で良いが、実際の手順は公式マニュアル見たほうが良いすね。&lt;br&gt;
1ステップごとに2〜3往復して、結局公式の手順に落ち着くんだから。&lt;/p&gt;
&lt;p&gt;以下、自分用メモです。&lt;/p&gt;
&lt;h2 id=&#34;step1-dockerのインストール&#34;&gt;STEP1 Dockerのインストール&lt;/h2&gt;
&lt;p&gt;ココ。&lt;br&gt;
パッケージでインストールしてまうのが一番早い。&lt;br&gt;
&lt;a href=&#34;https://docs.docker.com/engine/install/ubuntu/&#34;&gt;https://docs.docker.com/engine/install/ubuntu/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;他のWebサイトにスクリプト流すパターンあるが、パッケージと整合性取れなくなるのでしぬ。&lt;/p&gt;
&lt;h2 id=&#34;step-2-minikubeインストール&#34;&gt;STEP 2 Minikubeインストール&lt;/h2&gt;
&lt;p&gt;Minikubeは一番しんだ。インストールまではどこのサイトでも一緒だが、スタート時のオプションが&lt;strong&gt;noneやvitualBoxではダメ。&lt;/strong&gt; 田中(゜p゜)の環境もあると思うが致し方なく&lt;strong&gt;docker&lt;/strong&gt;を選択。&lt;br&gt;
&lt;a href=&#34;https://kubernetes.io/ja/docs/setup/learning-environment/minikube/&#34;&gt;https://kubernetes.io/ja/docs/setup/learning-environment/minikube/&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;minikubeなのに1.5GBもコンテナで食ってますよ。&lt;br&gt;
てかそもそもコレ、本当にminikubeなのかしら。Kubenetesなのでは？&lt;br&gt;
田中(゜p゜)の技術力では真実をトレースする余裕がない。&lt;/p&gt;
&lt;h2 id=&#34;step-3optional-dashbordインストール&#34;&gt;STEP 3(Optional) Dashbordインストール&lt;/h2&gt;
&lt;p&gt;これは完全に趣味の世界。&lt;br&gt;
GKEのGUIインターフェイスが便利なので、ほしいと思っただけ。&lt;/p&gt;
&lt;p&gt;認証周りはトークンでしかできないことに注意。&lt;br&gt;
&lt;a href=&#34;https://kubernetes.io/ja/docs/tasks/access-application-cluster/web-ui-dashboard/&#34;&gt;https://kubernetes.io/ja/docs/tasks/access-application-cluster/web-ui-dashboard/&lt;br&gt;
&lt;/a&gt;&lt;br&gt;
なんか開発中っぽいよね。Googleの人ならHTML5でサラッと書いてそう。&lt;br&gt;
PROXY上げとかなきゃいけないのも面倒だし。&lt;/p&gt;
&lt;h2 id=&#34;その他&#34;&gt;その他&lt;/h2&gt;
&lt;p&gt;その他、久しぶりにVS codeとか引っ張り出してきていじってみました。&lt;br&gt;
docker-composeとか右クリック一発でやってくれて便利だな。&lt;/p&gt;
&lt;p&gt;Kubenetesのプラグインはまだ動かんです。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;続きます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Ubuntuで使える Windows風ペイントツール</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1040/</link>
      <pubDate>Mon, 21 Sep 2020 14:05:17 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1040/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;Lubuntuを16.04から18.04にあげても見た目変わらなかったが、一つだけ激しく感動したことがある。&lt;/p&gt;
&lt;p&gt;なんと&lt;strong&gt;Windowsペイント風のペイントツールがついに！ 実装された！&lt;/strong&gt;&lt;br&gt;
なんでも、KolourPaintというらしい。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は描画に、添付画像のマーキングに、トリミングに、&lt;!-- raw HTML omitted --&gt;エビデンス偽造に&lt;!-- raw HTML omitted --&gt;Windowsペイントツールをフル活用する人なので、これを使うためだけにVMPlayerのWindows10を起動することが多かったのだ。&lt;/p&gt;
&lt;p&gt;今まで手軽な描画ツールが無かっただけにこれは嬉しい。&lt;br&gt;
願わくばPowerPointもクライアントソフト並にWeb版が動作してくれれば、田中(゜p゜)個人のお絵かき環境は完璧なのだが。&lt;/p&gt;
&lt;p&gt;まあ無理かなー。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>祝！ ブログ村 IT技術情報ランキング一位！</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1034/</link>
      <pubDate>Sun, 20 Sep 2020 05:40:55 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1034/</guid>
      <description>&lt;p&gt;せっかくなんで魚拓取っておこう。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;・・・・・・。&lt;br&gt;
・・・・・・・・・・・・・。&lt;/p&gt;
&lt;p&gt;うーん。週間INが75ですけど。あと始めて一ヶ月も経ってませんが。&lt;br&gt;
どんだけディレクトリ掘ってんだ、という話ですか。&lt;/p&gt;
&lt;p&gt;なにか憑いている可能性もあるな…。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>WordPress on GKEチャレンジ その3(終)</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1030/</link>
      <pubDate>Sun, 20 Sep 2020 05:30:35 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1030/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1015/&#34;&gt;WordPress on GKEチャレンジ その1&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1027/&#34;&gt;WordPress on GKEチャレンジ その2&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;結論からいうと、できたはできた。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;が、最終的にできたのは、下記のkusanagiデプロイに&lt;strong&gt;GCPのロードバランサかぶせただけ&lt;/strong&gt;、みたいなつまらない構成。&lt;br&gt;
&lt;a href=&#34;https://qiita.com/nagase/items/5525bd80196802b0a07a&#34;&gt;https://qiita.com/nagase/items/5525bd80196802b0a07a&lt;/a&gt;&lt;br&gt;
※クッソ早いけど、&lt;a href=&#34;https://a.tmp-net.biz/&#34;&gt;さっきwp-config.php壊したので&lt;/a&gt;こんなですwww&lt;/p&gt;
&lt;p&gt;ロードバランサー、￥2,500/月でお高いんですよ。&lt;br&gt;
知恵がないためにお金払わないとなんだなぁ。&lt;/p&gt;
&lt;p&gt;結局のところ、サービスのロードバランサ使えば、GKEに対しての&lt;strong&gt;デプロイ自体は楽勝&lt;/strong&gt;。&lt;strong&gt;厄介だったのは証明書の自動管理&lt;/strong&gt;。正直あきらめた。&lt;br&gt;
どこもLet’s Encryptなんだけど、クラウドのDNSをAPIで叩かなきゃいけなくて、それがなー。&lt;/p&gt;
&lt;p&gt;あと、Google DomainでAPI叩けず、Cloud DNSに移行したんだけど、派手にドメイン名をtypoしとって、半日このサイト止まっとった。悲しい。&lt;/p&gt;
&lt;h2 id=&#34;しんどいポイント&#34;&gt;しんどいポイント&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;コンテナでの証明書管理にcert-managerてのを使う。ただ、Webに書いてある情報はどれも古くて、今のcert-managerのバージョンに合ってない。&lt;br&gt;
インストール、yamlの書き方で、最も信頼ができたのは結局公式サイト。&lt;br&gt;
&lt;a href=&#34;https://cert-manager.io/docs/installation/kubernetes/&#34;&gt;https://cert-manager.io/docs/installation/kubernetes&lt;/a&gt;/&lt;br&gt;
&lt;a href=&#34;https://cert-manager.io/docs/configuration/acme/dns01/&#34;&gt;https://cert-manager.io/docs/configuration/acme/dns01/&lt;/a&gt;&lt;br&gt;
&lt;a href=&#34;https://cert-manager.io/docs/configuration/acme/dns01/google/&#34;&gt;https://cert-manager.io/docs/configuration/acme/dns01/google/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;公式サイトを完璧にトレースしても証明書取得時にエラーが出るので、どうも未知の事象を踏んだっぽい。が、英語のフォーラムに参加する気力はない。&lt;/li&gt;
&lt;li&gt;Kubenetesのレポジトリ管理にHelmつうアプリ入れるんだけど、v3とv2でコマンド体系が全く違ってた。基本公式サイトはv3。&lt;/li&gt;
&lt;li&gt;Gitのやつがコケたのは、Helmのバージョンとレポジトリが古いから。証明書管理もkube-legoっていう、cert-managerの作者が以前作ってて放置したもののようで、トレースする気が失せた。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://github.com/stcox/gke-wordpress&#34;&gt;https://github.com/stcox/gke-wordpress&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ということで証明書運用の自動化は諦め気味…。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今回学んだこと&#34;&gt;今回学んだこと&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;更新の早いコンポーネントは、ブログを頼りにせず、公式ドキュメントを見る。&lt;/li&gt;
&lt;li&gt;Kusanagiクソ早い。別にGKEじゃなくても良いかも。&lt;/li&gt;
&lt;li&gt;抽象化されるととても便利だが、行き過ぎるとワケわからなくなる。&lt;br&gt;
Pod間、もといコンテナ間の通信はyamlベースに図を書いてみないと分からない&lt;/li&gt;
&lt;li&gt;切り分けたくてもPodにツールが入ってない。入れるのメンドイ。&lt;/li&gt;
&lt;li&gt;こういうのを管理するための構成管理ツール売れそうだなぁ、と思った。&lt;/li&gt;
&lt;li&gt;PHPを7.0 → 7.3に上げた時は、ワンライナー、モノの10秒で終わって少し感動。&lt;/li&gt;
&lt;li&gt;コンテナ間の通信にオーバーレイ技術使われとってワロタ。&lt;/li&gt;
&lt;li&gt;結局のところガチの可用性を考慮したら物理を意識しないとダメっぽい。インフラ観点だと、ポッドの割当論理設定を可視化した上でテスト計画立てないと。項目すげー増えそう。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今後のこのサイトについて&#34;&gt;今後のこのサイトについて&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;当たり前かもだけど、個人サイトレベルでGKEはいらんと思う。&lt;/li&gt;
&lt;li&gt;オートスケーラー実装したかったんだけど、どうせロードバランサー使うならGCEでもいいんじゃ。&lt;/li&gt;
&lt;li&gt;というか、とりあえずkusanagi入れとけばn1-small1台で十分そう。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>WordPress on GKEチャレンジ その2</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1027/</link>
      <pubDate>Sat, 19 Sep 2020 11:13:23 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1027/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1015/&#34;&gt;昨日の続き&lt;/a&gt;です。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>WordPress on GKEチャレンジ その1</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1015/</link>
      <pubDate>Fri, 18 Sep 2020 08:53:22 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1015/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;将来的に間違えてアクセスが増えちゃった場合に備えて、&lt;strong&gt;GKEにWordPress載せるぞ！&lt;/strong&gt; というチャレンジしてます。&lt;/p&gt;
&lt;p&gt;GKEが何かというのは下記リンク参照。&lt;br&gt;
要するに、Dockerをステキにコントロールできる、Googleさんのクールなエンジンなのです。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://xtech.nikkei.com/atcl/learning/lecture/19/00095/00003/&#34;&gt;https://xtech.nikkei.com/atcl/learning/lecture/19/00095/00003/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;正直WordPressはコンテンツ更新がPersitentDiskとSQLだから、あまり意味ないと思うけど、何事も着手してみないと始まらない。&lt;/p&gt;
&lt;p&gt;3年ほど前、GKEのインフラの抽象化度合いに驚き、ある程度自習やってたので、Dockerくらいは分かるだろーとたかをくくってましたが、全ッ然覚えてなくてワロタ。&lt;br&gt;
いや、自分で思ったより脳がおっさんでワロエナイ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/necessity-of-program/&#34;&gt;ココで田中(゜p゜)はyaml使える&lt;/a&gt;と言ったな。&lt;br&gt;
あれは嘘だ！&lt;/p&gt;
&lt;p&gt;ということで、自分のpoorな技術力を噛み締めながら、予習を含めて段階的に学習していきます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;■ローカルにDocker環境構築&lt;/strong&gt;&lt;br&gt;
というか、これが一番大変だったんですが。&lt;br&gt;
なんかJavaとかEclipse入ってて、環境変数腐ってる。あとぺぇそん(Python）が2.7のせいか、ライブラリのエラーでまくる。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Ubuntu 16.04だとdocker-compose動作せず。&lt;/li&gt;
&lt;li&gt;Ubuntu 16.04 → 18.04 アップグレード。&lt;/li&gt;
&lt;li&gt;その他色々ゴニョゴニョしてなんとかローカルでDocker動作させた&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;■Docker基本おさらい&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)の環境と違うためか、一部手を加えなければならないところあった。&lt;br&gt;
全然Dockerのコマンド覚えてない自分に幻滅。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://qiita.com/hiyuzawa/items/81490020568417d85e86&#34;&gt;https://qiita.com/hiyuzawa/items/81490020568417d85e86&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;■WordPress on Local Docker&lt;/strong&gt;&lt;br&gt;
これはサンプルの通りやればよかったので楽勝。&lt;br&gt;
基本おさらいのおかげで中身も読めてひと安心。&lt;br&gt;
&lt;a href=&#34;http://bashalog.c-brains.jp/19/08/15-120000.php&#34;&gt;http://bashalog.c-brains.jp/19/08/15-120000.php&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;■WordPress on GKE予習&lt;/strong&gt;&lt;br&gt;
こちらもサンプル通りにやれば良いので楽勝。のはず。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://cloud.google.com/kubernetes-engine/docs/tutorials/persistent-disk?hl=ja&#34;&gt;https://cloud.google.com/kubernetes-engine/docs/tutorials/persistent-disk?hl=ja&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ただ、検証用とはいえ費用が怖いので、ワーカーノード削ったり、preemptableマシンにしたりします。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://blog.a-know.me/entry/2018/06/17/220222&#34;&gt;https://blog.a-know.me/entry/2018/06/17/220222&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;※2020/09/18 できました。が、90日で無料クレジットがなくなるので消えます。&lt;br&gt;
&lt;a href=&#34;http://wp-gke.tmp-net.biz/&#34;&gt;http://wp-gke.tmp-net.biz/&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&#34;span-stylecolorff0000-classhas-inline-color今ココspan&#34;&gt;&lt;!-- raw HTML omitted --&gt;←今ココ！&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;■Wordpress on GKE環境構築&lt;/strong&gt;&lt;br&gt;
まだ決めてないけど、常時SSL目指して、このあたりのレポジトリ利用を考えてます。&lt;br&gt;
結局自分で書くんじゃないのかーい、というツッコミはなしでお願いしますよ。しんでしまいます。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://github.com/stcox/gke-wordpress&#34;&gt;https://github.com/stcox/gke-wordpress&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;■CI/CD環境構築&lt;/strong&gt;&lt;br&gt;
できるか分からんけど、CI/CD基盤まで実装してみたい。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.slideshare.net/yuamano/word-pressgke-79115181&#34;&gt;https://www.slideshare.net/yuamano/word-pressgke-79115181&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>テンションを先に上げた奴は死あるのみ</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-1005/</link>
      <pubDate>Thu, 17 Sep 2020 01:23:17 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-1005/</guid>
      <description>&lt;p&gt;北斗の拳 イチゴ味より。&lt;br&gt;
アミバの解説。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;引用：&lt;!-- raw HTML omitted --&gt;アニヲタWiki&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;日常会話や記事中で知らず知らずしてテンションが上がってしまう田中(゜p゜)。&lt;br&gt;
テンション下がれば実力者となれるような気がしなくもないないない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「やべぇ」の正しい表記について</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-922/</link>
      <pubDate>Tue, 15 Sep 2020 23:31:05 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-922/</guid>
      <description>&lt;p&gt;最近、記事、投稿等で「やべぇ」という言葉が気に入って頻繁に使っておりますが、正しくは「ヤベェ」でも「ヤベエ」でもなく、「&lt;strong&gt;やべェ&lt;/strong&gt;」のようですね。&lt;/p&gt;
&lt;p&gt;記事全てを更新するとしぬので、以後、気をつけます。&lt;br&gt;
SQLでゴニョゴニョすれば一発置換できそうですが、怖くてできません。&lt;/p&gt;
&lt;p&gt;ちなみに出自は「&lt;a href=&#34;https://ja.wikipedia.org/wiki/%E5%BD%BC%E5%B2%B8%E5%B3%B6&#34;&gt;彼岸島&lt;/a&gt;」です。&lt;br&gt;
原作は読んでませんが、Webでアウトラインは掴んでいて、響きが気に入って使ってます。&lt;/p&gt;
&lt;p&gt;また、同じようにハイテンションな荒くれ者のことを「ヒャッハー」などと呼称することはありますが、&lt;strong&gt;原作の北斗の拳でヒャッハーされたことは一度もなく&lt;/strong&gt;、正確には「&lt;strong&gt;ヒャッハッハッ&lt;/strong&gt;」が該当するのではないか、とのことです。&lt;/p&gt;
&lt;p&gt;・・・ヒャッハッハッ。&lt;br&gt;
なんか急にリズム悪くなったんで、ヒャッハーでいいか…。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>再読：嫌われる勇気</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-852/</link>
      <pubDate>Tue, 15 Sep 2020 03:50:51 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-852/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;リアル本で読んだ気がしていて、Kilndleでも読みたいな、なんて探して購入しようとしたら、ライブラリにあってビックリした本。&lt;/p&gt;
&lt;p&gt;たぶん田中(゜p゜)の中では良い本に入ると思う。&lt;br&gt;
良い本は、見る度に自分の変化に合わせて違う印象を受け、新たな気付きを与えてくれるものだと思う。&lt;/p&gt;
&lt;p&gt;ということで、今回の気づき、というか再認識は、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自分の主観によって幸福度、すなわち世界の見え方は違う&lt;/li&gt;
&lt;li&gt;嫌われる勇気 ＝ 自分と他人の課題を分離して自由になる&lt;/li&gt;
&lt;li&gt;より大きな共同体への所属意識を持ち、他者に貢献する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;かな。&lt;br&gt;
この考え方って、ずいぶん前に京都の禅寺で宿望した時に聴いた、和尚さんの話と共通点が多いなぁ、などと思った。&lt;/p&gt;
&lt;p&gt;ただ禅の教えだと「言葉」には限界があり、あくまでも田中(゜p゜)の主観でしかなくて、この書いてある言葉自体にも限界があるのだと思う。 ※禅問答なんてのは、まさに言葉の限界を知るための修行なんだと思います。&lt;/p&gt;
&lt;p&gt;英文の原書があるようなので、どう書いてあるのか読んでみたい。&lt;/p&gt;
&lt;p&gt;　&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://blogcircle.jp/commu/79/topic/54&#34;&gt;&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>40過ぎてからの結婚。そして家庭</title>
      <link>https://y2tanaka.github.io/git-pages/work-and-family/</link>
      <pubDate>Sun, 13 Sep 2020 02:16:30 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/work-and-family/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;今回も田中(゜p゜)はボソボソつぶやきます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/how-to-walk-underlife/&#34;&gt;この記事&lt;/a&gt;でも書いた通り、ずっと「斜め下」を歩こうと決めて、独身なのに家まで買い、趣味に生きていこうと決めてしまった田中。&lt;/p&gt;
&lt;p&gt;ですが。&lt;/p&gt;
&lt;p&gt;2017年12月に、齢42にして突然結婚することになりました。&lt;br&gt;
原因はコレ↓&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;つまるところ、ペットをキッカケに知りあったのです。&lt;br&gt;
なぜ田中(゜p゜)が黄色いセキセイインコを飼っていたのか、というのは忘れました。&lt;/p&gt;
&lt;p&gt;今は2020年ですが、幸いなことに、2児に恵まれ、フツーの家庭に向けてまっしぐらというところです。もちろんフツーの人より10年位遅れてますので、お金の問題とか、教育の問題とか山積みです。&lt;/p&gt;
&lt;h2 id=&#34;結局趣味はどうしたのか&#34;&gt;結局趣味はどうしたのか&lt;/h2&gt;
&lt;p&gt;オートバイはスッパリやめました。&lt;br&gt;
別に嫁さんに反対されたからとかではなく、怪我したら家族に迷惑かかるじゃん。&lt;/p&gt;
&lt;p&gt;あと、それに伴い、5台あったバイクと家は売っぱらって、賃貸に引越、クルマはステーションワゴンに買い換えちゃいました。&lt;/p&gt;
&lt;p&gt;不思議と今のところ、バイクに乗りたいと思うことはありません。&lt;br&gt;
嫁さんは一緒にいて楽しい人だし、子供かわいいし。&lt;/p&gt;
&lt;p&gt;バイク友達は今でもFaceBookで絡んでくれます。ありがたいことです。&lt;/p&gt;
&lt;h2 id=&#34;シフト&#34;&gt;シフト&lt;/h2&gt;
&lt;p&gt;嫁さんは良くできた人で、田中(゜p゜)の生活レベル下げる話や、趣味の話なども非常に理解のある人です。&lt;/p&gt;
&lt;p&gt;ただ、正直なところ田中(゜p゜)が少し迷走してます。&lt;br&gt;
趣味を安全弁にして、全開で仕事に打ち込めたのが、家庭の事情を鑑みなければならなくなったからで、仕事をセーブする調整に時間がかかりそうなのです。&lt;/p&gt;
&lt;p&gt;常に仕事に全開、というのは長年の行動パターンの積み重ねなので、修正に時間はしばらくかかるでしょうし、仕事内容自体も考えてかなきゃいけないのだと思います。&lt;/p&gt;
&lt;p&gt;とは言いつつも、生活レベルを下げる、というところが安全弁になっていて、やべェ事態にはならないでしょう。このあたりは嫁さんに感謝しないとなー、と思います。&lt;/p&gt;
&lt;p&gt;さて、人生あと40年！&lt;br&gt;
肩の力を抜いて頑張るぞ！&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>「斜め下」の歩き方</title>
      <link>https://y2tanaka.github.io/git-pages/how-to-walk-underlife/</link>
      <pubDate>Sun, 13 Sep 2020 00:41:12 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-to-walk-underlife/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;今回はボソボソと田中(゜p゜)のことを書きます。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は、社会思想として未だに根強い「大企業に入って出世する」という、理想的なパターンから大きく外れて生きてきました。&lt;/p&gt;
&lt;p&gt;転職回数多いし、大きな企業にいたことあるけど、メインストリームであったことは一度もなくて、大勢に逆らってマイノリティとして活動するケースばかりだったし。&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/retire-by-companys-future/&#34;&gt;ベンチャーに入って、一発当てようとしたらしくじってリタイヤ&lt;/a&gt;しちゃったし。&lt;/p&gt;
&lt;p&gt;この社会思想や同調圧力とやらは田中(゜p゜)も好きではないですが、幸いなことに今はパラダイムシフトが起こりつつあって、「起業して一発あてる」とか「会社と距離をおいて自分のビジネスを作る(YouTuberとか生業ブロガーとかね)」とか、新しい生き方が若い世代から浸透しつつあると思います。&lt;/p&gt;
&lt;p&gt;ただ、田中(゜p゜)はどちらにも該当しません。&lt;br&gt;
ちょうど田中(゜p゜)が大学卒業した頃は、就職氷河期と言われる世代で、社会思想と新しい世代との中間的な位置に当たっているのかな、などと思います。&lt;/p&gt;
&lt;p&gt;SNSなどを見ていても、やはり同世代の人達が、同じようなポジションにいるのだというのをひしひしと感じます。&lt;/p&gt;
&lt;p&gt;こうした自分のポジションについて、田中(゜p゜)はかなり自覚的でしたが、常に以下の2つのポイントを心がけていました。&lt;/p&gt;
&lt;h2 id=&#34;趣味に生きる&#34;&gt;趣味に生きる&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)は40歳までオートバイ大好きっ子で、モトクロスのレース活動してました。もちろん独身だからできたことです。&lt;br&gt;
※今は家庭ができてしまったので、もうスッパリ辞めてしまったのですが、これは別記事で書きます。&lt;/p&gt;
&lt;p&gt;整備のために一軒家を買い、1階をガレージスペースに改造してたりして。 当然クルマも持ってましたが、ハイエースとかそれ系の、後ろにレース用のオートバイを運べるタイプでした。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;レースというのはとてもしんどいもので、勝つためには常に成長が必要であり、身体能力的にも、バイクの機能面でも、日々の改善と、知恵を凝らした工夫が必要です。&lt;/p&gt;
&lt;p&gt;勝った時の達成感や、負けた時に次をどう考えるか、という一連の行動パターンは、仕事にも良い影響を与えていたと思います。&lt;/p&gt;
&lt;p&gt;また、幸いなことに、会社以外でも人間関係ができ、サラリーマン以外の価値観に触れることができたのも、田中(゜p゜)にとって大きな収穫だったと言えます。&lt;/p&gt;
&lt;p&gt;今、田中(゜p゜)はIT業界にいますが、業界が異なると考え方というのは全く異なりますし、そもそも自営業者の方とは更に大きく隔たりがあります。&lt;br&gt;
いかに自分が狭い世界の中で生きてきたのか、否応もなく自覚させられます。&lt;/p&gt;
&lt;p&gt;同じ会社にずっといると、その価値観が全てなのだ、と思い込みがちですが、趣味は田中(゜p゜)に全く別の視点を与えてくれたのだと思います。&lt;/p&gt;
&lt;h2 id=&#34;生活レベルを下げる&#34;&gt;生活レベルを下げる&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;趣味に関わるモノ以外では、田中(゜p゜)はほぼミニマリストに近い考え方をしてたと思います。管理するのは物理的にも心理的にもコストがかかるので、よけいなモノは持ちたくない。&lt;/p&gt;
&lt;p&gt;衣食住、全般にわたってそんな感じでした。&lt;br&gt;
食べ物も、体調管理に最低限必要っぽい栄養素を自炊して食べる感じ。&lt;/p&gt;
&lt;p&gt;飲みに誘われたら行きます。 美味しいものを食べるのは嫌いじゃない。むしろ好きです。二次会行くと味がわからなくてもったいないので、一次会で帰りますが。&lt;/p&gt;
&lt;p&gt;当然お金もかかりません。&lt;/p&gt;
&lt;p&gt;これは、オートバイの維持でコストがかかるというのもありますが、仕事でのめり込みすぎて破綻した時のフェールセーフだったというのもあります。&lt;/p&gt;
&lt;p&gt;「オートバイ捨てるという前提で生きていける最低限の年収」を下げた方が、お仕事の選択肢が広がるという考え方をしていたからです。&lt;/p&gt;
&lt;p&gt;お仕事で「メインストリームに乗ってない」のを自覚した時、生活もまたメインストリームではない方を選択しないと、生きていくのが難しいと思います。&lt;/p&gt;
&lt;p&gt;すなわち、お金がたくさん使えば楽しい、贅沢をすれば楽しい等々、資本主義社会が求めている、大量消費を刺激する価値観とはまた別の選択をしなければならないということです。&lt;/p&gt;
&lt;h2 id=&#34;斜め下の幸せ&#34;&gt;斜め下の幸せ&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)の場合、これで何か不満があったかというと、全くそんなことはなく、むしろ精神的にはとても充実していたと思います。&lt;/p&gt;
&lt;p&gt;むしろメインストリームの中にいた人達の方が、よっぽどストレスフルに見えました。住宅ローンによる金銭問題、仕事のトラブル、家庭内不和、その他諸々。&lt;/p&gt;
&lt;p&gt;つまり、メインストリームにいるからといって、必ずしも幸せそうには見えない。メインストリームに乗ってない人たちのほうが、おおよそ自由に、気ままに選択した人生を楽しんでいる。&lt;/p&gt;
&lt;p&gt;もちろん、メインストリームにいる人の中にも幸せな人もたくさんいます。&lt;br&gt;
ですが、社会の歪(社会の前提条件と現状のギャップ)が大きくなるにつれ、その割合は年々小さくなっているのかな、とは思います。&lt;/p&gt;
&lt;p&gt;労働人口の拡大と、企業の継続的な成長を前提とした社会基盤から脱却できないのが日本の課題で、高齢化と労働人口減少という日本の現状を鑑みれば、その歪がますます大きくなるのは自明の理です。&lt;/p&gt;
&lt;p&gt;できれば、メインストリームの中いる人達も、社会思想だったり、同調圧力だったりから早々に解き放たれ、斜め下の生き方も許容できるようになればな、と願ってます。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>転職たくさんするとどうなるか</title>
      <link>https://y2tanaka.github.io/git-pages/impact-of-jobchange/</link>
      <pubDate>Sat, 12 Sep 2020 22:52:37 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/impact-of-jobchange/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/about/writer/&#34;&gt;書いてる人&lt;/a&gt;に記載した通り、田中(゜p゜)は転職回数が5回と多いのです。&lt;/p&gt;
&lt;p&gt;基本的には、年収上げたいというのはあまりなくて、自分が実現したいことをベースに転職しとるのですが、この5回というのは日本においては多いとされるようです。&lt;/p&gt;
&lt;p&gt;複数回の転職経験した田中(゜p゜)のスタンス、転職によるメリット、デメリットをまとめてみました。&lt;/p&gt;
&lt;h2 id=&#34;基本的なスタンス&#34;&gt;基本的なスタンス&lt;/h2&gt;
&lt;p&gt;今の田中(゜p゜)のスタンスは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;今の状態が居心地が良いなら、さらなる条件を求めての転職はしない。諸々の条件より、&lt;strong&gt;カルチャーが合っていることのほうが大切&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;自分が成長した結果、その会社のカルチャーが合わなくなったと感じたなら、転職を考えたほうが良い。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;体調悪いほどストレスフルなら、さっさと辞めたほうが良い&lt;/strong&gt;。体調崩すと立て直すのが本当に難しい。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;転職によるメリットデメリット&#34;&gt;転職によるメリット/デメリット&lt;/h2&gt;
&lt;p&gt;転職した後に感じるメリット/デメリットは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;○未経験とかスキルレスでない限り、年収は上がる。&lt;/li&gt;
&lt;li&gt;○身につけたいと思っている領域の仕事につける。&lt;/li&gt;
&lt;li&gt;○ライフスタイルに合わせて、労働条件を調整できる。&lt;/li&gt;
&lt;li&gt;△人間関係がリセットされる。※いいケースもあれば悪いケースもあり、様々。&lt;/li&gt;
&lt;li&gt;×人間関係を一から構築し直す必要がある。管理職クラスの場合は結構ビハインドがある。&lt;/li&gt;
&lt;li&gt;×カルチャーに合わない企業に入ってしまい、よりストレスフルになる可能性がある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんだ、メリットのほうが多いじゃんと思うんですが、日本の場合は**「何度も転職するような奴はなっとらん」というような社会思想が根強く**あり、**転職回数が多いことによるメリット/デメリット**というのを考える必要があります。&lt;/p&gt;
&lt;h2 id=&#34;転職回数が多いことによるメリットデメリット&#34;&gt;転職回数が多いことによるメリット/デメリット&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;×外資も含め、硬い企業は書類でハネられるので、&lt;strong&gt;選択肢が狭まる。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;×**諦めが早くなる。**また転職すればいいや、という気持ちになるため。&lt;/li&gt;
&lt;li&gt;×面接の時に、&lt;strong&gt;退職理由、転職理由を説明するのが面倒くさい&lt;/strong&gt;。突っ込まれどころが増える。&lt;/li&gt;
&lt;li&gt;○様々な企業のカルチャーを比較でき、キャッチアップのスピードが上がる&lt;/li&gt;
&lt;li&gt;○社外の交流ができ、仕事の幅が広がる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ま、確実にデメリットのほうが多いです。&lt;br&gt;
面接の際に、いちいち自分の勤めてきた会社、仕事内容、退職理由を合理的に説明するのって時間がかかるし、&lt;strong&gt;面倒&lt;/strong&gt;なんですよ。合理性に欠けると、そこにネジ込んでくる面接官も多いし。&lt;/p&gt;
&lt;p&gt;それより、アサイン予定の業務内容をきちんと説明した上で、応募者からどのように会社に貢献できるか聞いたほうが、よっぽど建設的だと思うんだけどな。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;諸々の条件よりも、今の会社のカルチャーが、自分と合っているかどうかの方が大切。合ってるなら、その中で何ができるか考えたほうが良い。&lt;/li&gt;
&lt;li&gt;転職自体はメリットが多いが、転職回数が多くなると、それなりにペナルティがある。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんだかとても当たり前な結論になってしまった。日本ではまだこの流れはスタンダードなんでしょうね。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>プロ経営者観察記録</title>
      <link>https://y2tanaka.github.io/git-pages/observe-pro-bizowner/</link>
      <pubDate>Sat, 12 Sep 2020 18:47:44 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/observe-pro-bizowner/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;この場合のプロ経営者とは、一つの会社の中で社員から成り上がった人ではなく、&lt;strong&gt;経営のために外部から招聘された人&lt;/strong&gt;のことを指します。自分で起業した人ともちょっとタイプが違うかもしれません。&lt;/p&gt;
&lt;p&gt;日本の場合は、プロ経営者というのは数少なく、田中(゜p゜)のレイヤも高いものではなかったので、対面する機会は数少なかったのですが、それでも&lt;strong&gt;自分とは全く違うレイヤの方々がどう世の中を見ているか、どう行動するのか&lt;/strong&gt;、とても興味深く見ていました。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)の見たプロ経営者の方々の行動パターン、特徴は以下のような感じです。&lt;/p&gt;
&lt;h2 id=&#34;意思決定がとても早い&#34;&gt;意思決定がとても早い&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)のレイヤからすると、信じられないような大きさの意思決定を、瞬時に下しています。&lt;/p&gt;
&lt;p&gt;例えば、田中(゜p゜)はオフショアの関係で中国のインターネットの不安定さに対してレポートしたことがあるのですが、&lt;strong&gt;その場で国内のニアショアに切り替えていく意思決定がされました&lt;/strong&gt;。&lt;br&gt;
それも、&lt;strong&gt;オフショア事業者とのステアリングコミッティの席&lt;/strong&gt;で！&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;正直目の玉飛び出ました。&lt;/strong&gt;&lt;br&gt;
これは事前に相応のインプットがあったのかもしれませんけど。&lt;/p&gt;
&lt;p&gt;あと、オフショア事業者の人、顔引きつってた。&lt;/p&gt;
&lt;h2 id=&#34;いつもスマートデバイスでinoutしている&#34;&gt;&lt;strong&gt;いつもスマートデバイスでIN/OUTしている&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;これはだいたいどの方々もそうなのですが、いつもスマートデバイス持って、移動中にもメールか社内の意思決定ツールを見て、何かしているイメージです。&lt;/p&gt;
&lt;p&gt;メールをすると、田中(゜p゜)のような下々のものにも3時間以内でメールが帰ってきますし、数行のメールの中に以下のような内容が書いてあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;YES&lt;/li&gt;
&lt;li&gt;NO&lt;/li&gt;
&lt;li&gt;この部分の情報求む&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;おそらく意思決定を極限まで早めようとすると、このような形になるんだと思われ。&lt;br&gt;
また、3時間というのはポイントがあって、おそらく決まった時間に大量のメールを処理しているものと思われ。&lt;/p&gt;
&lt;h2 id=&#34;自分と距離がある人には優しい&#34;&gt;自分と距離がある人には優しい&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)は、だいたい情報システムのインフラ担当者とし対面しましたが、だいたいどの方も一様に優しく、社外でもそのように接されているようです。&lt;br&gt;
おそらく&lt;strong&gt;長期的な横のつながりを重視&lt;/strong&gt;されているからかと思います。&lt;/p&gt;
&lt;h2 id=&#34;経営会議や自分テリトリでは厳しい&#34;&gt;経営会議や自分テリトリでは厳しい&lt;/h2&gt;
&lt;p&gt;これは人によって感情を表にしたり、淡々と詰めたりと、色々なパターンがありましたが、主に下々の者が詰められているのは以下のような点でした。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;数字上がってない/どーすんのか&lt;/li&gt;
&lt;li&gt;なぜトラブル報告しない/どーすんのか&lt;/li&gt;
&lt;li&gt;意思決定のための材料を提供せよ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんか3行にまとまってしまいますが、下々の者に取っては大変にしんどいです。頑張りますとか一切通用せず、数字的な根拠と論理性のみを説明しなければならないからです。&lt;/p&gt;
&lt;h2 id=&#34;数字に関して異常な直感を持っている&#34;&gt;数字に関して異常な直感を持っている&lt;/h2&gt;
&lt;p&gt;会議の場では、経営の指標に関して管理会計上の様々な数字が上がってくるのですが、&lt;strong&gt;矛盾していたり、将来的にヤバい兆候を表す指標について、異常な直感もってます&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)も、情報システム部門の担当として、実行予定の施策の費用について説明する機会がありましたが、相手にとって稚拙であろうと思われる数字の推移の中から、矛盾している数字を、ちょっとワケわからないスピードで指摘されました。&lt;strong&gt;自分でも気づいてなかった&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;またその誤差修正による、予測のギャップ部分についても、その場で指摘されました。&lt;br&gt;
その場は、その修正だけで済んでめでたしめでたしだったのですが、&lt;strong&gt;毎週やられたらしぬわコレ&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;つまり森の中から腐った木を見つけ出す能力がすごい。&lt;br&gt;
田中(゜p゜)もITインフラで起こったトラブルの表面的な事象から、すぐ原因のアタリがつく直感を持ってますが、なんとなくそれと同じようなもので、&lt;strong&gt;経営の指標を見続け、対応し続けた結果、身につけた能力&lt;/strong&gt;なのかな、と思いました。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;プロ経営者は意思決定のスピードアップのために洗練させた行動パターンを持っている&lt;/li&gt;
&lt;li&gt;プロ経営者は、経営の指標を常に観測し、対応し続けた結果、数字に異常な直感を持っている&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>読了：たった１０日でネイティブに近づく英語発音講座 (鈴木 裕子著)</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-570/</link>
      <pubDate>Sat, 12 Sep 2020 00:21:21 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-570/</guid>
      <description>&lt;p&gt;&lt;strong&gt;Kindle Unlimitedでいちばん「うわぁ！」となった本。&lt;/strong&gt;&lt;br&gt;
英語の勉強しとるのですが、なんで日本人がネイティブのように発音できないか、初めて理解できた本。&lt;/p&gt;
&lt;p&gt;**どーして学校でこういうこと教えないの！！&lt;br&gt;
**&lt;br&gt;
感銘を受けた、というか、「&lt;strong&gt;知らんがな！&lt;/strong&gt;」というツッコミの気持ちが大きい。&lt;br&gt;
どこかの受け売りですが、発音できないものは聞き取れないとのことなので、田中(゜p゜)のヒアリングが伸びてないのはそういうことなのだと思いたい。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)の主な「知らんがな！」ポイントは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ネイティブは基本単語と単語をくっつけて話す。&lt;/li&gt;
&lt;li&gt;くっつける時に音が消えたり、変わったりする。&lt;/li&gt;
&lt;li&gt;英語の発音の口の形は、単語をくっつけるためにある ※逆に、単語くっつけないと発音しづらかったり、口の形ができてないと単語くっつけられなかったり&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;知識としては理解しました。&lt;br&gt;
**が、できるかどうかは別です。**10日経ってもできる気配は無し。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)はおっさんだし、新しいことやるのに時間がかかるだけだと思いたい。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>このサイトのWordPressプラグイン</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-469/</link>
      <pubDate>Thu, 10 Sep 2020 23:24:39 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-469/</guid>
      <description>&lt;p&gt;誰も興味ない可能性ありますが、WordPressの構成ほぼ確なので備忘録含めて書いておきます。&lt;br&gt;
セキュリティ的にヤバいのかな？ まあPHPにバグあったらそもそも終わりだし、ハックされたらそれはそれでネタとして使えそうなのであえて気にしない。&lt;/p&gt;
&lt;p&gt;**Akismet Anti-Spam (アンチスパム)&lt;br&gt;
** もとからインストールされてるアンチスパム用。投稿とかフォーラムが守られていると信じたい&lt;/p&gt;
&lt;p&gt;**bbPress&lt;br&gt;
** フォーラム機能用。現時点でトピックはないため良いとも悪いとも言えない(笑)&lt;/p&gt;
&lt;p&gt;**Really Simple SSL&lt;br&gt;
** SSL化によるコンテンツ修正のために入れた。けど、WEBサーバ側は自分で手を加えたし、結構手動での修正が必要で残念な感じ。使いこなしてないだけかな。&lt;/p&gt;
&lt;p&gt;**Asset CleanUp: Page Speed Booster&lt;br&gt;
** Google先生のサイトチェッカーでモバイル向けにコンテンツ最適化されてないよ、とのことだったので入れた。63/100だったのが、69/100になった。&lt;br&gt;
いや、95/100になるオプションもあるんだけど、CSSとJavascriptがまともに動かなくなってデザイン壊滅したので妥協。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;My Database Admin&lt;br&gt;
** なんと最新バージョンのWordPressだとMyPhpAdminが動かんのです。CUIで単純にMySQLにSQL発行して結果を表示するだけという恐ろしく原始的なツールで、はっきり言って&lt;/strong&gt;いじるの怖い**。スナップショット取ってから使うようにしてる。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Contact Form 7&lt;br&gt;
WP Mail SMTP&lt;br&gt;
** お問い合わせフォーム用。このサイトはGmail使ってるんですけど、メール送るのに&lt;/strong&gt;GCP経由でAPI叩く必要あり**、ハードル高いと感じた。Gmailはセキュリティ厳しいんだなぁ。&lt;/p&gt;
&lt;p&gt;**All In One SEO Pack&lt;br&gt;
WebSub/PubSubHubbub&lt;br&gt;
WordPress Ping Optimizer&lt;br&gt;
** いわゆるSEO対策用。未だGoogleにsitemap反映されてないし、動いてるんだか動いてないんだか。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)も人の子ですので、サイトの運営費用を捻出すべく、Google AdsenseとAmazon Asociateの利用を考えてます。営利目的ではないのはご理解頂きたい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>英語学習してます</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-378/</link>
      <pubDate>Wed, 09 Sep 2020 23:32:42 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-378/</guid>
      <description>&lt;p&gt;今の職場では、PMスキル、ラインマネジメントスキル、ITインフラスキル共に&lt;strong&gt;頭打ち&lt;/strong&gt;となっているような気がしていて、新たな領域として英語にチャレンジしてます。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/about/writer/&#34;&gt;自己紹介&lt;/a&gt;に書いたように、田中(゜p゜)は海外のデータセンター構築のために1ヶ月×2回ほど行ったことありますが、&lt;strong&gt;データセンターにカンヅメ&lt;/strong&gt;だったので、英語学習なんてできませんでしたし、当然お話するのも困難です。&lt;/p&gt;
&lt;p&gt;なんかね、コンピュータ用語使って言いたいことは伝えられるんだけど、何言われてるのかよう分からんし、日常会話でコミュニケーション取るのができなかったのが悲しくて。&lt;/p&gt;
&lt;p&gt;スコットランドに出かけようとした時に、&lt;strong&gt;駅の窓口のおじいさんになんか怒鳴られた&lt;/strong&gt;のがトラウマです。ネット購入したのに上手く切符もらえず、結局列車の中でもう一回切符買った。&lt;/p&gt;
&lt;p&gt;たしかTOEICの最後の記録は600点くらいだったと思いますが、今は500点以下になってると思いますので、これを&lt;strong&gt;今年中に800点にする&lt;/strong&gt;、というのを目標にしてます。&lt;/p&gt;
&lt;p&gt;ちなみに使ってるツールは…。&lt;/p&gt;
&lt;p&gt;**&lt;a href=&#34;https://english-bell.com/ja/index.html&#34;&gt;イングリッシュベル&lt;/a&gt;&lt;br&gt;
** いわゆるオンライン英会話。DMEメソッドというのに興味があったのでやってる。&lt;br&gt;
シンプルな会話をレスポンスよくこなすことで英語脳？を作るというのがキーみたい。&lt;br&gt;
「No. This pen is under the desk, But it’s on the desk.」みたいな。&lt;br&gt;
&lt;strong&gt;こんなんでも田中(゜p゜)脳は十分混乱するよ！？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;**&lt;a href=&#34;https://play.google.com/store/apps/details?id=com.laix.lingochamp&amp;amp;hl=ja&#34;&gt;LingoChamp&lt;/a&gt;&lt;br&gt;
** スマホに入れてスピーキングの練習してる。色々試したけど、フィードバック機能があって、&lt;strong&gt;プレッシャーかかるアプリはこれだけ&lt;/strong&gt;だった。アプリの性質上、声が出せない環境では使えない(あたりまえ)。&lt;/p&gt;
&lt;p&gt;**&lt;a href=&#34;https://eigosapuri.jp/conversation/business/ev/&#34;&gt;スタディサプリ ビジネス英語コース&lt;/a&gt;&lt;br&gt;
** スマホに入れてスキマ時間の学習に。&lt;br&gt;
正直、飽きっぽく、スピーキングが苦手という田中(゜p゜)の特性には合ってない気がする。&lt;br&gt;
ビジネス特有の表現を身につけるという意味ではいいんだろうけど、コンテンツ流すとやった気になってしまうのが難点。&lt;/p&gt;
&lt;p&gt;**&lt;a href=&#34;https://play.google.com/store/apps/details?id=jp.go.nict.voicetra&amp;amp;hl=ja&#34;&gt;VoiceTra&lt;/a&gt;&lt;br&gt;
** スマホに入れて、この言い回しって、英語でどういうんだろう、という時に。&lt;br&gt;
とにかく音声認識機能が秀逸で、&lt;strong&gt;多少おかしな部分が合っても無理くりに伝わるようにしてくれる。&lt;/strong&gt;&lt;br&gt;
これ、海外に行った時のコンテンジェンシーツールとして、大活躍じゃないかなぁ。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://play.google.com/store/apps/details?id=net.languagecourse.vt.en&amp;amp;hl=ja&#34;&gt;&lt;strong&gt;英語単語/語彙の無料学習&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
スマホに入れて単語学習に。&lt;br&gt;
単語の学習効率高めるのに、単語カードが最も良いらしいので。あまりこだわりなし。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Kindleで洋書読む&lt;/strong&gt;&lt;br&gt;
一度邦訳を見たことがあるような気がするものを中心に読んでます。&lt;br&gt;
一回小学生レベルのを読んだら、形容詞、動詞ともに、見慣れないものが多くてひどい目に合ったので、単語知ってるビジネス書の方読んでます。&lt;/p&gt;
&lt;p&gt;てな感じで学習進めてますが、&lt;strong&gt;肝心のTOEICが、コロナとサイト爆死の影響で、全然予約取れないんです&lt;/strong&gt;けどね。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了： 貧乏はお金持ち(著者 橘 玲)</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-345/</link>
      <pubDate>Wed, 09 Sep 2020 09:49:00 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-345/</guid>
      <description>&lt;p&gt;マイクロ法人に興味があったので、読んでみた本。&lt;br&gt;
田中(゜p゜)はサラリーマンで、そこそこ稼いでいるので税金が高く、節税したいのですよ…。&lt;/p&gt;
&lt;p&gt;この本は、なぜサラリーマンの税金が高いのか。既に破綻してる社会保険制度について、背景から官僚のモチベーションまでを含めて、詳しく解説されてます。Amazon評価によれば小難しいとのことですが、ちょろっと企業の会計の仕組みに興味があれば、そんなに難しくないように田中(゜p゜)は思いました。&lt;/p&gt;
&lt;p&gt;また、サザエさんの磯野家で、サラリーマンやめてマイクロ法人にしてみた場合の例がわかりやすく説明されていて、実際にどーなるのかイメージが湧きやすいです。&lt;/p&gt;
&lt;p&gt;あー、こんなにサラリーマンてこんなにボッタクられてるんだーとか、中小企業の社長が妙に金持ってるのはこういう理屈かー、というのが腑に落ちました。&lt;/p&gt;
&lt;p&gt;ただ、注意しなければいけないのは、&lt;strong&gt;この本は2012年に出版されてるので、現在とは税制と徴収の罰則が異なる部分があり、節税の手段が一部今は使えない&lt;/strong&gt;ということです。特に社会保険のくだり。&lt;/p&gt;
&lt;p&gt;それを差し引いても、節税になることは間違いなさそうであり、リスク背負いがちな田中(゜p゜)にとってみれば魅力的な提案だなー、とは思いました。※実行するかはまた別の話。&lt;/p&gt;
&lt;p&gt;腕に自身が有り、税率が高いサラリーマンの方は、マイクロ法人にトライしてみる価値はあるかもしれません。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>WordPress構築</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-324/</link>
      <pubDate>Wed, 09 Sep 2020 07:04:06 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-324/</guid>
      <description>&lt;p&gt;腐ってもエンジニア魂は忘れないッ！&lt;br&gt;
ということで、このサイトは可能な限りDIYで安く作ってます。&lt;br&gt;
年間維持費はドメインの1400円くらい？&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Google Domain&lt;!-- raw HTML omitted --&gt;でドメイン取得。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;GCP(Google)のGCE無料枠&lt;!-- raw HTML omitted --&gt;活用。バックアップ、監視等完備。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;CentOS最新版＋Wordpress最新版&lt;!-- raw HTML omitted --&gt; ※2020/09/01時点&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://qiita.com/takutakutaku/items/c8873c7085e450b602bc&#34;&gt;Let`s Encrypt証明書によるSSL化&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://www.rem-system.com/httpd-http2/&#34;&gt;HTTP2対応&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;WordPressは2年位前に箱だけやったことがあったんだけど、コンテンツを詰め込むことはなかったです。よって、一番苦戦しているのはWordPressのオペレーション(笑)&lt;/p&gt;
&lt;p&gt;WordPressの作りは大きく変わらんですね。MySQLのバージョン上がり過ぎてて、アカウント登録に苦戦したくらいかな。&lt;/p&gt;
&lt;p&gt;あと、世間的に常時SSLの流れになっとるのと、HTTPが2.0になってて、SSLにすると効率が良いらしいので、慌ててLet`s Encryptで証明書実装しました。&lt;/p&gt;
&lt;p&gt;自分がやりたいと思うことはたいてい誰かが先にやってるので、ググればいいだけの、良い世の中になりましたねー。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了： Who Moved My Cheese？　英語版</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-322/</link>
      <pubDate>Wed, 09 Sep 2020 06:47:36 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-322/</guid>
      <description>&lt;p&gt;既に日本語版の「チーズはどこに消えた？」を読んだことあるけど、英語学習のために、原書読んでみた。要するに、&lt;strong&gt;既得権益にこだわってあれこれ心配する前に、色々動いてみようよ&lt;/strong&gt;、というお話。&lt;/p&gt;
&lt;p&gt;正直、田中(゜P゜)は変化に対して何の抵抗もない人なので、刺さるものはなかったのですが、人生守りに入って悶々としてる人にはオススメです。ササッと読める短さだし。&lt;/p&gt;
&lt;p&gt;ここのところ読んでる本が英語で、啓蒙系なので、意識高いみたいで嫌だなぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>読了： THE SHIFT 英語版</title>
      <link>https://y2tanaka.github.io/git-pages/blog/post-319/</link>
      <pubDate>Wed, 09 Sep 2020 06:33:55 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/blog/post-319/</guid>
      <description>&lt;p&gt;本読みました。&lt;br&gt;
日本語版もあったけど、あえて頑張って英語の原書で。&lt;/p&gt;
&lt;p&gt;2010年位の本ですが、「人口の年齢構成」「発展途上国の台頭」「技術革新」「エネルギー枯渇」「家族構成の変化」の5つ？(あやふや)の変化を元に、2025年のヤバい未来と、明るい未来を予測し、仕事と人生をどう考えるか、という本です。&lt;/p&gt;
&lt;p&gt;英語のレベルとしてはたぶん中級者レベル。&lt;br&gt;
頑張ればTOEIC700点前後の田中でも150〜200WPMで読めるレベル。&lt;/p&gt;
&lt;p&gt;個人的には少子高齢化、年金崩壊は先進国どこでも起こってるんだなぁ、というのを知ったのと、労働者の流動性が高まってて、要はAmazonの物販みたいに労働者と評価がリストされたサービスが展開されてるのが印象的でした。&lt;/p&gt;
&lt;p&gt;発刊は2010年でもう10年経ってますが、コロナの影響でリモートワークに圧迫されてる自分と、残念な未来に提示されたバーチャルコミュニケーションに生活が侵食される登場人物とをオーバーラップして見てしまいました。&lt;/p&gt;
&lt;p&gt;労働者として、生活と仕事を両立させ、明るい未来を築くために提案されてたのは、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;複数の専門性を持つこと&lt;/li&gt;
&lt;li&gt;会社以外の横のつながりを持つこと&lt;/li&gt;
&lt;li&gt;小さな起業家として働くこと&lt;/li&gt;
&lt;li&gt;物質至上主義から抜け出すこと&lt;/li&gt;
&lt;li&gt;選択を繰り返すこと&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ですかね。&lt;/p&gt;
&lt;p&gt;大中小、いろんな規模の会社で働いてきた田中(゜ｐ゜)からすると、企業の論理について「そうだよねー」と頷くことしきりでした。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>仕事の生産性を上げよう！</title>
      <link>https://y2tanaka.github.io/git-pages/rise-work-efficiency/</link>
      <pubDate>Tue, 08 Sep 2020 22:43:33 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/rise-work-efficiency/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;はー。&lt;/p&gt;
&lt;p&gt;相変わらずタイトル先に決めちゃって、後でどうしようかと後悔してるパターンですこの記事。&lt;/p&gt;
&lt;p&gt;チャレンジもチャレンジでして、何がチャレンジかっつうと、&lt;strong&gt;世の中の田中(゜p゜)よりはるかにスマートな人達に対してチャレンジング&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は自分で自分のこと、頭いいとか思えないんですよね。自分よりはるかに頭の回転早くて活動エネルギー大きい人、たくさんいたので。&lt;/p&gt;
&lt;p&gt;今回の記事は、&lt;strong&gt;そんな田中(゜p゜)でもできるお仕事効率化のTIPS&lt;/strong&gt;をまとめました。&lt;br&gt;
出処はだいたい田中(゜p゜)の好きな、あやしげな啓蒙本ですが、田中(゜p゜)でもできたやつです。&lt;/p&gt;
&lt;p&gt;まず、どこに刺さりそうかハッキリするために、田中(゜p゜)の基礎学力レベルを晒します。&lt;/p&gt;
&lt;h2 id=&#34;田中pの学力レベル&#34;&gt;田中(゜p゜)の学力レベル&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;たぶん平均よりはすこし高い。MARCHレベル。&lt;/li&gt;
&lt;li&gt;日本語はだいぶ得意だが、英語は平均よりちょい上、数学は平均&lt;/li&gt;
&lt;li&gt;お話するのは嫌いじゃないが、瞬間的な切り返しは苦手。&lt;/li&gt;
&lt;li&gt;スーパー優良企業の社員で、田中(゜p゜)より基礎能力が下の人は見たことない。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;基本的な考え方&#34;&gt;基本的な考え方&lt;/h2&gt;
&lt;p&gt;基本は&lt;strong&gt;面倒くさいので要領よくやりたい&lt;/strong&gt;、というモチベーションから始まります。概ね以下の順番でお仕事をふるいにかけていくと良いです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;そもそもその仕事は必要か、というところから始める。&lt;/li&gt;
&lt;li&gt;可能な限り過去の事例をコピペする&lt;/li&gt;
&lt;li&gt;自分じゃなくてもできる仕事をアウトソースする。&lt;/li&gt;
&lt;li&gt;ルーチンワークは品質維持しつつ、自動化できる方法を考える&lt;/li&gt;
&lt;li&gt;道具のフル活用。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;そもそもその仕事タスクは必要か&#34;&gt;そもそもその仕事(タスク)は必要か？&lt;/h2&gt;
&lt;p&gt;ルーチンワークでも、誰かから依頼された仕事でもそうですが、「&lt;strong&gt;その仕事って本当に必要なのかな&lt;/strong&gt;」と問うところからはじめた方が良いです。&lt;/p&gt;
&lt;p&gt;請負のプロジェクト案件とかであれば、WBSに載ってないタスクを振られていて、&lt;strong&gt;「スケジュール全体にインパクトあるんで、何かとトレードオフになりますよ」、という交渉&lt;/strong&gt;をしたほうが良いです。&lt;br&gt;
それをなんとかするのは自分の仕事じゃなく、&lt;strong&gt;振った人の仕事&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;ルーチンワークであれば「何のためにやってるのか」という根本をたどると、ワークそのものを削減できたりしますし、&lt;strong&gt;タスクの組み換えや結合などでタスクを減らすこと&lt;/strong&gt;ができます。&lt;/p&gt;
&lt;p&gt;例えば、ADのユーザ登録作業をAさんが「ユーザ作成」、Bさんが「グループ＋属性の変更」でやってたのを、Aさんに寄せてしまえばオーバーヘッド分が削減できます。※こんなんどこでもやってると思うので、単純な喩え話です。&lt;/p&gt;
&lt;h2 id=&#34;相手が何を期待しているのか確認する&#34;&gt;相手が何を期待しているのか確認する&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;致し方なくお仕事を受けちゃった&lt;/strong&gt;場合です。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;お仕事というのは、アウトプットが出て初めてお金がもらえるもの&lt;/strong&gt;なので、依頼者がどんなアウトプットを期待しているか確認しないと、せっかく仕上げたとしても「こんなん期待と違う！」と言ってハネられます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;時間の無駄&lt;/strong&gt;なので、以下のようなことに注意して進めると良いと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;**言語能力を磨き、相手が何を言いたいのか正しく理解する。**同じ単語を使ってても、違う意味を指していたりすることがある&lt;/li&gt;
&lt;li&gt;アウトプットは「いつ」「誰に」「何のために(ゴール)」「品質(どんだけ丁寧にやるのか)」、依頼者に確認する。後でひっくり返されないようメモを取って依頼者と共有する。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;最低限の言葉で&lt;/strong&gt;期待するアウトプットを出せるよう、工夫する。(例)アウトラインを箇条書きで3項目でにまとめる。アウトラインに沿って内容を埋める、最初に結論、内容、最後にまた結論みたいな構成にする、等。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;完成度が低い状態でも、期限までに複数回依頼者に内容を確認してもらう&lt;/strong&gt;。完成させて見せてハネられる、というのが時間効率が最も悪い。(例)パワポの資料の場合文章だけを埋めて、図表はメモ書きで説明する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;言語能力は「読む」「書く」「聴く」「話す」、どのカテゴリでも重要&lt;/strong&gt;になりますねー。&lt;/p&gt;
&lt;p&gt;短期的な観点だとただ働く、というのでも問題ないかもしれないですが、長期的な視点では評価という形で報酬にハネ帰ってきちゃいます。&lt;/p&gt;
&lt;h2 id=&#34;可能な限り過去の事例をコピペする&#34;&gt;可能な限り過去の事例をコピペする&lt;/h2&gt;
&lt;p&gt;過去の事例や、同様のお仕事のアウトプットは遠慮なくコピペして使いましょう。&lt;br&gt;
依頼者の要件に合わない差異部分だけ、ブラッシュアップして使いましょう。&lt;/p&gt;
&lt;p&gt;というか、企業にとって重要なのは、こうした&lt;strong&gt;過去の資産をブラッシュアップして共有のパーツとして資産化し、類似事例の対応の際のコストを削減&lt;/strong&gt;することだと思います。&lt;br&gt;
いいものがより安く提供できるでしょ。&lt;/p&gt;
&lt;p&gt;技術的な仕事の場合は、Webで調べて類似事例をパクるというのも、立派な生産性の向上手段です。ただ、著作権とかには注意してください。&lt;/p&gt;
&lt;h2 id=&#34;可能な限りアウトソースする&#34;&gt;可能な限りアウトソースする&lt;/h2&gt;
&lt;p&gt;暇な部下や、同僚を見つけてアウトソースしてしまいましょう。&lt;br&gt;
これは良いことが3つあります&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;自分が楽になる(あたりまえ)&lt;/li&gt;
&lt;li&gt;暇な人の稼働率を上げられる。※企業というのは暇な状態を嫌がるので。&lt;/li&gt;
&lt;li&gt;依頼した人に好感を持ってもらえる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;3つめは心理学的な話ですが、&lt;strong&gt;困った感じで依頼して、やってもらった後で感謝する&lt;/strong&gt;と、依頼先の人との関係性が深まるそうです。田中(゜p゜)も実際そうでした。&lt;/p&gt;
&lt;p&gt;あと技術的なタスクの場合は&lt;strong&gt;コンピュータさんにやってもらう&lt;/strong&gt;も立派なアウトソースかと思いますので、次の項目に書きます。&lt;/p&gt;
&lt;h2 id=&#34;可能な限り自動化する&#34;&gt;可能な限り自動化する&lt;/h2&gt;
&lt;p&gt;面倒な計算や、文字列の置換などは、コンピュータさんにやってもらうこと良いと思います。&lt;br&gt;
が、ワンショットの作業であれば、まず最初に自動化の仕組みを作る工数と、自分で手を動かす工数とを比較して、&lt;strong&gt;どっちが早いか判断必要&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;ポイントは、以下でしょうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Excelの関数を使いこなす&lt;/li&gt;
&lt;li&gt;スクリプトが書けると幅が広がる。&lt;/li&gt;
&lt;li&gt;何十万行もあるような計算はAccessが便利&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;1つ目について。&lt;br&gt;
例えがちょっとトリッキーですが、田中(゜p゜)は何百台もある拠点InternetVPN機器のconfigをExcel関数で作ってました。だって、拠点ごとに違うのって、IPアドレスとPPPoEだけだから。&lt;br&gt;
テキストでファイル作って置換してたら面倒くさいし、&lt;strong&gt;ミス多発で気絶してた&lt;/strong&gt;と思います。&lt;/p&gt;
&lt;p&gt;2つ目について。&lt;br&gt;
例えば、膨大なテキストログのアーカイブから特定の条件を抽出したい時、Windowsでnotepadなんか開いたら固まりますし、Linuxでawk叩いたほうが一万倍早いです。&lt;br&gt;
いや、Windows職人は固まらないエディタ使ってましたけど…。&lt;/p&gt;
&lt;p&gt;3つ目。&lt;br&gt;
Excelで3万行超えるようなデータ集計作業だと、だいたいが固まって(終わらないから固まってるように見える)仕事にならないので、Accesに放り込んで簡単なSQL書いたほうが遥かに効率的です。&lt;/p&gt;
&lt;p&gt;このあたりは「基本的な考え方」に書いた「面倒くさい」というモチベーションの元、&lt;strong&gt;いかにアンテナ高く効率化のネタを集められるか&lt;/strong&gt;、というのもあるかと思います。&lt;/p&gt;
&lt;h2 id=&#34;道具をフル活用する&#34;&gt;道具をフル活用する&lt;/h2&gt;
&lt;p&gt;最後に残った&lt;strong&gt;自分の手を動かしてやるしかない仕事&lt;/strong&gt;ですが、これは道具の使い方の上手さの話だと思います。&lt;/p&gt;
&lt;p&gt;これはどの啓蒙本にも書いてありますが、PCを効率よく使いましょう。&lt;br&gt;
つまるところ、&lt;strong&gt;ショートカットキーを使いこなし、なるべくマウスを使わない&lt;/strong&gt;、ということです。&lt;br&gt;
本当にチリツモですが、積み重なると大きな山となって、アウトプットの作成スピードに大きく影響します。&lt;/p&gt;
&lt;p&gt;マウスなるべく使わないのは最もベーシックなスキルで、業務が特定のアプリケーションに依存してるのであれば、その&lt;strong&gt;アプリケーションの仕様をきちんと把握して、使い倒す&lt;/strong&gt;のが良いと思います。&lt;/p&gt;
&lt;p&gt;例えばGmailなんかだって、設定でショートカットキーONにすれば、便利ショートカットキー山ほどあります。ショートカットキーONにして、「？」入力してみて下さい。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;2020/09/16&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>管理職、やってみた</title>
      <link>https://y2tanaka.github.io/git-pages/try-management-role/</link>
      <pubDate>Tue, 08 Sep 2020 21:41:18 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/try-management-role/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;この話は2015年頃のことだ思いますが、その頃の田中(゜p゜)は一生懸命マネジメント系の啓蒙本を読んでましたので、いわゆる「&lt;strong&gt;管理職、やってみた&lt;/strong&gt;」というやつです。&lt;/p&gt;
&lt;p&gt;実際のところ、田中(゜p゜)が管理職になったのは、36〜37歳の時で、協力会社さん含めて12〜13名の部下が付きました。情報システム部門の課長クラスだったと思いますが。&lt;/p&gt;
&lt;p&gt;それまではプロジェクトマネージャという役割で、それ以上のメンバーが下にいたことはあったんですが、それとは明確に差がありました。&lt;/p&gt;
&lt;h2 id=&#34;他部署との横のつながりが生じる&#34;&gt;他部署との横のつながりが生じる&lt;/h2&gt;
&lt;p&gt;管理職になって、まず最初に感じたのは、&lt;strong&gt;他部署とのインターフェイスとしての役割を果たさねばならない&lt;/strong&gt;、ということです。田中(゜p゜)はITインフラの面倒を見とったのですが、実際の業務レベルでは、上長(部長)は細かいことは分かりませんので、他部署とのフロントに立つことになります。&lt;/p&gt;
&lt;p&gt;例えば、田中(゜p゜)がいた時にメールシステムをMS ExchangeからG mailに変えたんですが、移行計画、ユーザ教育、ヘルプデスク等の運用について、他の部署のフロントに立って説明したのは田中(゜p゜)でした。&lt;/p&gt;
&lt;h2 id=&#34;経営会議に顔を出す&#34;&gt;経営会議に顔を出す&lt;/h2&gt;
&lt;p&gt;先ほどの横のつながりと同じ理屈で、現場の細かい話のフォローのために、部長にお伴して&lt;strong&gt;経営会議に顔を出す&lt;/strong&gt;ようになります。もちろんレギュラーメンバーではなく、四半期に一回くらいですけど。&lt;/p&gt;
&lt;p&gt;まーそこでの会話はカルチャーショックでしたね。だって数字の話しかしてねーもの。&lt;/p&gt;
&lt;p&gt;あと怖い。&lt;br&gt;
ギスギスなんてレベルじゃなくて、&lt;strong&gt;生死かかってるレベル&lt;/strong&gt;｡&lt;br&gt;
まあ当たり前なんですかね。会社の未来と、従業員の行く末が関わってると思えば、そんなテンションにでもなるんでしょうね。&lt;/p&gt;
&lt;p&gt;あんなテンション、田中(゜p゜)はでっかいインフラの切替の直前にくらいしか経験してませんが、それが毎週、毎日だったら頭おかしくなるわ。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)にはしんどい世界だなー、とは思いました。&lt;/p&gt;
&lt;h2 id=&#34;責任が生じる&#34;&gt;責任が生じる&lt;/h2&gt;
&lt;p&gt;他部署とのフロントに立つ＝実質的に責任が生じる、なのかな、と思います。組織上の責任者は別に割り当てられてたとしても、フロントに立って業務調整してると、他部署はなんかあった時にフロントに問い合わせてくるようになります。&lt;/p&gt;
&lt;p&gt;まぁ、情報システムのお仕事の場合は「システム動かないんだけど！」というような嫌な感じの問い合わせなんですけど…。&lt;/p&gt;
&lt;h2 id=&#34;部下の管理は意外と大変でもなかった&#34;&gt;部下の管理は…、意外と大変でもなかった&lt;/h2&gt;
&lt;p&gt;そこそこ名のある企業だったからか、部下は優秀で癖もないメンバーが揃ってました。あと、その頃田中(゜p゜)は胡散臭い啓蒙本を読み漁ってましたので、メンバーには楽しく働いてもらおうと心がけており、人間関係で深刻なトラブルはありませんでした。&lt;/p&gt;
&lt;p&gt;他のメンバーからすると、のんびりやりたいのに色々やりたがる面倒な奴、とは思われてたでしょうけどね。田中(゜p゜)もそれ分かった上で色々お願いしてました。&lt;/p&gt;
&lt;p&gt;一人だけ、PCの管理業務を頑なに自分のやり方で守り、属人化を捨てきれない人がいましたが、色々諭した結果、他部署に移る方向となってしまいました。&lt;/p&gt;
&lt;h2 id=&#34;情報のhubになった結果&#34;&gt;情報のHUBになった結果…。&lt;/h2&gt;
&lt;p&gt;横のつながり、上のつながり、下のつながりができると、少なくともITインフラの業務については、HUBのような状態になります。&lt;strong&gt;ある程度自分で意思決定できるし、業務をコントロール&lt;/strong&gt;できる。&lt;br&gt;
この状態は、大変ではあったんですけど、楽しかったですね。&lt;/p&gt;
&lt;p&gt;ただ、情報が集まってくると、今まで見えてこなかったものがたくさん見えるようになります。それまでは会社のいい部分しか見えなかったのが、そうではない部分もたくさん見える。&lt;/p&gt;
&lt;p&gt;情報の精度が上がる＝&lt;strong&gt;未来の予測の精度が上がる&lt;/strong&gt;、でして、結局田中(゜p゜)は自分の未来に希望があまり持てない状態だということに気づいて、&lt;strong&gt;2年ほどして転職&lt;/strong&gt;してしまいました。&lt;/p&gt;
&lt;p&gt;その頃は、仕事に使命感を感じていたので、「今の楽しい状態」と、「将来的にやりたいことが実現できる状態」とを天秤にかけた時に、後者を選択した、ということです。&lt;br&gt;
&lt;strong&gt;今だったら、残る選択肢とで、結構悩んだ&lt;/strong&gt;んだろうなー、と思います。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;楽しく働けるって、かなり恵まれてる状態&lt;/strong&gt;なので。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;今回は田中(゜p゜)が管理職になった時に感じたことをつらつら並べてみたので、まとまりません(笑)&lt;/p&gt;
&lt;p&gt;啓蒙本読んで得た知識と違うところもあったけど、概ね書いてあったことは本当で、田中(゜p゜)はかなり恵まれてるケースのようでした。特に部下のところ。&lt;/p&gt;
&lt;p&gt;この経験に味をしめた田中(゜p゜)は、さらなるステップアップを目指して次に進みます。&lt;br&gt;
この話はまた別の記事で。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>「やりたいこと」をどう実現するか</title>
      <link>https://y2tanaka.github.io/git-pages/how-to-realize/</link>
      <pubDate>Tue, 08 Sep 2020 16:01:09 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-to-realize/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;はぁー、記事の中で一番重たいテーマかもしれない。&lt;br&gt;
でも田中(゜p゜)、タイトル書いちゃったからガンバル。&lt;/p&gt;
&lt;p&gt;仕事で「やりたいこと」実現するのって難しいですよね。あと、生活とのバランスを取るのも難しい。この記事は、「仕事」と「生活」の観点から、「やりたいこと」を実現するためにどうすればいいのか、考えてみます。&lt;/p&gt;
&lt;p&gt;ちなみに田中(゜p゜)は迷走してますが、齢40を超えてある程度世の中の仕組み、企業の仕組み、個人の願望などを垣間見てきて、どうすれば良かったのか、うっすら分かりかけてきたきた気がします。&lt;/p&gt;
&lt;p&gt;失敗を繰り返しても、同じように反省を繰り返して、小さな改善を積み重ねていけばいーんです。たぶん。&lt;/p&gt;
&lt;h2 id=&#34;まず自分がやりたいことは何なのか認識する&#34;&gt;まず自分が「やりたい」ことは何なのか認識する&lt;/h2&gt;
&lt;p&gt;当然、人によって、「やりたいこと」が何なのかは違います。&lt;br&gt;
例えば&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;お金をたくさん儲けたい&lt;/li&gt;
&lt;li&gt;権力を振りかざしたい&lt;/li&gt;
&lt;li&gt;社会的地位を得たい&lt;/li&gt;
&lt;li&gt;技術を極めたい&lt;/li&gt;
&lt;li&gt;自分の力を社会に還元したい&lt;/li&gt;
&lt;li&gt;贅沢せずにのんびり暮らしたい&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;とか。&lt;br&gt;
あるいはこれらを組み合わせたものかもしれませんが。&lt;/p&gt;
&lt;p&gt;これがハッキリしてない限りは、先に進めないと思います。&lt;br&gt;
いわゆる要件つうやつですね。&lt;/p&gt;
&lt;h2 id=&#34;社会の仕組みルールを把握する&#34;&gt;社会の仕組み(ルール)を把握する&lt;/h2&gt;
&lt;p&gt;今の世界は、資本主義優勢なので、単純な話「&lt;strong&gt;資本を持ってる奴＋(適法な範囲で)資本を拡大できる奴がエラい&lt;/strong&gt;」というのが最も基本的なルールです。&lt;br&gt;
また、稼いだほうがエラい、という価値観は、&lt;strong&gt;周囲に大量消費、物質主義を撒き散らし&lt;/strong&gt;ます。&lt;/p&gt;
&lt;p&gt;これは、いかにキレイ事を言おうとも拭えない、現在の世界を支配するルールです。&lt;/p&gt;
&lt;p&gt;だから腐るほど資産持ってたりとか、すげー稼げる人は「やりたいこと」が簡単にできます。ベンチャーで成り上がって、株売り抜けた人なんか、みんなまた好き勝手事業始めたりとか、ベンチャーキャピタル立ち上げて有望な企業の育成手助けしたりしてますよね。&lt;/p&gt;
&lt;p&gt;ただ、そもそも「やりたいこと」がお金儲けだった人は、お金儲け切っちゃった時点で燃え尽き、金があっても何も幸せじゃない、とか言い始めますけど(笑)&lt;/p&gt;
&lt;h2 id=&#34;ルールとやりたいこととのギャップを認識する&#34;&gt;ルールとやりたいこととのギャップを認識する&lt;/h2&gt;
&lt;p&gt;そもそも世界を支配するルールと自分のやりたいことが合ってる人は、うまくいく確率が高いです。つまり、&lt;strong&gt;お金儲けしたい人。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;逆に、それ以外の人は、よっぽど運が良いか、自分を騙しきらないと、だいたいがストレスフルな日常を送る気がします。&lt;br&gt;
のんびり暮らしたいとか、社会に貢献したいとか、技術を極めたいとか。&lt;br&gt;
また、今は良くても、&lt;strong&gt;長期的な視野で見ると、ストレスフルになる&lt;/strong&gt;んじゃないでしょうか。&lt;/p&gt;
&lt;p&gt;だって、&lt;strong&gt;世界のルールから逸脱してる&lt;/strong&gt;んだもの。&lt;br&gt;
これってシンプルだけどとても重要なことだと思います。&lt;/p&gt;
&lt;h2 id=&#34;手段を選ぶ&#34;&gt;「手段」を選ぶ&lt;/h2&gt;
&lt;p&gt;仕事で「やりたいこと」を実現する手段て、それほど多くない気がします。概ね以下の3パターンくらいじゃないでしょうか。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;企業に属し、リソースを借りて大きなことをやる&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;自分で起業して、好きなことをやる。&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;ある程度あきらめて、生活とのバランスを取る&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;いや、もっと細かく分類できるんだと思うけど、それやるとまとまらなくなるんです。&lt;/p&gt;
&lt;p&gt;日本の場合は、&lt;strong&gt;(1)が正しいのだ、というような同調圧力がある&lt;/strong&gt;ので、(2)(3)は白い目で見られがちなんですが、そういう生き方をして幸せになってる人の情報が、インターネットの力で表に出るようになって、だいぶ流れが変わってる気がします。&lt;/p&gt;
&lt;p&gt;問題は…。&lt;br&gt;
&lt;strong&gt;(1)の選択肢が、資本主義のルールに従うことそのもの&lt;/strong&gt;だということかな、と思います。だから、お金儲けを目的としている人以外には合わない。&lt;strong&gt;企業って大きくなればなるほど、ルールに従わざるを得なくなる&lt;/strong&gt;ものだから。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)については、そもそもお金が稼げないと、やりたいことはできない。&lt;/strong&gt;&lt;br&gt;
また、稼ぐことにこだわって、レバレッジ目的で人を雇ったり、お金を借りたりすると、&lt;strong&gt;ますますやりたいことから遠のいていく&lt;/strong&gt;ので、そもそもそのやりたいことに勝算があるかどうかが重要。&lt;/p&gt;
&lt;p&gt;ただ、GAFAとかでも、ビジネスモデルありきだったのはAmazonだけじゃないのかなぁ。&lt;br&gt;
他、急成長した企業でも、スタートアップ期は全然違うビジネスから始めてて、&lt;strong&gt;たまたま当たったのが成長した&lt;/strong&gt;なんてのはよく聞く話で、まずお金が稼げないとどうにもならない。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(3)もそんな簡単ではない。&lt;/strong&gt;&lt;br&gt;
要は(1)の同調圧力がある中で、いかに世界のルールや会社と距離を取っていくか、という話になると思うんだけど、実力がないと必要最低限のお金すら稼げなくなってしまう。&lt;/p&gt;
&lt;p&gt;つまり、&lt;strong&gt;全部簡単じゃない。&lt;/strong&gt;&lt;br&gt;
自分のやりたいことに合わせてどこに身を置くか、という&lt;strong&gt;ポジショニング&lt;/strong&gt;は、やりたいことをやる上で、ものすごく大切。&lt;/p&gt;
&lt;p&gt;そして、&lt;strong&gt;どれが自分に合ってそうか、無理なく続けられそうか&lt;/strong&gt;、というのを選ぶ必要があるんだと思う。&lt;/p&gt;
&lt;h2 id=&#34;田中pの場合&#34;&gt;田中(゜p゜)の場合&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)の場合は(1)で、お金にあまり興味はなく、「&lt;strong&gt;自分の持ってる技術の力で社会貢献したい&lt;/strong&gt;。&lt;strong&gt;企業のリソースを使ってレバレッジかけたい&lt;/strong&gt;」というような思想でしたよ。&lt;/p&gt;
&lt;p&gt;結果、&lt;strong&gt;クッソストレスフル&lt;/strong&gt;でしたけど。&lt;/p&gt;
&lt;p&gt;結局のところ、ルールから上手く身をかわして生きることを考えないと、ストレスでしんでまう。&lt;/p&gt;
&lt;p&gt;今は(3)とか(2)でやる方向に倒れてますが、(2)でやる場合は「拡大しない」という選択肢が、ルールから距離を置く最も良い方法なのかな、と思ってます。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;
&lt;p&gt;今の世界のルールは「お金儲けをしたい」人に向いている&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;それ以外の人は、いる場所を考えたほうが良い。特に大きな企業ほど、ルールに従う傾向にある。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;「大企業に就職して出世する」のはルールに従うことそのもの。よっぽど運が良いか、能力がないとストレスフル。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;起業するとか、会社と距離を置くという選択肢は、日本でも徐々に広まりつつあるので、自分にとって最適なものを選ぶ。&lt;/p&gt;
&lt;p&gt;なんて**、賢い人ならとっくに気づいてそうなことに、40で気づいた田中(゜p゜)**って一体…。ま、人生折り返し地点だし、まだ半分もあるさね。&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>泥船から決死の脱出</title>
      <link>https://y2tanaka.github.io/git-pages/escape-from-burning-pj/</link>
      <pubDate>Mon, 07 Sep 2020 10:49:26 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/escape-from-burning-pj/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)は、過去インフラ系のプロジェクトのPM、PMO、PL、メンバーとして20年、山ほど案件を担当してきました。&lt;/p&gt;
&lt;p&gt;辛いことは何度もありましたが、みなそれなりにやり通してきたと自負しとるのです。&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;が、この案件だけは唯一途中で逃げました。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ちなみに会社は脱出したことありますけど、その時は案件はクローズしてから去ってます。&lt;br&gt;
どうして失敗したのか、どうすればよかったのか、今でもいろいろ考えますが、答は見つかりません。&lt;/p&gt;
&lt;p&gt;この失敗を胸に刻み、何かを掴みたいと思ってこの記事を書いてます。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;&lt;strong&gt;案件内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;モノがモノだけに少しぼかしてます。あと背景書かないと理解しづらい部分あると思うので、他の記事より少し細かく体制を書きます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 　某官公庁系 情報システム基盤総入れ替え(データセンター、ネットワーク、サーバー、PC)&lt;/li&gt;
&lt;li&gt;案件規模： 予算：数十億 期間：5年 メンバー100人 エンドユーザー2000人&lt;/li&gt;
&lt;li&gt;田中(゜p゜) ： PM支援兼技術支援リーダー。配下10名&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;複雑なんで、体制を絵にすると、田中のポジションはだいたい以下の通り。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)のポジションは、某ビックベンダーの技術統括/プロジェクト統括グループのアンダーに自社のメンバーを複数人を入れ、その人達を管理するというもの。&lt;/p&gt;
&lt;p&gt;ちなみにこの統括チームは&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;総勢15人ほどいましたが、10人が田中(゜p゜)チーム&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;です。さらに管下メンバーにこういうデカい案件の経験は一切ない。&lt;br&gt;
これだけでも相当無理あると思うんですが、これは理由を後で述べます。&lt;/p&gt;
&lt;p&gt;ビッグベンダーはグループ企業を多数抱えているので、技術視点、プロジェクト視点で、技術部隊総勢100名をコントロールしていく、というのが統括のミッション。&lt;/p&gt;
&lt;p&gt;プロジェクトの成否を握るけっこう重要な役割で、PM、技術としての&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;田中(゜p゜)の戦場スキルを最大に出していかなければならないハードなやつ。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;だと思った。&lt;/p&gt;
&lt;p&gt;あと、技術的には5年くらい前の枯れた技術使ってたんですけど、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;現行事業者が別ベンダー&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;(これまたビッグ)というのもポイント。&lt;br&gt;
基本、客にはいい顔しつつ、協力どころかちくちく抵抗してくる位置づけ。&lt;/p&gt;
&lt;p&gt;まあ本来なら継続できてた案件を取りこぼしちゃったわけだから、多少なりとも嫌がらせしてくるのは想定の範囲内。&lt;/p&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;h4 id=&#34;ビックベンダーと自社の関係性&#34;&gt;ビックベンダーと自社の関係性&lt;/h4&gt;
&lt;p&gt;そもそも田中(゜p゜)の所属する企業からすると、このビックベンダーとの直接取引は初でした。グループ企業経由しての取引はあったみたいだけど。&lt;/p&gt;
&lt;p&gt;そういう意味で、田中(゜p゜)には案件拡大や、絶対逃げちゃダメ、みたいなプレッシャーもありました。自社には&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;専属の営業いなかった&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;んで、経営から直接言われてたんですけどね。&lt;/p&gt;
&lt;p&gt;重要なポジションではありましたが、新参者だったし、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;ネーム的にも実質的にも権限はほぼ無かった&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;と言って良いです。&lt;/p&gt;
&lt;h4 id=&#34;田中pの関与時期&#34;&gt;田中(゜p゜)の関与時期&lt;/h4&gt;
&lt;p&gt;田中(゜p゜)はこの案件の提案の後半段階から入ってました。その後、紆余曲折ありながらも、めでたく受注。&lt;/p&gt;
&lt;p&gt;提案段階で2名だったのを、構築段階では要員足りないってんで人をあてがって、なんだかんだ10名まで増やしてもらったつう感じです。&lt;/p&gt;
&lt;h4 id=&#34;提案段階でのけぞったこと&#34;&gt;提案段階でのけぞったこと&lt;/h4&gt;
&lt;p&gt;原因分析は別項目あるんで、とりあえず入って提案でのけぞったことを書きます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;提案書は&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;全部で2000ページオーバー&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;。そのうち半分が補足資料。&lt;/li&gt;
&lt;li&gt;こんなデカい会社にも関わらず、過去の事例の参照が難しい。アセット化どころではない。&lt;/li&gt;
&lt;li&gt;提案メンバーは40名。にも関わらず、日本語が壊滅的で、田中(゜p゜)はなぜか200ページくらい書いた。&lt;/li&gt;
&lt;li&gt;各グループは、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;コンペのためにコンテ(予備金)と原価をゴリゴリに削られてやる気ない。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;PMが社内調整をタテに何もしない。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;半年前から準備してんのに、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;WBSができたのが、提案書提出3日前&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;だった。&lt;br&gt;
※金に関わる部分だったので、田中(゜p゜)がPMに強く依頼してた。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;まあ官公庁系じゃなくても、よくある話なのかもしれませんが。&lt;/p&gt;
&lt;h4 id=&#34;提案後の田中pのアクション&#34;&gt;提案後の田中(゜p゜)のアクション&lt;/h4&gt;
&lt;p&gt;「PM何もしない」「グループ会社は金削られてやる気ない」「現行事業者からの移行」ということで、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ヤバすぎるのを認識した&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ので、取り急ぎ田中(゜p゜)は初動が大切だと思い、やべェアクションにかかりました。もちろん何もしないよりマシだろ、という自爆覚悟です。&lt;/p&gt;
&lt;p&gt;端的にいうと、PMの上司に対して、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;「このPMだと失敗するんで、田中(゜p゜)をPMにして下さい」&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;という申し入れ。&lt;/p&gt;
&lt;p&gt;もちろん、提案活動通して、ムチャクチャ下ネゴしたり、上役と信頼関係築いてからですよ？&lt;br&gt;
自惚れでも何でもなく、それが一番マシな選択肢だと思ったので、プロジェクトのためにそうしました。&lt;/p&gt;
&lt;p&gt;まあ予想はしてましたが&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;答は「No」。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt; 社内の制度上できないので、PMを教育してなんとかする、というものでした。&lt;br&gt;
本音は何だコイツ、なのかもしれんですけどね。&lt;br&gt;
また、自社も出向要員にする抵抗もあり。&lt;/p&gt;
&lt;p&gt;ということで田中(゜p゜)に与えられたのは、当初の&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;技術統括にプラスしてPM補佐&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;という、権限はないのに役割はたくさんあるという、なんとも生臭い肩書き。&lt;br&gt;
おかげで人増やせましたけど、↑の絵にあるような、クソほど苦労しそうなポジションに落ち着きました。&lt;/p&gt;
&lt;h4 id=&#34;構築期間中にのけぞったこと&#34;&gt;構築期間中にのけぞったこと&lt;/h4&gt;
&lt;p&gt;同じく原因分析は後回しにして、構築期間中にのけぞったことを淡々と書きます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WBSは当然EXCELで、担当者、作業工数、依存関係の記載がない。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;最初から顧客用と内部用の二重帳簿。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;WBSを適正化しようとしたら、技術統括Aに怒られた。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;要するに「今までこれでやってきたんで！」とのこと。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;PM、技術統括Bは基本意思決定を何もしない&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;コメンテーター。&lt;/li&gt;
&lt;li&gt;ビッグベンダー側からの&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;情報共有はほぼない。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;技術統括、PJ統括で課題管理表、WBSを更新するのは田中(゜p゜)だけ。&lt;/li&gt;
&lt;li&gt;スコープが変わってるのにPMからの指示はなく、誰も課題管理表、WBSを更新しない。&lt;/li&gt;
&lt;li&gt;PJ統括、技術統括は、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;顧客向けの資料(構想含む)を一切作らない。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;内部会議は基本2時間以上。アジェンダ、議事メモがないので、前回のコミットをみんな忘れてる。&lt;/li&gt;
&lt;li&gt;各Gリーダーが、「それは担当外なんでー」とすぐさま言う。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;つうかやる気ない。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;今まで酷いプロジェクトはいくつも担当しましたけどね、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;限度あるだろ&lt;!-- raw HTML omitted --&gt;、と。&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
あ、そういえば、こういう状況に対して危機意識ある人、田中(゜p゜)とPM上司以外にいなかったっぽい。&lt;/p&gt;
&lt;h4 id=&#34;構築期間中の田中pのアクション&#34;&gt;構築期間中の田中(゜p゜)のアクション&lt;/h4&gt;
&lt;p&gt;まあとにかくクダグダなんで、地味なのもエモいのも含めて、過去の経験フル動員して、いろいろ活動しました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;技術統括Aの&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;目を盗んで&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;WBS、課題管理表の適正化。&lt;/li&gt;
&lt;li&gt;PM上司にホットライン作って、PJの本当の状況を伝える。&lt;/li&gt;
&lt;li&gt;自社、PM上司に増援要請。自社は5人増員、PM上司側は叶わず。&lt;/li&gt;
&lt;li&gt;PJ統括、技術統括で朝会30分開催して情報共有。内部のコミットぶれないようハンドリング。&lt;/li&gt;
&lt;li&gt;自社メンバーに指示して、内部会議のアジェンダ、時間管理、議事メモを作成するように依頼。&lt;/li&gt;
&lt;li&gt;顧客との会議資料作成、現行事業者、各Gとの調整ハンドリングを引き受け。&lt;br&gt;
現行事業者にはとにかく下手に下手に。&lt;/li&gt;
&lt;li&gt;話を聞かない技術統括Aをなだめられる人をつけ、影響を緩和する。&lt;/li&gt;
&lt;li&gt;各Gリーダーと密に会話して、共感を引き出した上で、生臭い課題の洗い出し。&lt;/li&gt;
&lt;li&gt;PM上司を説き伏せ、各Gに大元のコンテ(予備金)分け与える旨をアナウンス。&lt;/li&gt;
&lt;li&gt;PJが2ヶ月ビハインドしてるので、止めて練り直すのが最善策であることを、自社の偉い人含めてPM＆PM上司にエスカレ。&lt;br&gt;
→契約上、納期絶対で止められないとの回答。&lt;br&gt;
→&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;要するに「ガンバル/ガンバレ」との回答。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんか他にやれることあったかな？&lt;br&gt;
&lt;strong&gt;当然土日含めてフル稼働してました&lt;/strong&gt;よ。他のメンバーはのうのうとしてたようですけど。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容結果&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;(結果)&lt;/h2&gt;
&lt;p&gt;この項はアッサリしてますね。タイトルにも書いてありますし。&lt;/p&gt;
&lt;h4 id=&#34;田中pの結果&#34;&gt;田中(゜p゜)の結果&lt;/h4&gt;
&lt;p&gt;プロジェクト開始後、3ヶ月ほどして眠れない状況が続き、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;6ヶ月目にリタイヤ。自社も退職。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;br&gt;
他に2人ほど自社メンバーがリタイヤしてましたし、各グループのリーダーも頻繁に入れ替わってたかな。&lt;/p&gt;
&lt;p&gt;心療内科行って、しばらくこんなおくすり貰って飲んでました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)はふだん薬飲まんので、けっこうだるくなったり眠くなったり副作用あるんだなぁ。&lt;/p&gt;
&lt;p&gt;ま、適応障害もうつ病も該当しない、ってお医者さんに言われてたけど、ベンチャーで失敗こいた時も、不眠の後に帯状疱疹が出たんでいちおう。&lt;/p&gt;
&lt;p&gt;退職のダシにもなるし、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;しばらく&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;調子の悪いフリしてました。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;br&gt;
マジで調子悪い日もあったけどね。&lt;/p&gt;
&lt;p&gt;自社からはなだめたり脅したりで退職を引き止められましたけど、「&lt;strong&gt;じゃあアナタ方が田中(゜p゜)の健康と家庭に責任を持ってくれるんですか&lt;/strong&gt;」と言い放って断ち切りました。&lt;br&gt;
労働基準法の基礎知識さえあれば、大抵はこれで押し切れます。&lt;/p&gt;
&lt;p&gt;診断書あれば、傷病手当も貰えたかも知れないけど、まあ症状も軽いし、色々面倒だし。&lt;/p&gt;
&lt;h4 id=&#34;プロジェクトの結果&#34;&gt;プロジェクトの結果&lt;/h4&gt;
&lt;p&gt;正直、最低限の引き継ぎだけして逃げて、あと連絡最小限にしてたんで、&lt;strong&gt;どうなったのかは知らん&lt;/strong&gt;のです。&lt;br&gt;
これで納期通りにサービスインできたなら、&lt;strong&gt;スコープか品質大きく削る交渉を顧客とせなならんはず&lt;/strong&gt;ですけど、そういう力量があるメンバーは、プロジェクト内にはいなかったと思う。&lt;/p&gt;
&lt;p&gt;ま、いつか結果聞けたら追記します。&lt;br&gt;
そもそもかの会社にとっては、失敗の定義が他社より大幅にゆるい気がするし。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;h4 id=&#34;体制&#34;&gt;体制&lt;/h4&gt;
&lt;p&gt;これで全部終わっちゃうっちゃあ、終わっちゃうんですけど。&lt;br&gt;
今回のPJメンバーってのは、言わば&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;ビッグベンダーの中で&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;の3軍&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;です。ビッグベンダーもこの案件だけやってるわけではないので。&lt;br&gt;
たぶん田中(゜p゜)の認識だと、&lt;/p&gt;
&lt;p&gt;**　政府共通案件 ＞ 中央官庁案件 ＞ 外郭団体**&lt;/p&gt;
&lt;p&gt;という感じで、明確に割り当てられるメンバーの優先順位、質が決まってます。&lt;/p&gt;
&lt;p&gt;つまりこの案件は当初からあまり質のよろしくないメンバーが割り当てられていた、と。PMと技術統括Bにやる気なかったり、技術統括Aにクセがありまくりだったりのはこうした事情でしょう。&lt;/p&gt;
&lt;p&gt;その中で、田中(゜p゜)の会社の経験ないメンバーがフォローしていくっていう、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;ちょっとしにたい状態&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;だった、ということです。&lt;/p&gt;
&lt;h4 id=&#34;見積もり&#34;&gt;見積もり&lt;/h4&gt;
&lt;p&gt;メンバーもメンバーだったので、各グループが出してくる作業工数に対して明確な妥当性なんて評価できるわけないんです。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;そもそもWBSをベースにしてない時点で終わっとる。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;トドメを刺しちゃったのが、原価削減するのに、各Gのコンテ(予備金)と工数を削ったこと。&lt;br&gt;
後々分かったんですが、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;本当に&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;必要な工数もガッツリ削られてて、調整に泣きそう&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;になった。なんか削る代わりに本体側のコンテ使うよー、みたいなこと言われてたらしいですが、そんな約束守られるわけもなく。&lt;/p&gt;
&lt;p&gt;そら各Gともスコープに厳しくなるし、やる気もなくなるわ。&lt;/p&gt;
&lt;h4 id=&#34;キーマン&#34;&gt;キーマン？&lt;/h4&gt;
&lt;p&gt;あまり個人を標的にしたくないんですけど、それでも言わざるを得ないです。&lt;br&gt;
明らかに状況を引っ掻き回してたのは&lt;strong&gt;技術統括A&lt;/strong&gt;。下の図の赤字のポジションの人で、技術統括と運用グループのリーダー兼任でやってた。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;50歳前半のオジサンで、やたら声が大きい人。それと運用一筋でやってきて、それなり官公庁系の案件の実績もある。&lt;br&gt;
ただ、面倒なのは、グループの実績も背負っているので、運用に都合の良いように物事を誘導していくのです。&lt;/p&gt;
&lt;p&gt;このオジサンが、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;「運用ガー」「運用ガー」言う度にスコープ増える&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;んすよね。&lt;br&gt;
あとたぶんこのオジサンはプライムのPM経験ないので、プロジェクト全体のQCDのバランスという観点がない。顧客との交渉も、運用に関わる部分しかしないし、したとしても構築にしわ寄せが来る。&lt;/p&gt;
&lt;p&gt;そして、何もしないPM/コメンテーター技術統括B/やる気ないグループリーダーが合わさり、嫌な感じの化学反応で運用のタスクだけ山のように積み上がっていって、スケジュールがカオスになっていきました。&lt;br&gt;
6ヶ月経過した時点で2ヶ月はビハインドしてたはずだけど、半分くらいはこの人が原因かなぁ。&lt;/p&gt;
&lt;p&gt;トドメにこのオジサンは&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;WBS意味ない説を唱え、打ち合わせは手ぶらで乗り込んで、自分の興味を根掘り葉掘り聞く派&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;です。&lt;br&gt;
しにたい。&lt;/p&gt;
&lt;h4 id=&#34;pmの真摯さ&#34;&gt;PMの真摯さ&lt;/h4&gt;
&lt;p&gt;上の方でもPMに能力がないことは書きましたが、能力がないのはいくらでもカバーします。&lt;br&gt;
いやウソ。限度はあるかもしんないけど。&lt;/p&gt;
&lt;p&gt;ただ、どうしてもこれはダメだな、と思うのは、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;プロジェクトに対して真摯に向き合う気持ちのなさ&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;です。&lt;br&gt;
そもそも&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;WBSの二重帳簿を黙認してる&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;のもそうだし、WBS適当に書いた上でコスト削ってグループ苦しめてるのもそうだし、QCD引っ掻き回している管下要員に何もアクションしないのもそう。&lt;/p&gt;
&lt;p&gt;内部定例もアジェンダの棒読みなんすよね。&lt;br&gt;
この課題はこうしたいああしたい、このプロジェクトではこうすべきだ！ みたいな意思がない。&lt;/p&gt;
&lt;p&gt;細かいですけど、顧客のサービスにインパクト与えるようなネットワークの切替が休日にあっても現場に出てこない。&lt;br&gt;
あまりに現場に申し訳なかったんで、田中(゜p゜)は関係無かったけど、何かあったときのために立ち会いました。&lt;/p&gt;
&lt;p&gt;なんというか、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;なんとしてでもこのプロジェクトを成功させるのだ、という熱意がPMに一切感じられなかった&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;です。&lt;br&gt;
田中(゜p゜)は「真摯さ」と表現していますが。&lt;/p&gt;
&lt;p&gt;これ、人を動かす上で一番重要なことなんじゃないですかね・・・。&lt;/p&gt;
&lt;h4 id=&#34;人間関係&#34;&gt;人間関係&lt;/h4&gt;
&lt;p&gt;「体制」「適正な金払われてない」「運用のみ優位」「PMやる気なし」 というような事象が積み重なった結果、プロジェクトは&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;リスクを取らず、言われたことだけやるロボットのような人間が増加&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;していきました。&lt;/p&gt;
&lt;p&gt;最終的には田中(゜p゜)もそうなってたかもしれない。&lt;br&gt;
どんなに主体的に活動しても無駄なら、&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;心を殺して黙々と働くしかない&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;んじゃないかな。　&lt;/p&gt;
&lt;p&gt;プロジェクト開始後4ヶ月後、増員で来たメンバーに「&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;なんかこのプロジェクト雰囲気悪いっすね&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;」って言われたのが印象的。&lt;/p&gt;
&lt;p&gt;まあその頃には田中(゜p゜)も、何やっても無駄だな、と考え始めてましたけど、改めて言われてみるとプロジェクトに飲まれて死んだ魚の眼をしてたかもしれない。&lt;/p&gt;
&lt;p&gt;沈むことが分かってる泥舟に黙って乗ってるくらいなら脱出したほうがいいな、と田中(゜p゜)考え始めたのもこの頃からです。&lt;br&gt;
グループのリーダや、田中(゜p゜)の管下メンバーからも、脱出する人がチラホラ。&lt;/p&gt;
&lt;p&gt;正直、過去田中(゜p゜)が立て直した、立て直ってきた炎上案件とは全く違う。&lt;br&gt;
過去の炎上案件は、プロジェクトのQCDはヤバくても中の人間には活気があって「絶対なんとかするんだ」というようなベースがあり、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;コアメンバーが役割意識持って主体的に動いてた。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;大変だけど楽しかったし、無力感なんてのはもちろんなかったと思う。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)個人で言えば、「このプロジェクトを何とかしたい」という思いが強すぎましたね。また、、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;自&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;分の能力や、置かれた環境に対して、できることの見積もりの過信がすぎた&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;過去の炎上立て直しの経験から、一人でも熱意をもってぶつかれば状況を変えられると信じたのがそもそもの間違いで、どうにもならんもんはどうにもならん。&lt;br&gt;
結婚して子供もいたし、独身の時とは使える時間も、背負ってるものも違う。&lt;/p&gt;
&lt;p&gt;提案が終わった段階でこうなることはある程度見えてたんで、手持ちのリソース見て、そこで&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;断るかサービスの範囲を定義しちゃえば楽になれたかも&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;知れないですね。&lt;/p&gt;
&lt;p&gt;また、残されたメンバーには悪いとは思いますが、去る前から「このプロジェクトはこういう部分がヘンだよ、田中(゜p゜)はこれこれこういうことやったけどダメだった。田中(゜p゜)はたぶん逃げるけど、耐えられなくなったら逃げてね」とは伝えてきました。&lt;br&gt;
ま、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;田中(゜p゜)の前にも何人か逃げてた&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;しね。&lt;/p&gt;
&lt;p&gt;あとはどうしても技術統括Aと仲良くできなかったけど、これはもう少し田中(゜p゜)が上手くハンドリングできたかなー、と思う部分ではあります。&lt;/p&gt;
&lt;p&gt;いずれにせよ、田中(゜p゜)が初めて逃げた案件ではあるので、この経験を活かして、次につなげたいとは思います。&lt;br&gt;
本来田中(゜p゜)は、転んでも砂を掴んで相手の目に投げつけて、状況を優位に運ぶたくましい子のはずです。&lt;/p&gt;
&lt;p&gt;さしあたって田中(゜p゜)のキャパ的には家庭と仕事の両立は難しいっぽいので、&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;仕事側をてきとうにハンドリングしていきたい&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;と考えてます。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>田中(゜p゜)、ヒートアップしすぎて出禁</title>
      <link>https://y2tanaka.github.io/git-pages/banned-by-client/</link>
      <pubDate>Mon, 07 Sep 2020 08:04:36 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/banned-by-client/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;クラウドSIベンチャーを1年足らずで退職してしまった田中。次はリスクをなるべく取らないよう、インフラの上流工程のSESを生業とする企業に転職しました。&lt;br&gt;
ま、それはそれで色々な課題を抱えておったのですが・・・。&lt;/p&gt;
&lt;p&gt;その記念すべき？最初の案件がこちら。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;案件内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某一部上場人材系企業 情報系サービス基盤 更改案件&lt;/li&gt;
&lt;li&gt;案件規模： 5年 10億 弱？ メンバー20人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： 顧客側PMO&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;この案件は、&lt;strong&gt;某人材系企業の情報系サービス基盤の全面更改&lt;/strong&gt;で、データセンターのロケーション以外のAD、VDI基盤、仮想サーバ基盤、等々の入れ替えがメインの重ための案件でした。&lt;/p&gt;
&lt;p&gt;国内のかなり名のあるベンダーが要件定義、構築フェーズを対応中でしたが、&lt;strong&gt;客先側のCTOが癖のある人でプロジェクトのハンドリングに苦戦&lt;/strong&gt;しており、支援してくれ、と言われたのがキッカケで田中(゜p゜)入場。&lt;/p&gt;
&lt;p&gt;契約はなぜか顧客と直でラッキー。&lt;br&gt;
ただし、上手い話には裏があるということで。&lt;/p&gt;
&lt;p&gt;この「クセのある」に嫌な予感はしてましたが、この案件もまた、プロジェクトのハンドリングにもかなりの課題あり、炎上一歩手前、という状況でした。&lt;/p&gt;
&lt;p&gt;ポイントは以下。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;WBSが実態を表してない。というかアウトプットベースになってなくて、タスクが並べてあるだけ。&lt;/li&gt;
&lt;li&gt;課題管理表が更新されておらず、何にフォーカスしていいのか分からない。&lt;/li&gt;
&lt;li&gt;PMは、&lt;strong&gt;「やってますやってます」「あ、それ漏れてました」を連発する&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;プロジェクトメンバーは優秀だったが、PMが鈍足なため、足踏みする日々を過ごしてた。&lt;/li&gt;
&lt;li&gt;(コレは予想通りだったけど) &lt;strong&gt;顧客側はCTOは、マイクロマネジメント派でかつエモーショナル&lt;/strong&gt;。「どーしてくれるんだよ！」と週三回のPMO会議で怒鳴られる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;田中(゜p゜)はPMのいたならさをフォローしつつ、同じ境遇の情報システム部門リーダー(若いのに部長さん)と仲良くなり、プロジェクトの適正化を実施。&lt;/p&gt;
&lt;p&gt;正直、&lt;strong&gt;WBSは全部見直したし、課題管理表もなんか田中(゜p゜)がずーーっと更新してた&lt;/strong&gt;。何度言っても治らないし、プロジェクトのカオス化が進んでいく一方なので。&lt;br&gt;
&lt;strong&gt;本来はベンダーの役割だよ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;あとネットワークエンジニアが例の「資料作り＋会話」が苦手な人だったんで、移行計画書のフレームと中身のほとんどを田中(゜p゜)が作った。&lt;br&gt;
&lt;strong&gt;これもベンダーの役割だよ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;そのうち、スケジュールも回らなくなって、&lt;strong&gt;PMの上長までフルアサインされる始末。&lt;/strong&gt;&lt;br&gt;
週三回のPMO会議はCTOになじられる一方なのでキツかったなー。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;プロジェクトのステコミ(ステアリングコミッティ：顧客・ベンダー側の責任者間で進捗を共有するヤベぇ会議)で、田中(゜p゜)がキレてしまい、&lt;strong&gt;机叩きながら「やってねーじゃねーか！！！」と叫んでしまった&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;クラウドで課題管理してたから、更新履歴とかだいたいわかるので、定量化して実績は知ってた。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;「課題管理表、更新しましょうね」というのをPMに数百回は言ってた&lt;/strong&gt;が、改善されずステコミで「実績ベースだと、&lt;strong&gt;田中(゜p゜)が300件課題管理表更新&lt;/strong&gt;してるのに、&lt;strong&gt;PMさんとそのメンバーは数十件ですよね？&lt;/strong&gt;」と詰めてみた。。&lt;/p&gt;
&lt;p&gt;PMの回答は**「やってますやってます」の一点張り。&lt;br&gt;
** その回答に**田中(゜p゜)ガチギレ。**&lt;/p&gt;
&lt;p&gt;※いつもキレてません。5年に1度あるかないかです。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;経緯はともかく、ステコミというやべェ場所でキレちゃったのは大問題であり、結局田中(゜p゜)は&lt;strong&gt;当該ベンダーの仕事は一切受けられない&lt;/strong&gt;ことになった。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要するに出禁。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;あと、田中(゜p゜)の上長が後始末に奔走したらしい。このあたり、今後の改善のためにも、やったことをきちんと聞かせて欲しいとお願いしたのですが、上の方でゴニョゴニョやっており、&lt;strong&gt;自社にも不信感&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;どーでもいいが、その後も田中(゜p゜)がベンダーがなおざりにしてた運用設計などをフォローし続け、&lt;strong&gt;最終的には一部スケジュール延長などはあったものの、期日通りにサービスイン&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;ベンダーは遅延した部分のスコープを対応すべく居残り。田中(゜p゜)は役目を終えて退場。&lt;br&gt;
やることはやったと思うものの、なんとも後味の悪い案件だった。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;何にせよ、キレてしまったのは最悪。&lt;/strong&gt;&lt;br&gt;
淡々と詰め続ければ良かった。&lt;/p&gt;
&lt;p&gt;あと根本的な問題として、田中(゜p゜)は&lt;strong&gt;プロジェクトに深く関わり過ぎた&lt;/strong&gt;のだと思う。なんとかプロジェクトを納期に間に合わせたいという思いも強すぎた。&lt;/p&gt;
&lt;p&gt;このあたりは、自分がPMをやっていた時の責任感とかが悪い方向に作用していた。&lt;br&gt;
あくまでPMOだし、PMのタスクまで抱え込む必要はなかった。&lt;/p&gt;
&lt;p&gt;結局のところ、ストレス貯まり過ぎでキレてしまったので、責任分界点を超える時は、影響を検討し、周囲に共有した上で踏み込むようにしたいなー、と思いました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>会社の未来に絶望してリタイヤ</title>
      <link>https://y2tanaka.github.io/git-pages/retire-by-companys-future/</link>
      <pubDate>Mon, 07 Sep 2020 06:34:48 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/retire-by-companys-future/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;前職の情報システム部の課長というポジションを捨て、次はクラウドでしょ！ やっぱり田中(゜p゜)は構築だよね！ という&lt;strong&gt;安易な気持ちで転職&lt;/strong&gt;。&lt;br&gt;
田中(゜p゜)を待ち受けていたのは・・・。&lt;/p&gt;
&lt;p&gt;って、タイトルに書いてあるな。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;案件内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某クラウドSIベンチャー開発部長&lt;/li&gt;
&lt;li&gt;案件規模： メンバー25人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： 開発部長&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;前職での経験から、クラウドマンセーになっていた田中(゜p゜)は、クラウド系のインテグレーションをやってる会社を中心に、ポジションを探しておりましたが、目に止まったのが某クラウド系SIベンチャー。&lt;/p&gt;
&lt;p&gt;CTO、社長と面接すると、2年以内にIPOを目指していて、コアになる人材として期待しているということで、「&lt;strong&gt;ひょっとして一発当てられるかも！ 経営層に食い込めるかも！&lt;/strong&gt;」なんて、田中(゜p゜)らしくもない欲が出てしまい、入社。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;入社半年後にストレスで不眠になり、その2ヶ月後に帯状疱疹が出てしまい、&lt;strong&gt;退職&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;入社後ほどなくして開発部長になり、経営ボードにも参画。コンサル案件や、楽しげな技術要素もたくさん携わり、お給料もたくさん出ましたが。&lt;/p&gt;
&lt;p&gt;身体に出ちゃったのは、なんだろう。&lt;br&gt;
&lt;strong&gt;期待していたものとギャップがありすぎた&lt;/strong&gt;のかな、と思ってますが。&lt;/p&gt;
&lt;p&gt;ギャップを書き出してみると以下ですね。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;IPOをするとの事だったが&lt;strong&gt;戦略と財務状況とコンプライアンスがグダグダ&lt;/strong&gt;で、2年というのは到底無理だった。※3年経った今でもしてません。&lt;/li&gt;
&lt;li&gt;社長が技術大好きっ子で、&lt;strong&gt;戦略もクソもなかった&lt;/strong&gt;。基本的な経営戦略の本も読んでないようだった。&lt;/li&gt;
&lt;li&gt;社長と一緒にコンサルする案件があったが、遅刻はするわ、納期は守らないわ、いい加減な品質のアウトプット納品するわで&lt;strong&gt;散々な目にあった&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;ソリューションが特定のプロダクトによっており、客のニーズにフィットさせることが非常に難しい。&lt;/li&gt;
&lt;li&gt;前職とは違い**、社長は数字に緩く、ヤバイ状況も見えていない状況**だった。&lt;/li&gt;
&lt;li&gt;特定の役員が出資しており、会社を食い物にするような、キナ臭い動きを進めていた。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;唯一マトモっぽかったCFO兼COOが逃げた。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;うーん。&lt;br&gt;
並べてみると意外と酷いけど、ベンチャーってこんなもんなのかもしれない。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;メンタルに大きなダメージはなかったので、2ヶ月ほど休んで&lt;strong&gt;普通に転職&lt;/strong&gt;。&lt;br&gt;
かなり急いだので、あまり選んでいるヒマもありませんでした。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;社長と面接した時の違和感を大切にしていればよかった&lt;/strong&gt;ですね。&lt;/p&gt;
&lt;p&gt;普段から「そこはもうガッツリでしょ！」「○○(製品名)マンセー！！ 〇〇で、できないわけがない！」というような、技術＋勢い系の人でした。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;あと田中(゜p゜)の欲。&lt;/strong&gt;&lt;br&gt;
IPOしたらひと儲けできるかも！とか、経営層の肩書！ みたいな、当初の田中(゜p゜)の&lt;strong&gt;社会貢献という目的からかけ外れたところに入社動機があった&lt;/strong&gt;のも、敗因かもしれません。&lt;/p&gt;
&lt;p&gt;正直、メンバーとして入るなら悪くない会社だと思います。&lt;br&gt;
田中(゜p゜)の期待値が大きすぎたということか。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>他部署の炎上食い止めに奮闘</title>
      <link>https://y2tanaka.github.io/git-pages/hardwork-for-pj-burn-of-other-department/</link>
      <pubDate>Mon, 07 Sep 2020 04:55:18 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/hardwork-for-pj-burn-of-other-department/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;情報システム部門のマネージャ時代の話。&lt;br&gt;
社内のサーバをクラウドに上げ、業務を一通り最適化して&lt;strong&gt;ヒマを持て余してたので&lt;/strong&gt;、隣の技術開発部門の要請に応じて、&lt;strong&gt;プロジェクト案件を手伝う&lt;/strong&gt;ことに。&lt;/p&gt;
&lt;p&gt;よく考えたら、結構自由だったな。この会社。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;案件内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某公共案件 セキュリティクラウド構築案件&lt;/li&gt;
&lt;li&gt;案件規模： スポット 予算？？億 メンバー15人 エンドユーザー ？？？？人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： メールサーバー設計構築 ＆ &lt;strong&gt;にぎやかし(笑)&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;公共のセキュリティクラウド案件で、エンジニアが全般的に足りてないということだったので、支援に入りました。メンバーは15人位の、インフラとしては大所帯。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)が担当したのはBlueCoatとFortigateのメールサーバ。&lt;br&gt;
が、蓋を開てみると…。&lt;strong&gt;ヤベぇポイントがたくさん&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗？の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;正直、プロジェクトの運営がグダグダでした。&lt;br&gt;
表面的には以下のような事象が起こってました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;うん。&lt;strong&gt;ヤバい。&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)のPMとしての直感も、&lt;strong&gt;赤いパトランプぐーるぐーる回してました&lt;/strong&gt;。&lt;br&gt;
田中(゜p゜)の担当範囲は全力でリカバリできるにしても、このプロジェクトの状況はなんなんだ。&lt;/p&gt;
&lt;p&gt;ざっと見積もったところ、&lt;strong&gt;残り3ヶ月にして2weekほどの遅延&lt;/strong&gt;。&lt;br&gt;
&lt;strong&gt;いや、ヤバい。本当にヤバい。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;原因ですが、&lt;strong&gt;結論から言って体制ですね。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PMはいい人。とにかくいい人。&lt;/strong&gt;&lt;br&gt;
とにかく周囲と波風立てたくない。トラブってるのもなるべく内密にして、上司に心配かけたくない。でも、&lt;strong&gt;PMっていい人でいられないケースって多い&lt;/strong&gt;んですよね。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PLは&lt;/strong&gt;。&lt;br&gt;
何考えてるか分からなくて、動きも読めず、とにかくタスクの完了予定直前までなにか動いてるように見えない、いけ好かない人物。おそらく技術的、マネジメントスキル的に自信が無かったように思われるが、&lt;strong&gt;最後までよく分からなった&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;ネットワークエンジニアは…。&lt;br&gt;
あるべき論を通したい人なんだけど、&lt;strong&gt;まっすぐ過ぎて周囲と軋轢を起こしてしまう人&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;と、いう三人が組み合わさった結果、&lt;strong&gt;ネットワークエンジニアの要求するタスクが積み上がり、PLが何もしないため&lt;/strong&gt;タスクが消化されず**、PMのみが困り果てる**という図式に。&lt;/p&gt;
&lt;p&gt;アウトでしょ、コレ。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)はとりあえず恥も外聞も捨てて&lt;strong&gt;全開でにぎやかし&lt;/strong&gt;にかかりました。&lt;br&gt;
つまるところ、プロジェクト&lt;strong&gt;PMの上の偉い人に非公式にプロジェクトの状況を伝え、支援がないとしにますよ&lt;/strong&gt;、という話をした。&lt;/p&gt;
&lt;p&gt;迷惑極まりない話かもしれないけど、&lt;strong&gt;お客さんに迷惑をかけるより良い&lt;/strong&gt;と思いまして。&lt;br&gt;
&lt;strong&gt;テヘッ。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;しかし、この会社はマトモな会社だったんでしょうね。&lt;br&gt;
すぐさま&lt;strong&gt;PMの部署の役員が、エース級のPMと、プロジェクト管理のスペシャリストの支援を手配&lt;/strong&gt;してくれ、リカバリプランを作成。&lt;br&gt;
社長にまでエスカレーションが走り、&lt;strong&gt;リカバリプランも承認&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;たぶんここまで行けば、プロジェクトは建て直りますよ。&lt;br&gt;
**実力のある偉い人がヤベぇ状況を把握していて、そこに対して手当をしようとする意思がある限り、そうそうプロジェクトは崩れない。&lt;br&gt;
**&lt;br&gt;
果たしてこのプロジェクトも、部分的な納期遅延、スコープ変更などはあったもの、&lt;strong&gt;無事サービスインしました&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;なおざりにしていた運用設計は強化され、運用の体制も当初より厚くなり、サービスレベルも向上するというオマケ付き。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;めでたしめでたし。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;あと書くの忘れてたけど、田中(゜p゜)の&lt;strong&gt;メールサーバーの構築はけっこうしんだ。&lt;/strong&gt;&lt;br&gt;
Fortigateのアプライアンスだったんだけど、メーカーの営業がこの会社にベンダーやらせたくなかったみたいでなかなかサポート情報が回ってこず。&lt;/p&gt;
&lt;p&gt;もちろん納期には間に合わせましたが、残業ヤバかった。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;正直田中(゜p゜)の動きとしては悪くなかったと思うけど、普通に堅苦しい会社だったら顰蹙ものだなぁ、と今でも思います。&lt;/p&gt;
&lt;p&gt;それと、PLがあまりになにもしないので田中(゜p゜)がガチキレしてしまい、深夜に同じ部署内の大人しいオジサンの袖机にケリ入れてを軽く凹ませてしまいました。&lt;/p&gt;
&lt;p&gt;次の日そのオジサンが「…僕の机、凹んでるんだけど、何か悪いことしたかなぁ」なんて言ってて、心が痛くなりました。&lt;/p&gt;
&lt;p&gt;ゴメンナサイm(_ _)m&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>客の前で泣いてしまった話</title>
      <link>https://y2tanaka.github.io/git-pages/crying-infrontof-client/</link>
      <pubDate>Mon, 07 Sep 2020 00:58:29 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/crying-infrontof-client/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;**&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/helped-by-client/&#34;&gt;前回のスタローンさんとの話&lt;/a&gt;**の続きです。&lt;/p&gt;
&lt;p&gt;結局のところ、田中(゜p゜)がスタローンさんのところのインフラ支援に入って上流工程を手伝う、という蜜月状態は1〜2年続き、インフラ系の小規模案件を自社に流していく、というスタイルが続いていました。&lt;/p&gt;
&lt;p&gt;が、その頃自社では、株式の51%が外資によって買われてしまい、ビジネスモデルも業務プロセスもドンガラ真っ最中。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)はそれまでのソリューション中心の提案スタイルが、&lt;strong&gt;インドの安いデータセンターと運用リソースを日本の企業に売ってこい&lt;/strong&gt;、というスタイルに変わってしまい、絶望まっしぐら。&lt;/p&gt;
&lt;p&gt;そんな中、スタローンさんから久々に大型案件の引き合いが来たのです。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;案件内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某外食産業 の仮想化基盤リプレイス 提案&lt;/li&gt;
&lt;li&gt;案件規模： 期間5年 予算3億 メンバー5人 エンドユーザー2000人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： PMO・提案支援&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;基本的に要件定義書のベースは田中(゜p゜)が作り、業務システム側の担当にヒアリングをして中を埋めてくというスタイルで作成。&lt;/p&gt;
&lt;p&gt;3社にRFPがでて、対応したのは自社とデータセンター運用してたもう一社。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は、客側に入って引き続き支援し、自社側は別にPMを立てるという体制。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;提案書提出後、最終的に田中(゜p゜)が&lt;strong&gt;スタローンさんの前で泣きながら&lt;/strong&gt;「田中(゜p゜)はもう辞表提出しているので個人としてのアドバイスですが、自社に発注すると失敗するので、他社に発注して下さい」と頼み込んだ。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;提案内容については、田中(゜p゜)も監修していたし、PMもこなれた人だったので、問題なかったが、&lt;strong&gt;自社側の体制、姿勢に大きな問題&lt;/strong&gt;があった。&lt;/p&gt;
&lt;p&gt;組織の混乱のためか、&lt;strong&gt;PMの上長、更にその上の部長クラスが一切客先に顔を出さず&lt;/strong&gt;。また、アサインされたメンバーも、新人と評判の悪いエンジニアばかり。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は何度も何度も何度も上長と部長に対し、せめてお客さんには誠意を見せてくれ、という話をしたが、一向に動く気配はなく。&lt;strong&gt;ついぞ一度も顔を出すことはなかった&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;逆に他社は、**副社長まで出てきて「全社体制で頑張ります！」**とか言ってる始末。※一部上場企業です。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は、契約がボンヤリとしている日本において、&lt;strong&gt;こうした儀式というのは非常に大切にすべき&lt;/strong&gt;で、PMが良いメンバーをアサインしやすくなったり、ハイタッチを効かせてキナ臭いトラブルを事前に潰す足がかりになるものだと思っていた。&lt;/p&gt;
&lt;p&gt;他社にできて自社にできないのが不甲斐なく、自分に人を動かす力もなく、好きだった会社が変わっていってしまったり、こんなに良いお客さんの元を去るのも悲しく、&lt;strong&gt;とにかく色々な要因がゴチャゴチャに混ざり合って悔しくて泣いた。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;結果的にお客さんは&lt;strong&gt;他社に発注&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;スタローンさんは田中(゜p゜)のために送別会を開いてくれ、「&lt;strong&gt;田中(゜p゜)君のコメントは個人のだからね。関係ないよ。僕が他社の方が良いと思っただけ&lt;/strong&gt;」と言った。&lt;/p&gt;
&lt;p&gt;自社の方が全然安くて良い提案だったのは知ってる。&lt;br&gt;
けど、真相はどうだったのかは知らない。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)はスタローンさんみたいなリーダーになりたいな、と思って、全然別の会社の情報システム部門に転職した。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;この頃の田中(゜p゜)はとにかくお客様のためになりたいという気持ちが強く、社内政治に疎かったです。&lt;/p&gt;
&lt;p&gt;社内政治も結果的にお客様のためには必要なのだという考えがあれば、上長や部長ともそれっぽく仲良くやって、&lt;strong&gt;表に引っ張り出して責任を追わせることもできたかも&lt;/strong&gt;しれません。今となってはタラレバですが。&lt;/p&gt;
&lt;p&gt;この頃の田中(゜p゜)は最も仕事に信念を持ってたなぁ、なんて思います。&lt;br&gt;
今だったら、もう少しいい加減に流してたかなぁ。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>炎上寸前で客に助けられた話</title>
      <link>https://y2tanaka.github.io/git-pages/helped-by-client/</link>
      <pubDate>Sun, 06 Sep 2020 22:16:00 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/helped-by-client/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;今回も炎上？しかかった案件について書きたいと思います。&lt;br&gt;
毎回ひどい目にあいがちな田中(゜p゜)ですが、今回はお客さんに助けられた&lt;strong&gt;ハートウォーミングな話&lt;/strong&gt;となります。なんか炎上の話書くと、文体が固くなるけどね。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;案件内容&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某外食産業 のデータセンター コアNW機器リプレイス&lt;/li&gt;
&lt;li&gt;案件規模： スポット2500万 メンバー5人 エンドユーザー2000人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： PM兼NWエンジニア&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;正確には、炎上というより炎上しかかった案件。拠点が1200店舗くらいある外食産業のデータセンターのNW機器更改案件。&lt;br&gt;
ただの更改じゃなくて、&lt;strong&gt;L3SWをセキュリティ強化のためにFWに変える&lt;/strong&gt;というハイリスクローリターンなもの。&lt;/p&gt;
&lt;p&gt;このお客さんは、田中(゜p゜)がITコンサルタント的に携わっていて、ITインフラ系の要件定義や、回線事業者のハンドリングをスポット的に手伝っていた。&lt;/p&gt;
&lt;p&gt;お客さんのカウンターは、情報システム部門のリーダーで、&lt;strong&gt;シベルスター・スタローンを太くして老化させたような、普段はボーッとしてる定年間近の人&lt;/strong&gt;。たぶん2020年の時点ではもう引退してる。&lt;br&gt;
以下、&lt;strong&gt;スタローン&lt;/strong&gt;と呼称。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;切替自体は2ショットで行い、L2SW等のリスクの低いものから実施。&lt;br&gt;
本筋には関係ないけど、L2SW切替時に、&lt;strong&gt;ストレージの光配線がLANと絡まって泣きそう&lt;/strong&gt;になった。富○通のサーバーエンジニアが適当に作業してやがったせいです。&lt;/p&gt;
&lt;p&gt;で、本題のL3SWからFWへの切替。&lt;br&gt;
念の為、アクセスリスト全通しにしたPCを一台作って、データセンター内の全サーバーに疎通確認し、切替前後で比較する予定だった。&lt;/p&gt;
&lt;p&gt;作業は金曜日の深夜から実施。土曜日の朝までに完了の予定。&lt;br&gt;
切替自体はスムーズに実施でき、店舗からの通信も問題なくて、一安心。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;が。&lt;/strong&gt;&lt;br&gt;
なんと、&lt;strong&gt;業務系サーバーの一部に通信ができない&lt;/strong&gt;。待機してた担当者からも通信不可との連絡あり、速攻でNWチームで切り分けにかかる。&lt;/p&gt;
&lt;p&gt;ケーブルの繋ぎも、アクセスリストも何度確認しても問題なく、いたずらに時間ばかりが過ぎていき、切替の終了予定時間を迎えて原因は分かったものの、&lt;strong&gt;ジ・エンド&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;非対称ルートのFWによるブロック。&lt;br&gt;
対象のサーバーたちは、デフォルトルートの設定が他のサーバーと異なっており、非対称ルートでFWでブロックされてしまっていた。L3SWで通り、FWで通らないよくあるパターン。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;もちろんこの問題は事前に認識していたが、プロジェクトのスケジュール的に、サーバ担当者にヒアリングにかけている余裕はなく、見過ごしていた形だった。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)はスタローンに&lt;strong&gt;切り戻しを上申&lt;/strong&gt;。&lt;br&gt;
システムに影響でてるし、非対称ルート設定を許可すると、インパクトが読めないため。&lt;/p&gt;
&lt;p&gt;それに対し、スタローンは即断。&lt;/p&gt;
&lt;p&gt;「**えー、切り戻しなんてヤダ。続行。**他部門のサーバ担当は今からデータセンターに向かわせるね。田中(゜p゜)君は疲れただろうからとりあえず寝てて。」&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;まじですか！？&lt;/strong&gt;&lt;br&gt;
普段ボーッとしてる人だったので、この状況で即答できる胆力には驚いた。&lt;/p&gt;
&lt;p&gt;あと、ホントに他部門のサーバ担当の人が(嫌そうな顔で)来て、デフォルトルートをコンソールで直して帰っていった。&lt;/p&gt;
&lt;p&gt;ということで、&lt;strong&gt;切替は無事？完了&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)は、スタローンの命により月曜の夕方までデータセンターで寝泊まりしましたけど、まあ失敗するよりはるかにマシ。むしろ感謝。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;正直PMとして、全サーバ担当にネットワーク設定ヒアリングしとけば、客のグリップ力に頼ることは無かったと思う。&lt;/p&gt;
&lt;p&gt;また、今思えば、スタローンとしても、全体にインパクトある作業を複数回やるのは経営、エンドユーザに対して説明が重たいので、本当に嫌だったのかもしれない。&lt;br&gt;
&lt;strong&gt;情報システム部門リーダーとしての立ち振舞いについて、田中(゜p゜)が学んだ瞬間&lt;/strong&gt;でした。&lt;/p&gt;
&lt;p&gt;スタローンさんとの思い出は、次回の記事に続きます。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>検証ルータのためにLAN半壊</title>
      <link>https://y2tanaka.github.io/git-pages/corrupsed-by-testrouter/</link>
      <pubDate>Sun, 06 Sep 2020 20:28:32 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/corrupsed-by-testrouter/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/corruption-by-bakahub/&#34;&gt;前回の記事で、HUBが壊れただけでLAN全滅した&lt;/a&gt;、という記事を書きましたが、もうひとつ残念な話思い出しましたので、もう一本書いておきます。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;&lt;strong&gt;案件内容&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某一部上場企業 情報システム部門におけるPC接続障害&lt;/li&gt;
&lt;li&gt;案件規模： 予算？ メンバー12人 エンドユーザー2000人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： 情報システム部門 ITインフラ マネージャ&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)が、情シスのマネージャやっていた時の話です。&lt;/p&gt;
&lt;p&gt;ある日の午後、本社にいるユーザから立て続けにPCが接続できないというコールが入り、情シス部門は緊張状態に入りました。&lt;/p&gt;
&lt;p&gt;コール数は時間を追うに連れて増え、結局、対象者は本社&lt;strong&gt;全体の1/3に広がり、大混乱に&lt;/strong&gt;。&lt;br&gt;
監視等のアラートはなく、サーバ、NW機器共に一切異常無し。&lt;strong&gt;もちろん田中(゜p゜)含めた情シス部員も大混乱&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;事件は現場で起きてるんだ！ ということで、何人か繋がらない申告してきたユーザのPCのIPアドレスを実際に見てみると、&lt;strong&gt;アレ？&lt;/strong&gt; &lt;strong&gt;本社のセグメントと違うIPアドレス※が振られてるよ？&lt;/strong&gt;&lt;br&gt;
※リンクローカルでもないです。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;結論、田中(゜p゜)はなにも失敗してない。&lt;br&gt;
強いて言えば、L2SWに、ポート認証とかDHCPサーバを抑制する抑制する設定を入れてなかった前任者が悪いのですが、予算の関係もありますし。&lt;/p&gt;
&lt;p&gt;あと、&lt;strong&gt;検証ルータをLANに接続しやがった技術者が失敗&lt;/strong&gt;してる。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;↓コレ。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;いや、YAMAHAはなんにも悪くない。悪いのはコレ繋いじゃったエンジニア。&lt;/p&gt;
&lt;p&gt;つまるところ、技術開発職のエンジニアが、ローカル環境作るの面倒だからといって、&lt;strong&gt;本社LANに検証ルータ繋いで&lt;/strong&gt;ゴニョゴニョやっとったのです。&lt;/p&gt;
&lt;p&gt;そしてさらに残念なことに、この検証ルータには&lt;strong&gt;ローカル環境の名残のDHCPサーバが起動&lt;/strong&gt;しており、&lt;strong&gt;本社のPCは&lt;/strong&gt;検証ルータのDHCPサーバーから&lt;strong&gt;データセンターと通信できないIPアドレスを取ってしまっていた&lt;/strong&gt;のでした。&lt;/p&gt;
&lt;p&gt;原因さえわかればあとはこっちのもの。&lt;br&gt;
そこからは、その&lt;strong&gt;トンチキDHCPサーバー&lt;/strong&gt;のMACアドレスからポートを辿って所在を洗い出し、&lt;strong&gt;有無を言わさず検証ルータ引っこ抜き&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;ホントはなんかルータに火を付けたり、ビルから投げ捨てたりとか、怒りのパフォーマンスしたかったですが、大人なのでやめました。&lt;br&gt;
当の本人不在だったんで、すぐ折り返せっていうメモ置いときましたけど。&lt;/p&gt;
&lt;p&gt;ちなみに本番DHCPサーバーはデータセンターで稼働していて、ノントラブルでしたが、DHCPプロトコルは、&lt;strong&gt;ブロードキャストにクエリ投げて、早く帰ってきた方のIPアドレスをアサインしてまう&lt;/strong&gt;ので、この動きはどうしようもないです。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;その検証ルータを外したあと、接続できないユーザのPCのケーブルを抜き差しして復旧。&lt;br&gt;
正味2時間ほどでしたが、&lt;strong&gt;いい悪夢見させていただきました&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)はそのエンジニアと仲が良かったので、握りつぶしたかったのですが、被害が想像以上に大きく、&lt;strong&gt;結局そのエンジニアは始末書を書くことに&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;設計上、ポート認証か、DHCPの制御しとけばよかったかな、と思いますが、構築時に固めた仕様を運用で全面的に変更するのは、かなり厳しいのです。&lt;br&gt;
ポート認証は田中(゜p゜)得意なので、&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/lan-auth-bay-cert/&#34;&gt;別記事&lt;/a&gt;で書きます。田中(゜p゜)の好きな802.1xの話。&lt;/p&gt;
&lt;p&gt;あと、しつこいようですが&lt;strong&gt;ヤベエ機器はLANに参加させちゃいけねぇ。色々な意味で&lt;/strong&gt;。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>どーでもいい機器のためにLAN全滅</title>
      <link>https://y2tanaka.github.io/git-pages/corruption-by-bakahub/</link>
      <pubDate>Sun, 06 Sep 2020 18:59:52 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/corruption-by-bakahub/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/failuer-of-product-choice/&#34;&gt;前の記事&lt;/a&gt;では田中(゜p゜)の炎上経験を取り上げました。&lt;br&gt;
今回も炎上？しかかった案件について書きたいと思います。前回の記事が重苦しいような気がしますので、今回は内容も文体もライトに。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;&lt;strong&gt;案件内容&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某中小企業 本社LAN更改案件&lt;/li&gt;
&lt;li&gt;案件規模： スポット1500万 メンバー3人 エンドユーザー200人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： PM兼NWエンジニア&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;正確には、炎上というより炎上しかかった案件。&lt;br&gt;
200人位の規模の企業の、老朽化による本社L3SW、L2リプレイス。後継機に入れ替えるだけだったので、ローリスクローリターン案件、のはずだった。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;納品、サービスイン後3日後にお客様からコール。&lt;strong&gt;本社LANの機能が全滅した&lt;/strong&gt;のですぐ来て欲しいとのこと。&lt;br&gt;
結果から言うと、たぶん田中(゜p゜)は失敗してない。お客さんが失敗したんじゃないかな。&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;↓コレ。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;ループガード入れていたが、なぜかブロードキャストストームが発生。突き止めたくても&lt;strong&gt;LAN内はワケわからんパケットで溢れててWireShark読み切れない&lt;/strong&gt;し、導入した機器のコンソールは遅くて使えない状態になってる。トレースのしようがない。&lt;/p&gt;
&lt;p&gt;どうせ全体が使えないんだし、おそらく端末が悪さしてるんじゃないかという勝手な憶測の元、L3SWとL2SWの間のLANケーブルを一本一本抜き差しして、Floodingが止まるかどうか確認。&lt;strong&gt;特定のL2SWを抜いたらL3SWが復旧する&lt;/strong&gt;ことを特定。&lt;/p&gt;
&lt;p&gt;同じように、死んでるL2SWのポートを一本一本抜き差しして、特定のポートを抜いた時にL2SWが復旧することを確認。&lt;/p&gt;
&lt;p&gt;該当のポートの統合配線の先を辿って行ったら、サーバールームの不要品置き場のような場所にたどり着き、何も繋がっていない古ぼけたBuf○aloのノンインテリジェントHUBを発見。&lt;/p&gt;
&lt;p&gt;&lt;img src=&#34;https://y2tanaka.github.io/git-pages/wp-content/uploads/2020/09/image-25.png&#34; alt=&#34;&#34;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;お前かーい！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;HUBが壊れたのが原因でした。orz&lt;br&gt;
たぶんサーバー室での作業用に設置してたのを忘れてたんでしょうね。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当然だけどお咎めは特になし。&lt;br&gt;
だけど、事情を知らない本社の皆様からはひどく冷たい目で見られた。納得いかない。&lt;br&gt;
というか、酷いタイミングで壊れますなぁ。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;よく考えたら、ループガードは入れてたけど、Floodingガード的なブロードキャストに対して閾値を設けてシャットダウンする機能入れておけば、もう少し被害は軽減できたかもしれない。アライド製品だったので、ひょっとしたらその機能はなかったのかもしれない。記憶に無いです。&lt;/p&gt;
&lt;p&gt;あと、&lt;strong&gt;ヤバい機器はLANに参加させちゃいけない。色々な意味で&lt;/strong&gt;。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>製品でチャレンジしすぎて失敗</title>
      <link>https://y2tanaka.github.io/git-pages/failuer-of-product-choice/</link>
      <pubDate>Sun, 06 Sep 2020 16:56:25 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/failuer-of-product-choice/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)は長年ITインフラエンジニア/PM/ITコンサル？をやってきましたが、当然失敗したこともあります。&lt;/p&gt;
&lt;p&gt;インターネットのサイトには輝かしい成功の記録が数多くありますが、失敗事例はとても少ないです&lt;!-- raw HTML omitted --&gt;。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;このサイト&lt;!-- raw HTML omitted --&gt;なんかは業界問わず失敗の事例公開してて、とても参考になります。&lt;/p&gt;
&lt;p&gt;失敗の例を共有して、次は他の人も失敗しないようにすることが大切なのかな、と思うので、ここに田中(゜p゜)の事例をサマリで記載します。&lt;/p&gt;
&lt;h2 id=&#34;案件内容&#34;&gt;&lt;strong&gt;案件内容&lt;/strong&gt;&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;タイトル: 某商社インターネットセキュリティ更改案件&lt;/li&gt;
&lt;li&gt;案件規模： 5年1億8千万 メンバー5人 エンドユーザー12000人&lt;/li&gt;
&lt;li&gt;田中(゜p゜)のポジション： PM&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;経緯&#34;&gt;&lt;strong&gt;経緯&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)の初めての炎上案件。&lt;br&gt;
当時、プロキシサーバとして安全牌だったのはBlueCoatで、田中(゜p゜)の実績も複数件あった。&lt;/p&gt;
&lt;p&gt;が、ちょうど自社でVMwareの基盤をサービスとして展開しはじめて、それを使えとのプレッシャーも強く、メーカーの値引きも大きく、&lt;strong&gt;国内であまり実績のないWebsenseのLinuxソフトウェア製品を選択&lt;/strong&gt;。&lt;/p&gt;
&lt;h2 id=&#34;失敗の内容&#34;&gt;&lt;strong&gt;失敗の内容&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;プロキシに対する負荷テスト、2週間の情シス部門に対するプレテストは無事に終わったものの、本番サービスイン後の1時間後に本番機2台が大きくスローダウン。エンドユーザからクレーム多発。&lt;strong&gt;切り戻し。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;原因&#34;&gt;&lt;strong&gt;原因&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;ソフトウェアのバグにより、&lt;strong&gt;特定のユーザの、特定のアクセスパターン&lt;/strong&gt;により、プロセスのフリーズ/リセットが発生。フリーズの蓄積により、メモリが食いつぶされて、スローダウンに至った。&lt;/p&gt;
&lt;p&gt;負荷テストの単純なアクセスパターン、情報システム課のテスト時には含まれていないアクセスパターンだった。&lt;/p&gt;
&lt;p&gt;その後の調査で、切り戻したBlueCoatでは同様の事象は、設定により回避していたことが判明したが、Websenseに同様の設定はなく、ソフトウェアの回収を待たなければならなかった。&lt;/p&gt;
&lt;h2 id=&#34;結果&#34;&gt;&lt;strong&gt;結果&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;3ヶ月サービスインを延期し、その間にバグ回収と運用での回避を模索。&lt;/p&gt;
&lt;p&gt;3ヶ月後、サービスインするものの、パフォーマンスは出ず、当初2台＋検証機1台で運用する予定が、3台とも本番機として投入することになり、運用にも多大な迷惑をかけた。&lt;/p&gt;
&lt;p&gt;また、切替前は通信できていたのに、切替後に通信できなくなったケースが多発し、その度にプロキシに例外設定が必要だった。&lt;/p&gt;
&lt;p&gt;その件数は数十件に達し、当初は始末書を書いていたが、お客様担当者から、個別のクレームについては不要との、不名誉な緩和を頂いた。&lt;/p&gt;
&lt;p&gt;リカバリの間の田中(゜p゜)の月稼働時間は400〜500時間にも達した。&lt;/p&gt;
&lt;h2 id=&#34;反省点&#34;&gt;&lt;strong&gt;反省点&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;トラフィックパターンを調査していったところ、Webサーバ側にRFCの必須、推奨要件を満たしていない通信が多数あり、WebSenseは、RFCに則っていない通信については、エラーを返すか、スタックを起こしていた。&lt;/p&gt;
&lt;p&gt;逆に、BlueCoatはそうしたトラフィックに対して&lt;strong&gt;上手いことごまかして通信を継続していた&lt;/strong&gt;ように見える。&lt;/p&gt;
&lt;p&gt;過去の蓄積が、イレギュラーなものに対しての柔軟性として製品に反映された結果、製品コストが高くなっているのだと痛感した。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>田中(゜p゜)のPC環境</title>
      <link>https://y2tanaka.github.io/git-pages/env-of-mypc/</link>
      <pubDate>Sat, 05 Sep 2020 10:49:02 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/env-of-mypc/</guid>
      <description>&lt;p&gt;昔々、自作PCを手がけてたので、PCの詳しさはそれなりです。&lt;br&gt;
今はこだわりは特にないので、「安さ」「動きの軽さ」「丈夫さ」の質実剛健さを重視。デスクトップ置くスペースがもったいないのでもっぱらノートです。&lt;/p&gt;
&lt;h2 id=&#34;起動スピード&#34;&gt;起動スピード&lt;/h2&gt;
&lt;p&gt;この環境の最大のウリ(笑) 10秒ちょいで起動。パパパパァーん。という感じで小気味良い。&lt;br&gt;
※だらしない格好と、パッキン外れてるのは気にしないで。&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;ハードウェア&#34;&gt;ハードウェア&lt;/h2&gt;
&lt;p&gt;ヤフオクで3万以下で売られてたDellのノートPC。&lt;br&gt;
SSD256GBに換装。メモリ8GBに増強。&lt;br&gt;
企業向けのリース上がり品だと思うけど、素性は不明。Windows7 Proのライセンス付きをWindows10にアップグレード。&lt;/p&gt;
&lt;p&gt;スペックは以下の通りみたい。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;ソフトウェア&#34;&gt;ソフトウェア&lt;/h2&gt;
&lt;p&gt;画像だけ見ても意味が分からんと思うので少し解説。&lt;/p&gt;
&lt;p&gt;OS： Lubuntu 16.04&lt;br&gt;
ブラウザ： Chromium&lt;br&gt;
他： VMPlayer12入れてWindows10動かしてる。やむを得ないOffice利用時に。&lt;br&gt;
あと英会話用のskype。Linuxなのに動くんすよ。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;2020年時の所感&#34;&gt;2020年時の所感&lt;/h2&gt;
&lt;p&gt;4年くらい前に入れた気がするが、パフォーマンス的には未だ何も困っていないし、ブラウザで実施する作業はChromiumで何も問題ない。Wordpressもこれで更新してる。&lt;br&gt;
EclipseとかVScodeとか開発ツールも微妙に入ってるけど、最近は使ってない。&lt;/p&gt;
&lt;p&gt;正直、Chromiumで動かないサイトが微妙にあるのと、ブログ始めてPowerPointとペイントツールでお絵かきするのと、リモートワーク増えてきてOffice利用が増えており、Windows10に乗り換えようか検討中。&lt;br&gt;
でもなぁ。細かいカスタマイズとGUIがなぁ。&lt;/p&gt;
&lt;p&gt;このVMの中にあるWindows10をそのままハードに移したいんだけと、やり方が分からんのです。&lt;/p&gt;
&lt;h2 id=&#34;おまけ&#34;&gt;おまけ&lt;/h2&gt;
&lt;p&gt;Google CloudのGCSに一発でバックアップできるスクリプト作って、安く、快適にバックアップしとりますのでご参考まで。リカバリの実績もあり。「tanaka」「homepc003」は自分の環境に置き換えて下さい。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;あれ？gsutilsサポート切れかな？&lt;br&gt;
あと、HDD容量たくさん食ってて、回線細い人には向いてないかも。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>ITインフラあるある物語</title>
      <link>https://y2tanaka.github.io/git-pages/it-faq-story/</link>
      <pubDate>Sat, 05 Sep 2020 08:32:28 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/it-faq-story/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ITインフラエンジニアがよく陥りがちなトラブルをまとめてみました。&lt;/p&gt;
&lt;h2 id=&#34;pc編&#34;&gt;PC編&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「ネットワーク繋がらないんだけど！&lt;/strong&gt;」&lt;br&gt;
LANケーブル抜けかかってますよ。ていうか爪の折れたケーブル使うのやめてくださいね。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「なんか動かないんだけど！」&lt;/strong&gt;&lt;br&gt;
どういうエラーが出ているのか、何をしたらそうなったのか、いつまで正常だったのか、きちんと説明して下さい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「お茶こぼしたら壊れた。保証効く？」&lt;/strong&gt;&lt;br&gt;
壊れたのではなく、アナタが&lt;strong&gt;壊した&lt;/strong&gt;のです。保証はききません。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「ノートの液晶が何もしないのに割れた！」&lt;/strong&gt;&lt;br&gt;
砂漠にでも放置しない限り、何もしないのに割れることはないと思います。あと、その割れ方、ノートの間にマウス挟んで移動しましたね？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「メモリ追加したら動かない！ なんとかして！」&lt;/strong&gt;&lt;br&gt;
その「剥がしたら保証なくなるよ」シール見えないんですか。相談もなく背面パネル開ないで。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザからソフトウェアの不具合連絡&lt;/strong&gt;。&lt;strong&gt;行ってみると。&lt;/strong&gt;&lt;br&gt;
エンジニアが行くと事象が再現しません。たぶん、PCに小人さんかなんかが住んでいて、PCが好きな人と嫌いな人を見分けてるんだと思います。&lt;/p&gt;
&lt;h2 id=&#34;サーバ編&#34;&gt;サーバ編&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;なんか不安定なんでとりあえず再起動しよう&lt;/strong&gt;&lt;br&gt;
Windowsサーバーにて。Linuxではなかなか信じがたい行動パターン。ブラックボックスが多過ぎなんですよ、たぶん。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;サーバ壊れたんでバックアップから復旧しよう！ アレ？&lt;/strong&gt;&lt;br&gt;
計画通り取られてたはずのバックアップがそこになく、絶望。バックアップの監視もキッチリやりましょう。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;サーバ不調なんでリモートで接続しよう！ アレ？&lt;/strong&gt;&lt;br&gt;
運用ポートって監視怠りがちですよね。これに懲りたらテスト計画ちゃんと作りましょう。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;サーバ不調なんで、リモートコンソール接続しよう！ アレ？ パスワードが？&lt;/strong&gt;&lt;br&gt;
キーボードのタイプちゃんと確認しました？ コンソールが英語だと、パスワードの記号でしにますよ。これに懲りたら運用テストちゃんとやりましょう。&lt;/p&gt;
&lt;p&gt;**冗長化してたはずなのになんでサービス落ちるの？&lt;br&gt;
** 副系の監視怠ってましたね？ これに懲りたらテスト計画ちゃんと立てましょう。&lt;/p&gt;
&lt;p&gt;**ストレージが突然死んだ！&lt;br&gt;
** あー、ディスク複数本死んでますね。監視ちゃんと入れてました？ これに懲りたらテスト計画ちゃんと立てましょう。&lt;/p&gt;
&lt;p&gt;**ストレージが突然死んだ！&lt;br&gt;
** スナップショットの容量、考慮に入れてましたか？ これに懲りたらキャパシティ計画ちゃんとしましょう。&lt;/p&gt;
&lt;p&gt;**ストレージが突然スローダウン！&lt;br&gt;
** あー、ディスク複数本死んでますね。監視ちゃんと入れてました？ とりあえず死ななくてよかったです。これに懲りたらテスト計画ちゃんと立てましょう。&lt;/p&gt;
&lt;p&gt;**ストレージが突然スローダウン！&lt;br&gt;
** RAIDの電池が切れてRAIDのReadキャッシュが効かなくなるとか、よくありますね。つーかどういうハード設計なんだよ。&lt;/p&gt;
&lt;h2 id=&#34;ネットワーク編&#34;&gt;ネットワーク編&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;エンドユーザ「島HUB配下がまるごと死んだ！」&lt;/strong&gt;&lt;br&gt;
ケーブルいじったでしょ。上位ポートでループ検出されてますよ。&lt;/p&gt;
&lt;p&gt;**冗長化してたはずなのになんでサービス落ちるの？&lt;br&gt;
** サーバーと同じです。副系の監視怠ってましたね？ これに懲りたらテスト計画ちゃんと立てましょう。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;新規の回線が遅い！ 不安定！&lt;/strong&gt;&lt;br&gt;
キャリア側は固定で、顧客側はAutoじゃないですか。インターフェイスのステータスが100halfとかですよね。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;リンクアップしない！ どうして？&lt;/strong&gt;&lt;br&gt;
LANケーブルは「パチッ」と音がするまで差し込むのが基本です。あと光ケーブルは折れやすいのでそんなに曲げちゃダメですよ。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;リンクアップしない！ どうして？&lt;/strong&gt;&lt;br&gt;
つ 「no shutdown」。繋いでるポートをきちんと確認しましょう。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;コンソールが文字化けする！どうして？&lt;/strong&gt;&lt;br&gt;
落ち着いて、機器のコンソール仕様を確認しましょう。9600bps、Xが全てとは限りません。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;他業者がサーバ入れ替えたら、ネットワーク繋がらなくなった！&lt;/strong&gt;&lt;br&gt;
まず、そのスパゲティのようなLAN配線なんとかしたほうがいいですよ。業者がかわいそうなんで。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;床下這わせてるLANの行き先がどこか分からない！&lt;/strong&gt;&lt;br&gt;
配線図ちゃんと作りましょう。あと、コネクタにはタグ付けしましょう。&lt;/p&gt;
&lt;p&gt;※思い出したら随時追記していきます。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>WordPressをGAE Standard に移行</title>
      <link>https://y2tanaka.github.io/git-pages/migration-site-to-gae/</link>
      <pubDate>Sat, 05 Sep 2020 07:23:55 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/migration-site-to-gae/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;記事の流れで突然技術っぽくなってますが、過去の資産が尽きたので、新しいことやっとるのです。&lt;/p&gt;
&lt;p&gt;ちなみにこれは&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1091/&#34;&gt;投稿のエントリの&lt;/a&gt;続きです。&lt;br&gt;
テストユースでは&lt;!-- raw HTML omitted --&gt;Google App Engine(GAE)&lt;!-- raw HTML omitted --&gt;を使ってWordPressを構築してみましたが、使い勝手が良くなったので&lt;strong&gt;このサイト自体も移行しちゃいました&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;GCEの無料枠でやってたんだけど、ロケーション米国で&lt;strong&gt;管理がもっさりしてる&lt;/strong&gt;し、少し無茶するとすぐにOSごとやられてしまうのにイライラしてしまい。&lt;/p&gt;
&lt;h2 id=&#34;wordpress-on-gaeメリデメ&#34;&gt;WordPress on GAEメリデメ&lt;/h2&gt;
&lt;p&gt;先進的なサービスであるGAEですが、レガシーなアプリであるWordPressを載せると様々な運用のデメリットが発生します。&lt;br&gt;
投稿のエントリにもありますが、田中(゜p゜)の認識をまとめます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;○GAE Standardはインスタンスの費用が必要なく、&lt;strong&gt;使った分だけお金を支払えばよい&lt;/strong&gt;。基本無料枠に収まるので安い。&lt;br&gt;
※ただしCloudSQLの費用は$9程度かかる。&lt;/li&gt;
&lt;li&gt;○￥1,000程度のレンタルサーバーでは考えられない&lt;strong&gt;スケーラビリティとパワー&lt;/strong&gt;がある。しかも自動。&lt;/li&gt;
&lt;li&gt;○費用についてはこちらも参照のこと。&lt;br&gt;
AWSからGAEに乗り換え&lt;br&gt;
&lt;a href=&#34;https://yamavlog.com/gcp-gae-wordpress-running-cost-202006/&#34;&gt;https://yamavlog.com/gcp-gae-wordpress-running-cost-202006/&lt;/a&gt;&lt;br&gt;
レンタルサーバ&lt;br&gt;
&lt;a href=&#34;https://webst8.com/blog/wordpress-recommend-rental-server/&#34;&gt;https://webst8.com/blog/wordpress-recommend-rental-server/&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;○SSL化も証明書取得も自動でやってくれる。&lt;/li&gt;
&lt;li&gt;○&lt;strong&gt;OSの運用は一切不要&lt;/strong&gt;。WordPressのコードをデプロイすれば終わり。&lt;/li&gt;
&lt;li&gt;×GAEは&lt;strong&gt;ディスクに書き込めない&lt;/strong&gt;。具体的には以下が更新できない。&lt;br&gt;
　プラグイン(設定は除く)&lt;br&gt;
　テーマ(設定は除く)&lt;br&gt;
　投稿・固定ページへの直接画像貼り付け(メディアライブラリからはOK)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;メリットはとてつもなくあるんですが、&lt;strong&gt;ディスクに書き込めないというのはWordPressさんにとって致命的&lt;/strong&gt;です。&lt;br&gt;
田中(゜p゜)はこの致命的な欠点を、以下のようにして工夫でカバーしてみました。&lt;/p&gt;
&lt;h2 id=&#34;構成と運用の工夫&#34;&gt;構成と運用の工夫&lt;/h2&gt;
&lt;p&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/post-1091/&#34;&gt;構成自体は、テストでやった時の環境と大きく違わない&lt;/a&gt;のですが、管理用のWordPressがローカルのPCからGCEになりました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;つまり&lt;strong&gt;GCEでサーバを立てて、そこで管理&lt;/strong&gt;します。&lt;br&gt;
ローカル管理との違いは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;使わないときには落としておく。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Preempt&lt;!-- raw HTML omitted --&gt;で構築してタダ同然。Preemtは最大24時間で落ちるので、落とし忘れ対策にもなる。&lt;/li&gt;
&lt;li&gt;CloudSQLとの距離が近いので、管理の操作がサクサクできる。&lt;/li&gt;
&lt;li&gt;どこからでも更新できる。&lt;/li&gt;
&lt;li&gt;バックアップが万全。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それと、この仕組みのミソですが、いちいちSSHで入って実行が必要だった②のデプロイを、&lt;strong&gt;スクリプト組んでwp-contentフォルダに更新があった時に勝手にデプロイするようにしてみました&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;※スクリプトはダサいですが、このエントリにいちおう載せておきます。&lt;/p&gt;
&lt;h2 id=&#34;構築方法一部再掲&#34;&gt;構築方法(一部再掲)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;まず、GCEでWordpressを建てます。ドメイン名もSSL証明書もいりません。面倒だったら、MarketPlaceの配布版が早いかもしれません。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://cloud.google.com/compute/docs/instances/preemptible?hl=ja&#34;&gt;https://cloud.google.com/compute/docs/instances/preemptible?hl=ja&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
ちなみに建てとくだけで良くて、WordPressのセットアップは不要です。GCEインスタンスが建ったら、おもむろにSSHで作業開始して下さい。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;Googleのチュートリアル&lt;/strong&gt;参考に構築。「ローカル」を構築したGCEに合わせて読み替え。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&#34;&gt;https://cloud.google.com/community/tutorials/run-wordpress-on-appengine-standard?hl=ja&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;チュートリアルにミス。&lt;br&gt;
×php vendor/bin/wp-gae&lt;br&gt;
○php vendor/bin/wp-gae create&lt;/li&gt;
&lt;li&gt;WP CLIのインストールは、チュートリアルじゃなくて公式のほうが良い。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://wp-cli.org/ja/&#34;&gt;https://wp-cli.org/ja/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;CloudSQLインストール前に、MySQL停止、無効化しておく。&lt;/li&gt;
&lt;li&gt;CloudSQLの自動起動化。ちょっと面倒です…。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://qiita.com/kumanoryo/items/ef3fbec70b4138ffe1c2&#34;&gt;https://qiita.com/kumanoryo/items/ef3fbec70b4138ffe1c2&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;デフォルトのapp.yamlは小規模サイトの運用に適しては居ないようなので、↓を参照して、インスタンス、エッジキャッシュの調整をしていくといいと思います。&lt;br&gt;
&lt;a href=&#34;https://www.serversus.work/topics/p1uaj4jrv8b5x70hwe6p/&#34;&gt;https://www.serversus.work/topics/p1uaj4jrv8b5x70hwe6p/&lt;/a&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://koni.hateblo.jp/entry/2016/01/06/130613&#34;&gt;https://koni.hateblo.jp/entry/2016/01/06/130613&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://yamavlog.com/gae-edge-cache&#34;&gt;https://yamavlog.com/gae-edge-cache&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;サーチエンジン等SEO対策必要な場合は、app.yamlデフォルトのファイル形式にtxtやxml他、サイトに含まれるファイル形式の追加必要です。&lt;/li&gt;
&lt;li&gt;wp-contentが更新された際に、GAEにデプロイが走るようにスクリプトを仕掛ける。田中(゜p゜)は以下のサンプルコードを適当な場所に置き、cronで5分毎に回してます。テストはした方が良いと思います。&lt;br&gt;
田中(゜p゜)は本職じゃないので、やっつけコードがダサいのはまじ勘弁して下さい。WordPressへの貼り方もよく分かってない…。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;このコードですが、Googleのデプロイのログがうまく出ないので、誰か改修してくれないかなぁ。&lt;br&gt;
田中(゜p゜)はこれにちょい加えてechoで、実行されたかどうかだけログに書き込んでます。&lt;/p&gt;
&lt;h2 id=&#34;移行方法&#34;&gt;移行方法&lt;/h2&gt;
&lt;p&gt;以下は、既存サイトから移行したい場合の参考手順です。&lt;br&gt;
因みに田中(゜p゜)は &lt;!-- raw HTML omitted --&gt;All in One Migration&lt;!-- raw HTML omitted --&gt;を使いました。&lt;/p&gt;
&lt;p&gt;要は&lt;strong&gt;移行用プラグインを&lt;/strong&gt;移行元と移行先に入れて、エクスポート→インポートするだけのはずですが、移行先のホスト名が&amp;lt;GCEの外部IP&amp;gt;なので、サイト内でのURL整合性が取れなくなります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;賢い移行ツールは、インポート先のホスト名を見て、DBなり設定ファイルなりを書き換えてしまう&lt;/strong&gt;のです。そのおかげで、見た目キレイに移行できるんですけどね…。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)がこれを解決するためにやったのは、以下のような感じです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;移行元サイトのリンクと画像の絶対パスを、可能な限り相対パスに書き換えておく。&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.will-hp.com/wpblog/wordpress/191/&#34;&gt;https://www.will-hp.com/wpblog/wordpress/191/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://worpreya.com/change-to-image-link-relative-path/&#34;&gt;https://worpreya.com/change-to-image-link-relative-path/&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;br&gt;
移行先(GCE)にも同じ設定を実施する。&lt;/li&gt;
&lt;li&gt;固定ページとかのリンクは書き換えられないので、&lt;strong&gt;手で頑張って下さい。&lt;/strong&gt;&lt;br&gt;
ユーザの設定でビューをクラシックにして、HTMLをテキストエディタにコピペし、置換するのが早いと思います。※いいプラグインが有ればおしえて欲しいす…。&lt;/li&gt;
&lt;li&gt;おもむろに移行ツールでエクスポート。&lt;br&gt;
PHP設定でダウンロードできない場合は、実体ファイルが、&amp;lt;WordPressのルート&amp;gt;/wp-content/ai1wm-backups/」配下の「日付.wpress」というファイルになってます。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;管理用PCの&lt;/strong&gt;host等で移行先サイトのFQDNを、&amp;lt;GCEのIP&amp;gt;で解決できるようにしておく。&lt;/li&gt;
&lt;li&gt;GCEのアップロードの上限設定を確認しておく。**だいたい上限が2MBでしにます。**これはPHP、WEBサーバ両方の設定があるので、適宜ググって変更して下さい。&lt;/li&gt;
&lt;li&gt;GCEでスナップショットを取っておく。&lt;/li&gt;
&lt;li&gt;おもむろに移行ツールでインポートし、**色々頑張って修正。**どうにもならなくなったらスナップショットから復元。&lt;/li&gt;
&lt;li&gt;インポートが終わったらhostsは元に戻す。&lt;/li&gt;
&lt;li&gt;手動でもスクリプトでもよろしくGAEにデプロイ。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;hostsをゴニョゴニョし、絶対リンクをなんとかすれば、&lt;strong&gt;賢い移行ツールさんは自分がFQDNのサイトにいるのだと勘違い&lt;/strong&gt;してくれます。&lt;/p&gt;
&lt;p&gt;あ、忘れてましたが、DNSの移行は省いてます。&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Cloud DNS&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;ならシームレスに移行できますが、そうでない場合はドメイン所有権の確認のために、DNSにTXTレコードの追加が必要で、少しタイムラグあるかもしれません。↓&lt;br&gt;
&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://blog.apar.jp/web/8281/&#34;&gt;https://blog.apar.jp/web/8281/&lt;/a&gt; (外部サイト)&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;運用上の注意点&#34;&gt;運用上の注意点&lt;/h2&gt;
&lt;p&gt;運用していて気づく注意点について、いくつか記載します。今後も増えていくかもしれません。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;テーマやプラグインで、WP cron等で動的にファイルを作成ものは軒並みGAE上でアウト。WP Super Cacheとか。田中(゜p゜)の使ってるテーマLuxeritasもアウト(っぽい)。&lt;/li&gt;
&lt;li&gt;テーマの中でも、jsやcssの圧縮、効率化のためにファイルを生成するものは注意。ホスト名を勝手に埋め込んでるので、管理画面が本番と同じアドレスじゃないとダメなケースがある。&lt;/li&gt;
&lt;li&gt;GAEは(簡易)CDNがついているので、デザイン等jsやcssがキャッシュされてると変更がすぐに反映されず、切り分けが面倒なことになる。キャッシュの時間は長いので、app.yaml等で短くして更新するのが良いかもしれない。ChromeのF12での切り分けが必要。&lt;/li&gt;
&lt;li&gt;似たようなサイトが2つあるので混乱する。とくに、テーマの都合等でhostsでGCE側に本番のFQDNを振ってる場合に顕著。管理画面で「ファイルが書き込めません」と出ているのはGAE。&lt;/li&gt;
&lt;li&gt;ホスト名問題について、GAEのサービス名(appspot〜)で確認するというのもワークアラウンドとしてあり。&lt;/li&gt;
&lt;li&gt;GCE側でデザインのテストだけしたい場合は、一時的にCron止めて、GAEに他のサービス名でアップロードする等の工夫が必要。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;やっぱり性能とコストに引き換えにするものはある感じですね。&lt;br&gt;
何も分からないユーザに渡すには不安があるな。&lt;/p&gt;
&lt;h2 id=&#34;使ってみてどうか&#34;&gt;使ってみてどうか&lt;/h2&gt;
&lt;p&gt;米国の無料枠に比べたら、&lt;strong&gt;サービスも管理もとにかく速い&lt;/strong&gt;です。&lt;br&gt;
距離も近いし、DBが外出しだというのも大きい。生産性のために、千円払っとくか、というのが移行のキッカケです。&lt;br&gt;
本番の挙動にOSが関係ないのも嬉しい。&lt;/p&gt;
&lt;p&gt;ただ、&lt;strong&gt;意外とデプロイに時間がかかるなあ&lt;/strong&gt;、という印象です。手動で回したときも、更新でトリガーされてからGAEのデプロイに5分ぐらいかかる印象。なんで、すぐ反映されないことに対して理解は必要かもですね。&lt;/p&gt;
&lt;p&gt;更新トリガーのcronを5分毎にしてるけど、大した処理じゃないし、1分毎でもいいかもしれない。&lt;br&gt;
イライラする人はSSHで繋いで、ログをtail -fしてればいいんだと思うよ。 &lt;strong&gt;※田中(゜p゜)です。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;あとこの構成のウリはスケーラビリティです。&lt;br&gt;
どんな規模のトラフィック来ても、サーバ増設は必要ないから費用は抑えられるし、SQLの負荷を気にしとけばいいだけ。&lt;br&gt;
&lt;strong&gt;どんなに田中(゜p゜)のサイトがバズっちゃっても問題ないよ？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;ただ、実運用で大規模サイト運用したことないから分からないけど、マルチテナントだと、フォルダごとにWordPress立てて、GAE側はサービスかプロジェクトでで切り分けていく感じになるのかな？&lt;/p&gt;
&lt;p&gt;ま、&lt;strong&gt;趣味でやってる分には何の関係も無いんですけど&lt;/strong&gt;ね。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>証明書によるLAN認証は育成基盤</title>
      <link>https://y2tanaka.github.io/git-pages/lan-auth-bay-cert/</link>
      <pubDate>Sat, 05 Sep 2020 07:12:32 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/lan-auth-bay-cert/</guid>
      <description>&lt;p&gt;&lt;strong&gt;いきなりワケの分からないタイトル&lt;/strong&gt;で恐縮ですが、田中(゜p゜)はこの領域に手を伸ばしたことで、ネットワークエンジニアから大きく枠外に飛び出して行ったという経緯あり、個人的にもインパクトのあった仕組みだったので、記事化してみました。&lt;/p&gt;
&lt;h2 id=&#34;証明書によるlan認証とは&#34;&gt;証明書によるLAN認証とは？&lt;/h2&gt;
&lt;p&gt;簡単に言うと、&lt;strong&gt;「LAN」に接続させる際にコンピュータとかユーザ固有のデバイス証明書を確認する&lt;/strong&gt;仕組みで、設定項目として&lt;strong&gt;EAP-TLS&lt;/strong&gt;とかそんな名前で出てきます。たぶんネットワーク視点だと&lt;!-- raw HTML omitted --&gt;こっちのページ(外部サイト)&lt;!-- raw HTML omitted --&gt;のほうが詳しい。&lt;/p&gt;
&lt;p&gt;Radiusサーバなんかが必要となるので、個人だったり、小規模の企業だと導入していないところもあると思いますが、&lt;strong&gt;LANのセキュリティとしては最強&lt;/strong&gt;だと田中(゜p゜)は考えとります。&lt;/p&gt;
&lt;p&gt;また、Radiusサーバー側で、認証されたユーザ、されてないユーザのVLANの指定ができるので、検疫システムにも使われてたりする。&lt;/p&gt;
&lt;p&gt;つまり、認証されてないユーザは、検疫LANに振り分けて、検疫LANの中にある検液用のアプライアンスがPCをチェックした上で、本番LANに接続させる仕組み。&lt;/p&gt;
&lt;p&gt;あとポイントは、この技術は無線LANで発達したものだけど、&lt;strong&gt;有線LANでも使える&lt;/strong&gt;ということ。有線LAN側でキッチリ認証しておけば、MACアドレスで同セグメント内の端末をはじいたりするような、費用対効果の低い仕組みを入れる必要がない。&lt;/p&gt;
&lt;h2 id=&#34;デメリット&#34;&gt;デメリット&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;証明書というのは往々にして運用が面倒&lt;/strong&gt;です。&lt;br&gt;
そもそも証明機関サーバーが必要だし、その証明機関から発行した証明書を、PC一台一台に入れてかないとだし、その後の運用もしんどい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;往々にして「セキュリティ」と「コスト」と「利便性」は共存できない&lt;/strong&gt;ものなのです。&lt;/p&gt;
&lt;h2 id=&#34;解決策&#34;&gt;解決策&lt;/h2&gt;
&lt;p&gt;実はこの&lt;strong&gt;証明書運用問題をスッキリ解決する方法&lt;/strong&gt;があります。&lt;br&gt;
田中(゜p゜)はネットワークエンジニアだったのですが、なんとかしてこの証明書の配布による運用コストを低減すべく試行錯誤した結果、&lt;strong&gt;運用工数を大きく削減できる仕組み&lt;/strong&gt;にたどり着きました。&lt;/p&gt;
&lt;p&gt;というか、我々は既にPCの管理を簡易化でき、設定やセキュリティポリシーを配布できる素晴らしい仕組みを持っていたのです。&lt;/p&gt;
&lt;p&gt;つ &lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/how-delicious-ad-is/&#34;&gt;ActiveDirectory&lt;/a&gt;。&lt;br&gt;
※できればドラえもんの道具調で言いたい。ひみつ道具なので。&lt;/p&gt;
&lt;h2 id=&#34;windowsによるeap-tls基盤構築&#34;&gt;WindowsによるEAP-TLS基盤構築&lt;/h2&gt;
&lt;p&gt;証明書によるLAN認証にとっての課題は、証明書の運用負荷ですが、実はWindowsセットでそれを全て揃えてしまうことにより、&lt;strong&gt;ほぼ自動化&lt;/strong&gt;できます。&lt;/p&gt;
&lt;p&gt;使うコンポーネントは以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Active Directory&lt;/li&gt;
&lt;li&gt;ドメイン参加してるWindows CA(証明書発行機関)&lt;/li&gt;
&lt;li&gt;ドメイン参加してるWindows NPS(Radiusサーバ)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;仕組みとしては概ね以下です。※なんかカラフルになってしまって恥ずかしい…。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;①ADのポリシーで、PCとRadiusサーバに対して証明書取得指示を出す&lt;/li&gt;
&lt;li&gt;②PC・Radiusサーバが証明書を取得する。&lt;/li&gt;
&lt;li&gt;③PCとRadiusサーバーは、発行された証明書を付きあわせて認証する。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;あと、PCにEAP-TLS設定を入れていく必要ありますが、これも①の段階でポリシーで配布してしまえば良いです。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;そう、ADならね。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;とか言いたくなっちゃう。&lt;br&gt;
田中(゜p゜)は、この仕組みを使って、&lt;strong&gt;無線LAN系の提案のコンペで無敗&lt;/strong&gt;を誇りました。競合他社がNetAttestを出してきた時はニヤニヤしてましたね。ま、10年以上前のことですけど。&lt;/p&gt;
&lt;p&gt;それと、この仕組みは有線LANでも使えるので、LANセグメントに無駄なセキュリティ機器とか入れる必要なくなります。&lt;/p&gt;
&lt;p&gt;他、細かい話でコンピュータ証明書とユーザ証明書の違いで接続タイミングが変わったりするとか、プリンタとか802.1xに対応してない機器どーすんだ、みたいな話あるのですが、まあそれは割愛。&lt;/p&gt;
&lt;p&gt;細かい話聞きたい方は、&lt;a href=&#34;https://y2tanaka.github.io/git-pages/forums/forum/infrastructure/&#34;&gt;フォーラム&lt;/a&gt;でトピック立てて質問して下さい。&lt;/p&gt;
&lt;h2 id=&#34;ユーザから見るとどうなるか&#34;&gt;ユーザから見るとどうなるか&lt;/h2&gt;
&lt;p&gt;ドメインに入ってない端末は、仮のVLANに割り当てられて、ADととしか通信できず、そこでドメインに入り、証明機関から証明書を取得します。このあたりは、情報システム部門で端末をセットアップする際にドメインに入ってユーザに渡す等、運用を変えてもいいと思います。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;一度ドメインに入った端末は、本番VLANの有線LANに接続できるようになります。&lt;br&gt;
ユーザから見ると、証明書は一切関わってこないように見えます。&lt;/p&gt;
&lt;p&gt;これで&lt;strong&gt;ほぼシームレスに証明書を配布することができました。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;育成基盤としての8021x&#34;&gt;育成基盤としての802.1x&lt;/h2&gt;
&lt;p&gt;余談ですが、この仕組みは、&lt;strong&gt;自分で検証基盤を作ってみることをオススメ&lt;/strong&gt;します。先に書いたように田中(゜p゜)は、この仕組みを学ぶことで、他領域に対しての学習が深まりました。&lt;/p&gt;
&lt;p&gt;なぜって、&lt;strong&gt;AD、Windowsサーバ、PCの知識がいっぺんに必要&lt;/strong&gt;で、ユーザが利用に至るまでの流れが理解できるから。ADによるドメイン構築や、ポリシー配布の基礎が学べるし。&lt;strong&gt;サーバーエンジニアはネットワークの基本知識が学べる&lt;/strong&gt;し。&lt;/p&gt;
&lt;p&gt;個人でやるとしたら、スイッチはヤフオク、メルカリ等で、802.1x対応のものを購入するとして、サーバーはOSの調達が難しいので、クラウドで立てるのがいい気がします。&lt;/p&gt;
&lt;p&gt;ちょっと以下の赤字ような工夫必要かもだけど。&lt;br&gt;
自力のある人は、ルータをVPN対応に置き換えて、クラウドとVPN貼ってもいいかもしれない。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;すいません。これやった時に利用したサイト紹介したかったんですが、今なくなってるんで、&lt;!-- raw HTML omitted --&gt;このあたり&lt;!-- raw HTML omitted --&gt;をオススメしておきます。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;802.1xは、証明書を使って端末をLAN認証する&lt;/li&gt;
&lt;li&gt;証明書の運用は運用負荷が高いが、ADによって軽減できる&lt;/li&gt;
&lt;li&gt;自分で検証環境をつくると、技術領域の幅が広がる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;って、さんざんクラウド関係でLANなんて無い方がいい的なこと言っといて、思い切りLAN技術の話してますね。ま、いきなりなくなってしまうことはないので、ご参考に、ということで。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>LinuxとMacについて</title>
      <link>https://y2tanaka.github.io/git-pages/linux-and-mac/</link>
      <pubDate>Sat, 05 Sep 2020 06:50:39 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/linux-and-mac/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;「&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/how-dericious-is-win10/&#34;&gt;Windows10(OS)て美味しいの？&lt;/a&gt;」のカウンターパートとしての記事。&lt;br&gt;
相変わらずタイトルだけを記事一覧に書いてみて、内容に困るというアレです。&lt;/p&gt;
&lt;p&gt;↑の記事にも書いた通り、コスト削減、業務効率の観点から、クライアントOSとしてはWindows10一択じゃないか、という田中(゜p゜)の持論はありますが、他のOSはどうなのよ？という観点でこの記事書いてます。&lt;/p&gt;
&lt;h2 id=&#34;クライアントosとしてのlinux&#34;&gt;クライアントOSとしてのLinux&lt;/h2&gt;
&lt;p&gt;正直、クライアントOSとしてのLinuxは…。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ディストリビューションありすぎ！ サポートどーすんの？&lt;br&gt;
あと管理ツールとOffice！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;という感じです。&lt;br&gt;
個人的にはシンプルなのが好きで、色々カスタマイズできるし、軽いのは大好きなので、Lubuntu使ってますけど。&lt;/p&gt;
&lt;p&gt;ITリテラシが低い大多数の一般職員が使おうとした場合に大混乱が生じると思います。&lt;br&gt;
てか&lt;strong&gt;あまり聞かない&lt;/strong&gt;ですよね、クライアントOSをLinuxでやってる大企業。&lt;/p&gt;
&lt;h2 id=&#34;サーバosとしてのlinux&#34;&gt;サーバOSとしてのLinux&lt;/h2&gt;
&lt;p&gt;どうなんだろう？&lt;br&gt;
田中(゜p゜)は安定してて好きですが、それでもディストリビューションが多くて、&lt;strong&gt;ナレッジ漁ろうとした時に苦戦&lt;/strong&gt;するケースが多い気がする。&lt;/p&gt;
&lt;p&gt;現に、このサイトでWordPress作ろうとした時、同じようなことやってる人はたくさんいたけど、サーバOS、DB、アプリの組み会わせが田中(゜p゜)のと完全にマッチしてた人はおらず、&lt;strong&gt;結局のところ、自分で色々な工夫が必要&lt;/strong&gt;だった。&lt;/p&gt;
&lt;p&gt;あと、クラウドになったらあんまり関係なくなるかもしれないけど、入れるハードウェアの選択肢が多すぎて、&lt;strong&gt;何かあった時に責任のなすりつけ合いになる&lt;/strong&gt;のも気になる。&lt;/p&gt;
&lt;p&gt;つまるところ、&lt;strong&gt;選択肢が多いことは必ずしも幸せじゃない&lt;/strong&gt;んじゃないでしょうか。&lt;br&gt;
よく分からないし、楽したいので、みんなが使ってるものを普通に使いたい、というニーズはアリなのかな、と思います。&lt;/p&gt;
&lt;p&gt;ただ、全部CLIとテキストの設定ファイルで操作できるってのは、Windowsサーバーに対しての圧倒的優位点なのかな、とは思います。&lt;br&gt;
&lt;strong&gt;ボクWindowsサーバーのGUIしか使えないんです、というエンジニアは、将来のことを考えたほうが良いと思う。まじで。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;クライアントosとしてのmac&#34;&gt;クライアントOSとしてのMAC&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;田中(゜p゜)は結構好き。&lt;/strong&gt;&lt;br&gt;
社内の業務をやってる時はOfficeがマトモに動かなかったので、あまり好きではなかったですが、プログラミングやってる時にEclipseとかVScodeとかGitの開発環境作ってると、&lt;strong&gt;みんなが同じように悩んでて、Webで検索すると同じような事例が出てくる&lt;/strong&gt;から。&lt;/p&gt;
&lt;p&gt;それとNetBSDベースなので、設定ファイルがテキスト化されてるのもかなり好き。&lt;br&gt;
細かいチューニングができるんですよね。&lt;/p&gt;
&lt;p&gt;最終的に世界で最大規模のメーカーが、ハードも含めてサポートしてるので、なんかあった時の拠り所があるのも悪くない。&lt;/p&gt;
&lt;p&gt;画像、動画などのデザイン系は今でもMacが主流なんですよね？ この当りは田中(゜p゜)も業界に関わったことがないので分からんのです。&lt;/p&gt;
&lt;h2 id=&#34;サーバーosとしてのmac&#34;&gt;サーバーOSとしてのMac&lt;/h2&gt;
&lt;p&gt;昔そんなのありましたね。(^p^)&lt;br&gt;
今でもあるのかな？ 情報持ってません。すみません。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;p&gt;つまるところ、用途、利用対象、サポート、さらに好みなんて観点があるのでどれが一概にいいなんて言えないのです。&lt;/p&gt;
&lt;p&gt;ただ、&lt;strong&gt;いろんなOSが入り乱れてると、総じて運用コストは高くなる&lt;/strong&gt;ので、メインストリームと例外、というような感じで使い分けするのが良いのかな、と思います。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>パブリッククラウド市況と比較</title>
      <link>https://y2tanaka.github.io/git-pages/public-cloud-comparison/</link>
      <pubDate>Sat, 05 Sep 2020 06:45:20 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/public-cloud-comparison/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;これまた大きく出ましたが、田中(゜p゜)が&lt;strong&gt;なまくら刀でパブリッククラウドを比較&lt;/strong&gt;しまーす。&lt;/p&gt;
&lt;p&gt;比較表とかはいろいろなところで出回ってますし、&lt;strong&gt;どこかのクラウドを押したくてバイアスかかってるコメントが多い&lt;/strong&gt;ので、あくまで田中(゜p゜)視点＋主観ということで。&lt;/p&gt;
&lt;p&gt;それと、「&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/footsteps-of-cloud/&#34;&gt;クラウド化の足音&lt;/a&gt;」で書いた内容について、過去作成した資料出てきたんで、冒頭で捕捉しますね。&lt;/p&gt;
&lt;h2 id=&#34;クラウドに移行すると幸せ&#34;&gt;クラウドに移行すると幸せ？&lt;/h2&gt;
&lt;p&gt;オンプレからクラウドに移行すると費用は割高ですよ、という話しましたが、どっかの会社のインフラ基盤公開の例でざっっくりAWSと5年比較してみた資料があったので載せてみます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・前提&lt;/strong&gt;&lt;br&gt;
　2000人収容のリモートデスクトップ基盤&lt;br&gt;
　150台の仮想サーバ&lt;br&gt;
　ストレージ計50TB&lt;br&gt;
　月間トラフィック86TB&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;・オンプレ実績&lt;/strong&gt;&lt;br&gt;
　HW＋構築費用＋60か月維持費用&lt;br&gt;
　=&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt; 9億7千万円&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;**・AWS(Calculatorで比較)&lt;br&gt;
** 　EC2 150台＋SSD 50TB＋ Workspaces2000台(稼働100%と稼働20% 半々)&lt;br&gt;
　= &lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;10億5千万円&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;あれ？ 10%や20%高いどころじゃなくね？&lt;/strong&gt;&lt;br&gt;
だってこの資料、AWSの移行費用見積もり取るのがしんどくて、移行とか運用の工数とか入ってないですもん。&lt;/p&gt;
&lt;p&gt;…まあいいか。高くなってしまうことは伝わったはずなので。&lt;/p&gt;
&lt;h2 id=&#34;クラウド化によるメリット&#34;&gt;クラウド化によるメリット&lt;/h2&gt;
&lt;p&gt;単純に移行しただけだとITインフラの維持コストは高くなってしまいますが、それとトレードオフになるクラウド化によるメリットは概ね以下の三つで、うまく生かせば&lt;strong&gt;人件費も含めたコスト削減が図れる&lt;/strong&gt;んだと思います。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;日本固有の課題&#34;&gt;日本固有？の課題&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;終身雇用と雇用制限のおかげで、情報システム部門がイケてない人たちの受け皿と化しており、技術をベンダーに丸投げせざるを得ない。&lt;/li&gt;
&lt;li&gt;開発も運用も&lt;strong&gt;ベンダー丸投げ/ウォーターフォール&lt;/strong&gt;にどっぷり。&lt;/li&gt;
&lt;li&gt;ベンダーが積極的にパイの削減に努力はしないため、先進的な開発手法も身につかない。&lt;/li&gt;
&lt;li&gt;逆に欧米は自前でシステムを開発するので、スピード、コスト削減に対するモチベーションは高い。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;とは言え…&lt;/strong&gt;&lt;br&gt;
国内のインテリジェント(笑)な企業は、長期的な視点で情報システムに効果があることに気づいており、インフラ移行レベルの低レイヤのクラウドの活用は一巡していて、&lt;strong&gt;①②③のようなメリットを生かすクラウド活用にシフトして&lt;/strong&gt;ます。&lt;/p&gt;
&lt;p&gt;また、AIやビッグデータ領域での活用が盛んになっており、&lt;strong&gt;学問＋IT技術を備えたエンジニアがウン千万で直接雇用されてたり&lt;/strong&gt;する。&lt;/p&gt;
&lt;h2 id=&#34;クラウド市況&#34;&gt;クラウド市況&lt;/h2&gt;
&lt;p&gt;2018年の情報なんでちょい古いですが。各クラウドベンダーのシェア状況比較です。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;まとめると、以下のような感じでしょうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;相変わらずAWSのシェアがぶっちぎりだが、&lt;strong&gt;AzureがOffice365、ADとの連携を武器にシェアを大きく伸ばす展開&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;他、IBMは自前のハードウェアとカニバっていたが、クラウドにシフトする意思決定をした模様。シェアは下がり気味。&lt;/li&gt;
&lt;li&gt;Alibaba(Softbankが出資)は中国に特化しており、シェアを伸ばす状況。&lt;/li&gt;
&lt;li&gt;その他大勢はシェアを大きく減少しており、&lt;strong&gt;市場は上位クラウドベンダーに絞り込まれつつある&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;田中(゜p゜)が好きではないホワイトクラウド系が軒並みシェアを失っていて、まあ、なんだかなぁ、という状況。&lt;/p&gt;
&lt;p&gt;それと、IBMはオンプレとカニばっててたぶんこの先厳しいので、&lt;strong&gt;AWS、Azure、GCPが生き残る感じ&lt;/strong&gt;でしょうか。&lt;/p&gt;
&lt;p&gt;…すみません。&lt;br&gt;
この三つは田中(゜p゜)使ったことあるんで、結論ありきです。&lt;/p&gt;
&lt;h2 id=&#34;三大クラウドの比較&#34;&gt;三大クラウドの比較&lt;/h2&gt;
&lt;p&gt;ようやく本題です。&lt;br&gt;
費用とか性能とか、客観的なデータはインターネット検索すれば転がってると思うので、田中の主観ではありますが、三大クラウド比較してみました。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;**AWSについて&lt;br&gt;
** まじでホスピタリティがすごいです。AWSそのものの営業とかサポートの優秀さもそうですが、コミュニティも強力でインターネットのドキュメントも豊富だし、困っても誰かがナレッジを持っている。サポートも、AWSじゃない範囲にまでグイグイ踏み込んでサポートしてくれます。&lt;/p&gt;
&lt;p&gt;言い換えますが、&lt;strong&gt;田中(゜p゜)はベンダーと相対していてこんなにやさしくされたことない&lt;/strong&gt;っす。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GCPについて&lt;/strong&gt;&lt;br&gt;
田中(゜p゜)はGCP使うベンチャーに居たので、比較的よくわかるのですが、この中でGCPだけがプロダクトアウト型のような気がするんですよ。「&lt;strong&gt;自分らがカッコいいと思うものはユーザーもかっこいいと思うに違いない&lt;/strong&gt;」というような。&lt;/p&gt;
&lt;p&gt;いや、Googleの人たちは基本的に頭いいし、技術に寄ってるから…。一般庶民とのニーズとギャップある気がするんですよね。&lt;br&gt;
ユーザがヴォクシー乗りたがってるのに、86提案しちゃう感じ？&lt;/p&gt;
&lt;p&gt;このあたりの企業のカルチャーが、今後、市場に対してどう影響するかは気になります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Azure/o365について&lt;/strong&gt;&lt;br&gt;
正直パフォーマンスも悪いし、APIもイケてないないので、クラウド単体としてはあまり好きじゃないのですが、**Microsoftの戦略はかなりヤバい(いい意味で)&lt;strong&gt;と思うので、&lt;/strong&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/how-dericious-is-o365/&#34;&gt;別記事に記載&lt;/a&gt;**します。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;クラウド化しただけではコスト削減にならない。運用の工夫が必要。&lt;/li&gt;
&lt;li&gt;日本は、組織的な制約があり、クラウド化は遅れているが、いずれクラウドにシフトしていく。&lt;/li&gt;
&lt;li&gt;クラウドベンダーの淘汰は進み、3～4のメガクラウドに絞られつつある。&lt;/li&gt;
&lt;li&gt;メガクラウドはどこも似たようなサービスを提供しているが、それぞれの文化、戦略に違いはあるので、ITインフラとしてどうすべきか見極めが必要。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>企業のネットワークアクセスパターン</title>
      <link>https://y2tanaka.github.io/git-pages/nw-pattern-of-enterprise/</link>
      <pubDate>Sat, 05 Sep 2020 04:35:54 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/nw-pattern-of-enterprise/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;美味しいの？ シリーズ3本書いて若干疲れてきたので、少し気分を変えて。&lt;/p&gt;
&lt;p&gt;クラウド・サーバー・PCの話ばかり書いてますが、そもそも田中の出自はネットワーク屋なので、たまにはネットワークを軸に記事書きたいな、と思い。&lt;/p&gt;
&lt;p&gt;とはいいつつ、この記事は&lt;strong&gt;営業向けにクラウドを使う際のネットワークのデザインパターンについて説明したもの&lt;/strong&gt;であって、深い技術の話じゃないですけど。&lt;/p&gt;
&lt;p&gt;あとこれ、手弁当で作ったので完全に田中(゜p゜)のオリジナルです。&lt;br&gt;
特定の企業の工数使って作ったものじゃないので、情報漏洩とかではない。念のため。&lt;/p&gt;
&lt;h2 id=&#34;企業ネットワークの歴史&#34;&gt;企業ネットワークの歴史&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;過去、企業のネットワークといえば、閉じた世界「LAN(Local Area Network)」が中心だった。&lt;/li&gt;
&lt;li&gt;1990年後半からのインターネットの爆発的な成長に伴い、&lt;strong&gt;インターネット接続が前提で企業ネットワークが構成される&lt;/strong&gt;ようになった。ASP(SaaS)、InternetVPN等。&lt;/li&gt;
&lt;li&gt;現在、クラウドファーストでシステムが構築されるようになり、ネットワークのあり方がさらに変わろうとしている。&lt;/li&gt;
&lt;li&gt;**「閉じた世界」→「開いた世界」**へ。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;今回は何を説明するか&#34;&gt;今回は何を説明するか&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;過去の経緯はさておき、企業の成長フェーズに合わせてどうネットワークが構築されていくのか、順を追って説明します。&lt;/li&gt;
&lt;li&gt;クラウドのドアノック的な活動として、ネットワークの小話ができるようになれればいいと思います。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;フェーズ1インターネット使うだけ&#34;&gt;フェーズ1：インターネット使うだけ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;10〜20人くらいまでのアクセスであれば、コンシューマ向けの携帯キャリア接続、インターネット回線で事足りる。&lt;/li&gt;
&lt;li&gt;LANとインターネットを分かつ機器は、(簡易でも)FW機能を備えている。LAN側にある機器にはローカルIPが付与されていることに注意。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;フェーズ2共同作業場が必要になる&#34;&gt;フェーズ2：共同作業場が必要になる&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;10人を超えてくると、共同作業場が必要となる。手っ取り早く拠点LANにNASやサーバを追加。&lt;/li&gt;
&lt;li&gt;システムが増え、安定性が重要になると、InternetVPNなどでデータセンターと接続し、サーバを利用する。&lt;/li&gt;
&lt;/ol&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;フェーズ3拠点が増える大きくなる&#34;&gt;フェーズ3：拠点が増える/大きくなる&lt;/h2&gt;
&lt;ol&gt;
&lt;li&gt;500人以上の規模となり、システムの重要性がさらに高まると、専用線を導入したり。コンシューマ向けの10倍以上の価格と引き換えに、SLA※とセキュリティを得る。&lt;/li&gt;
&lt;li&gt;拠点が大きくなると、L3スイッチを導入し、セグメントを分ける。&lt;/li&gt;
&lt;li&gt;外部とデータを交換するための「DMZ」を作ったりする。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;中規模以上の拠点lan構成例&#34;&gt;中規模以上の拠点LAN構成例&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;100人以上の拠点のLAN環境は、拡張性のため、階層構造を取る。&lt;/li&gt;
&lt;li&gt;有線LANは、全ての配線をラックに集約する統合配線パターンと、島単位でHUBを設置するケースが多い。&lt;/li&gt;
&lt;li&gt;多数の無線APを設置する場合は、自動的に無線の電波強度やチャンネルを調整する「無線コントローラ」を入れるケースがある。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;クラウドのアクセスパターン&#34;&gt;クラウドのアクセスパターン&lt;/h2&gt;
&lt;p&gt;だいたいはデータセンターと同じように利用するが、そもそもリソースがインターネットに置かれているので、本質的にはエンド to エンドのセキュリティを強化した上で、(1)のアクセスパターンとした方が、LANも不要となるし、費用対効果が高い。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;インターネットのサーバに直接アクセス。&lt;/li&gt;
&lt;li&gt;VPNや専用線経由でクラウド側の「VPC(LAN)」に接続。既存環境と同様にサーバを使う。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;素朴な疑問&#34;&gt;素朴な疑問&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Q. クラウドなのにLANって意味あるの？&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;A. 本質的には不要ですが、大人の事情があります。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;論理的にはエンド to エンドでセキュリティが確固としてれば不要。&lt;/li&gt;
&lt;li&gt;金融とかセキュリティ的に面倒な規約が背後にある場合は、インターネット経由なんてもってのほか、というケースもある。&lt;/li&gt;
&lt;li&gt;過去のLAN資産を抱えているほど、構成的にもルール的にも前頁(1)への移行が難しいケースがあります。&lt;/li&gt;
&lt;li&gt;逆に、新興ベンチャーが多量のリソースを使いたい場合は最高にオススメ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;※Googleは(1)に寄っており、AWSやAzureはマーケットインの観点で(2)に寄ってます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;Q. クラウドのネットワークってソフトで動くんじゃないの？&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;物理いる？&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;A. ぐぬぬ。その通りです。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;SDN(Software Designed Netwok)はまさにそれで、物理では再現できない柔軟なネットワークを構成できます。&lt;/li&gt;
&lt;li&gt;今後クラウドの利用が一巡したら、&lt;strong&gt;物理のネットワークしかできないエンジニアの市場は縮小一方&lt;/strong&gt;となると思われます。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;企業のフェーズによって、ネットワーク構成は似たり寄ったり。&lt;/li&gt;
&lt;li&gt;専用線はセキュリティや品質を担保したい時に高い金を積んで使うもの。&lt;/li&gt;
&lt;li&gt;クラウドはインターネットアクセスが基本だが、企業の事情によりLANでつないで利用している場合がまだまだある。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>スマートデバイスをどう使う？</title>
      <link>https://y2tanaka.github.io/git-pages/how-to-use-smartdevice/</link>
      <pubDate>Sat, 05 Sep 2020 02:54:33 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-to-use-smartdevice/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ああ、なんだかまたターゲットがはっきりしないテーマを出してしまった…。&lt;br&gt;
田中(゜p゜)のナレッジは一般的なエンタープライズに寄ってるんで、認識していない使い方とかあるかもしれない。&lt;/p&gt;
&lt;p&gt;でも田中(゜p゜)、ガンバル。&lt;/p&gt;
&lt;h2 id=&#34;利用シーン&#34;&gt;利用シーン&lt;/h2&gt;
&lt;p&gt;田中(゜p゜)がエンバープライズのインフラ見てて、ニーズが多かったのは以下です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;偉い人が、メールを確認、決済を通す。&lt;/li&gt;
&lt;li&gt;営業の少人数プレゼンテーションツール。タブレット。&lt;/li&gt;
&lt;li&gt;一般職員がメールを確認する。コミュニケーションツールを使う。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(1)はホントよくあります。&lt;br&gt;
偉い人はとても忙しいので、下々の者から上がってきた意思決定の依頼を、スピード感持って対応したいというニーズはとても多い。お金を動かせるのも偉い人なので、全社的には取り入れられてないけど、&lt;strong&gt;例外で入れているケースは多々&lt;/strong&gt;ありました。&lt;/p&gt;
&lt;p&gt;まあ、決済用のアプリケーションがスマートデバイスに対応していないケースがあり、戦々恐々としながら対応してましたけど。&lt;strong&gt;画面見切れるんだけど！ みたいな理不尽な怒られ方したり&lt;/strong&gt;。&lt;br&gt;
そもそもアダプティブデザインじゃないレガシーな内部WEBアプリ使い続けてんの、アナタ方の意思決定でしょうに。&lt;/p&gt;
&lt;p&gt;(2)はあまり対応したことないけど、対エンドユーザ向けの営業ツールで、よく見かけますね。&lt;br&gt;
保険の営業、クルマの購入時のアンケート入力、美容室のカルテ作成の際に利用したりとか。この場合は、全社的な施策で投資が走ってるので、端末もアプリも統一感ありますね。&lt;/p&gt;
&lt;p&gt;なので、ITインフラというよりも、業務アプリケーションの一部として構築なり運用なりが走るんじゃないかと思ってます。&lt;/p&gt;
&lt;p&gt;(3)について。&lt;br&gt;
よくあるんですけど、微妙だなー。そもそも一般職員の業務は、Officeツール使ってアウトプットをゴリゴリ出すことだと思うので、&lt;strong&gt;スマホで見ても何かできるかというのが疑問&lt;/strong&gt;。&lt;br&gt;
そもそも労働時間の規制が厳しくなってる昨今、リモートで働いてる時間をどうするのか、きちんと考えきれている企業なんてなくて、&lt;strong&gt;グレーな領域&lt;/strong&gt;なんじゃないでしょうか。&lt;/p&gt;
&lt;p&gt;なんで、(1)は偉い人の自己責任で例外対応すれば良いし、(2)は投資対効果ちゃんと判定した上で実装されてるのだろうし、(3)はあんま効果なさそうでかつグレーなので、&lt;strong&gt;ITインフラエンジニアとしては、あまり関わらない方が良い&lt;/strong&gt;と思ってます。&lt;/p&gt;
&lt;h2 id=&#34;セキュリティをどう考えるか&#34;&gt;セキュリティをどう考えるか&lt;/h2&gt;
&lt;p&gt;スマートデバイスは外部に持ち出し可能なので、データを外に持ち出せてしまうリスクを背負います。基本的には&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;落とした時の業法漏洩対策にどうするか&lt;/li&gt;
&lt;li&gt;会社のデータを他に漏洩させない&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というのがミソです。&lt;br&gt;
前者は単純に「端末の認証を指紋認証にする＋MDM入れてワイプする」でよいですが、後者は工夫が必要。運用で「そういうことするなよ」と規則で縛るのも割り切りとしてはあるかと思いますが、&lt;strong&gt;職員のリテラシを信用してないのであればシステム的な対応&lt;/strong&gt;が必要です。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)が見たことあるのは主に以下の2つ。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;端末のストレージと業務アプリを切り離せる専用アプリを入れる&lt;/li&gt;
&lt;li&gt;端末にWebフィルタを入れて、データを外に出せないようにする＋アプリ利用制限&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者の方がアプリのライセンスにお金かかりますが、心配事と工数が少なくて済みます。&lt;br&gt;
このあたりはトレードオフですね。&lt;/p&gt;
&lt;h2 id=&#34;byod&#34;&gt;BYOD&lt;/h2&gt;
&lt;p&gt;会社側としては端末購入費用が浮くし、従業員側としては端末2台持たなくて済む。&lt;br&gt;
&lt;strong&gt;これってWin-Winの関係じゃん！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;…なんて単純な話ではなく。&lt;br&gt;
セキュリティの件は、会社端末に準じますが&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;通信料をどう考えるか&lt;/li&gt;
&lt;li&gt;多種多様な端末のサポートをどうするか&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;なんて課題があったりして。&lt;br&gt;
前者については按分が難しいので会社Wi-fi貸し出したりとかして&lt;strong&gt;結局格安スマホ買うのと変わらない&lt;/strong&gt;とか、後者に関しては&lt;strong&gt;情報システム部門の人がしんだり&lt;/strong&gt;とか。&lt;/p&gt;
&lt;p&gt;社員は契約上雇用関係にあるのである程度言うこと聞くとしても、お金にシビアな協力会社の人にどう使わせるのかとかは、大きな課題になりますね・・・。&lt;/p&gt;
&lt;p&gt;うーん。&lt;strong&gt;やっぱりキレイにまとまらなかった。&lt;/strong&gt;&lt;br&gt;
ITインフラエンジニアとしてどうしたいか、というのはあまりなく、それ以外の会社としての方針とか制約事項の方が重要だからでしょうね。&lt;/p&gt;
&lt;p&gt;まあ簡単にまとめると&lt;strong&gt;ITインフラエンジニアとしては、あまり関わらない方が良い&lt;/strong&gt;と思ってます。&lt;br&gt;
※この記事中二度目&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>G Suiteって美味しいの？</title>
      <link>https://y2tanaka.github.io/git-pages/how-dericious-is-gsuite/</link>
      <pubDate>Sat, 05 Sep 2020 02:33:34 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-dericious-is-gsuite/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;それって美味しいの？ シリーズ第5弾。&lt;br&gt;
このシリーズ続くんかいな、という不安はありますが、今回も田中(゜p゜）がG Suiteをナマクラ刀で切り捨てます。&lt;/p&gt;
&lt;p&gt;いつものように今回も結論から。&lt;br&gt;
ITインフラエンジニアにとって、G Suiteは美味しいのか？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;うーん。あんまり美味しくない。&lt;br&gt;
一長一短あるけど、田中(゜p゜)はOffice365にすると思う。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;おそらく競合製品となるのはO365だと思いますが&lt;br&gt;
田中(゜p゜)はオンプレのExchangeからG Suiteに移行したことありますけど、&lt;strong&gt;偉い人の強いこだわりなければ、O365にしてました&lt;/strong&gt;よ。&lt;/p&gt;
&lt;p&gt;じゃあ何が違うのかというと、&lt;strong&gt;やっぱりOfficeスイートとしての機能がね…。&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;メールについては明確にGmail好き&lt;/strong&gt;です。強力な検索機能をベースにしたラベルの概念は、メール管理の生産性を一から覆すものだと思う。補完機能も強力だし。&lt;/p&gt;
&lt;p&gt;その他、ドライブ、ビデオ会議、その他のツールはどちらも遜色ないです。&lt;br&gt;
やっぱり&lt;strong&gt;致命的に違うのはスプレッドシート、スライド、Docs。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;G Suiteの何がしんどいかって言うと、&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;そもそもMicrosoft製品に比べて機能が少ない。かゆいところに手が届かない。&lt;/li&gt;
&lt;li&gt;フォントの種類が少ない。おそらく日本語対応が優しくない。&lt;/li&gt;
&lt;li&gt;図形描画の種類、機能が少ない&lt;/li&gt;
&lt;li&gt;PowerPointとファイル行き来すると体裁崩れる&lt;/li&gt;
&lt;li&gt;マクロが使えない(AppScriptはバージョン変わりすぎ)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というところでしょうか。&lt;br&gt;
正直、フォント問題については&lt;strong&gt;Googleが日本というマーケットにあまり力入れてない&lt;/strong&gt;からかもしれない。海外ではマトモに使えてるのかもしれないけど、田中(゜p゜)住んでるの日本ですし。&lt;/p&gt;
&lt;p&gt;あと、Googleの画像認識や、音声認識も日本語にあまり優しくないです。&lt;br&gt;
最近ではIMEなんかも評判悪くなりつつあるようですが、田中(゜p゜)はそれほどでも。&lt;/p&gt;
&lt;p&gt;正直、マネジメント寄りになってくると、Excel、PowerPoint、Wordに触れている時間が長くて、&lt;strong&gt;G Suiteによる生産性低下が無視できない量になってくる&lt;/strong&gt;んですよね。&lt;br&gt;
納品物の指定フォーマットってだいたいMSだし、技術者だとしても影響は免れない。&lt;/p&gt;
&lt;p&gt;そもそも機能では劣っている上に、デファクトスタンダートのMSフォーマットに合わせるのにコストがかかる。これは&lt;strong&gt;しんどい&lt;/strong&gt;の一言です。&lt;/p&gt;
&lt;p&gt;ということで、今回はまとめもなく終わります。&lt;br&gt;
むしろ、&lt;strong&gt;G Suiteの画期的な使い方してる人いたら教えて下さい。&lt;/strong&gt;&lt;br&gt;
app-script使って業務システム組んじゃったりとか。その後のサポートも気になりますが。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>Office365(とAzure)って美味しいの？</title>
      <link>https://y2tanaka.github.io/git-pages/how-dericious-is-o365/</link>
      <pubDate>Sat, 05 Sep 2020 00:49:57 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-dericious-is-o365/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;美味しいの？ シリーズ第四弾。&lt;br&gt;
田中(゜p゜)がなまくら刀で今アツい？ Office365に切り込んでいきます。&lt;/p&gt;
&lt;p&gt;いつものように最初に結論から。&lt;br&gt;
Office365(とAzure)って、ITインフラエンジニアにとって美味しいの？ ということですが、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;Microsoftは明らかにOffice365(とAzure)にサービス寄せたがってるし、やっといて損はないんじゃね？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;と田中(゜p゜)は思ってます。&lt;/p&gt;
&lt;h2 id=&#34;o365について&#34;&gt;O365について&lt;/h2&gt;
&lt;p&gt;コレですが、オンラインでライセンス確認、ソフトウェアのアップデートができるという点が、明らかにMicrosft側にも企業側にもメリットがあります。&lt;br&gt;
安っぽい言葉で言えば &lt;strong&gt;Win-Winの関係&lt;/strong&gt;？&lt;/p&gt;
&lt;p&gt;企業側にとって必要悪であった&lt;strong&gt;ライセンスの棚卸しと、ソフトウェアのアップデートの問題が解決&lt;/strong&gt;し、Microsoftからしても、&lt;strong&gt;違法ライセンスの排除が図れる&lt;/strong&gt;というイカしたしくみ。&lt;br&gt;
しかもMicrosoftにとっても、企業にとってもの主力商品であるOfficeですから、&lt;/p&gt;
&lt;p&gt;正直、田中(゜p゜)はオンライン上の機能とかにはあんまり着目してねーのですが、ライセンスのランクによっては、&lt;strong&gt;容量無制限になる&lt;/strong&gt;ので、ファイルサーバの代わりに使えば、&lt;strong&gt;ファイルサーバの維持コストが大きく削減できる可能性&lt;/strong&gt;があります。&lt;/p&gt;
&lt;p&gt;ファイルサーバって、容量たくさん必要なので、ハードウェアとしてのストレージたくさん必要で、お金かかるんですよね。&lt;/p&gt;
&lt;p&gt;ただ、これは&lt;strong&gt;AD同等の権限をO365側に持ってくるのが今はまだ難しく&lt;/strong&gt;、そこを補完するミドルウェアがたくさん出てるような状況です。&lt;br&gt;
これがキレイにO365側に統合されるようなことになれば、&lt;strong&gt;更に優位性が向上&lt;/strong&gt;するんじゃないかな、と思います。&lt;/p&gt;
&lt;h2 id=&#34;azureについて&#34;&gt;Azureについて&lt;/h2&gt;
&lt;p&gt;正直、田中(゜p゜)はパブリッククラウド&lt;strong&gt;単体のサービスで見た時のAzureはあんま好きじゃないです&lt;/strong&gt;。安定性は増してきたけど、遅いし、ユーザビリティも良くないし、PowerShellで管理できる範囲も限られてるし。(REST APIまでは見てないけど、もっと色々なことができるのかな？)&lt;/p&gt;
&lt;p&gt;それと、O365を最初にいじってみた時は、なんでAzureADなんかを噛ませなきゃいけないんだろうな、と思ってましたが、最近なんとなくMicrosoftの意図が分かりはじめました。&lt;br&gt;
Office365っつうコアなサービスをわざわざAzureADに紐付けようとしてるのは、理由があるんじゃないか、と田中(゜p゜)は思ったのです。&lt;/p&gt;
&lt;h2 id=&#34;azure-adって何&#34;&gt;Azure ADって何？&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;ADとAzureADは全くの別物&lt;/strong&gt;です。&lt;strong&gt;前者はLAN前提＋NTLM認証のサービス&lt;/strong&gt;なのに対し、後者は&lt;strong&gt;インターネット＋SAMLベース&lt;/strong&gt;のサービスです。どっちかというとADというよりADFSのインターネットサービス版、みたいな。&lt;br&gt;
AzureADでWindows10の認証を通しておけば、SAML連携しているインターネット上のサーバ達にもシングルサインオンできる仕組み。&lt;/p&gt;
&lt;p&gt;つまるところMicrosoftは今までのLAN前提のインフラ構成を、&lt;strong&gt;インターネットベースにしようとしてんだ&lt;/strong&gt;な、と。&lt;/p&gt;
&lt;p&gt;そうなると、認証はSAMLでいいとしても、&lt;strong&gt;ADの強みの一つであったポリシー管理はどうなるのか&lt;/strong&gt;な、と思いましたが、やはり&lt;a href=&#34;https://www.microsoft.com/ja-jp/microsoft-365/enterprise-mobility-security/microsoft-intune&#34;&gt;Microsoft Intune &lt;/a&gt;つうのを用意してやがりました。&lt;/p&gt;
&lt;p&gt;サラッといじってみたところ、&lt;strong&gt;現段階ではADのポリシーのようなきめ細やかな制御は難しい&lt;/strong&gt;ようですが、カスタムしてレジストリもいじれるようになってるし、インターフェイスとして組み込まれるのも時間の問題かな、という気がします。&lt;/p&gt;
&lt;p&gt;あとちょっと気軽に使うにはコストが高い気がしますが、&lt;strong&gt;ADとファイルサーバとLANを廃して、浮いたコストをIntuneのライセンス費に当てれば&lt;/strong&gt;、余裕でペイできそうな気がします。&lt;/p&gt;
&lt;p&gt;うーん。&lt;br&gt;
&lt;strong&gt;この提案、やってみたい。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/nw-pattern-of-enterprise/&#34;&gt;企業のネットワークアクセスパターン&lt;/a&gt;&lt;strong&gt;でも書いたように田中(゜p゜)は&lt;/strong&gt;クラウド使うためにLANに入らなければいけないのはナンセンス&lt;/strong&gt;だと思ってて、&lt;strong&gt;End To Endの認証が基本&lt;/strong&gt;だと思ってるんですが、&lt;strong&gt;AzureADとIntuneの組み合わせ&lt;/strong&gt;であれば&lt;strong&gt;認証もPCのポリシー管理もいけちゃう&lt;/strong&gt;よね、などと思ってます。&lt;/p&gt;
&lt;p&gt;とは言いつつも、Azure ADの権限管理も、Intuneのポリシー管理も、&lt;strong&gt;まだまだADに追いついてない&lt;/strong&gt;ようなので、&lt;strong&gt;既にADの資産を山ほど築いてる企業に取っては移行の敷居が高い&lt;/strong&gt;のだとは思いますが、ワクワクするようなソリューションだな、とは思いました。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;Office365の利点は、企業のライセンス管理コスト、アップグレードコストを削減できること。&lt;/li&gt;
&lt;li&gt;MicrosoftはAzure AD(＋Intune？)を、インターネット上のADとして展開するつもり&lt;/li&gt;
&lt;li&gt;Azure ADがキレイに実装されれば、ユーザはLANの呪縛から開放される。かもしれない。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ADって美味しいの？</title>
      <link>https://y2tanaka.github.io/git-pages/how-delicious-ad-is/</link>
      <pubDate>Fri, 04 Sep 2020 22:48:54 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-delicious-ad-is/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;美味しいの？ シリーズ第二弾です。&lt;br&gt;
ActiveDirectory(AD)ってITインフラエンジニアにとってどうなのよ、という話です。&lt;/p&gt;
&lt;p&gt;結論から言うと。&lt;br&gt;
**&lt;br&gt;
結構おいしいと思う。**&lt;br&gt;
**知っておいて損はないし、知ってればインフラ全体が見渡せる可能性がある。**&lt;/p&gt;
&lt;p&gt;AD単体で切り離してみると、山ほど機能があって、焦点がボケがちなのですが、田中の認識でADは&lt;strong&gt;Windows世界におけるユーザ・PC・サーバーの超便利管理ソフト&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;ポイントは以下の二点でしょうか。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ドメインに参加したユーザ、PC、サーバに対して強力なポリシー適用機能提供する。&lt;/li&gt;
&lt;li&gt;ユーザの属性情報をため込んでおき、リソース(サーバ)の認証機能を提供する&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;要するに、&lt;strong&gt;たくさんのサーバーやPCがあった場合に、管理がとても楽になり、工数(コスト)が削減できる&lt;/strong&gt;、ということです。&lt;/p&gt;
&lt;p&gt;これだけだとよくわからんと思うので、実際のケースで説明します。&lt;/p&gt;
&lt;h2 id=&#34;adがないとしぬケース&#34;&gt;ADがないとしぬケース&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;セキュリティ事故があり、PCの設定全部変えないと…。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;情報漏洩があり、USB禁止、パスワード厳しくしろ、となどと突然言われるのは日常茶飯事&lt;/li&gt;
&lt;li&gt;1台1台丁寧に丁寧に変えていかなければならない。何千台もあったらしぬ。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;ADならグループポリシーでボタン一発で解決。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;システムへのアクセス権限を、情報システム部門や営業などのメンバーで分けたい…。&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;システム一つ一つにユーザーとグループを登録していかなければならない。&lt;/li&gt;
&lt;li&gt;システムが多数あり、ユーザがたくさんいたらしぬ。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;ADならセキュリティグループにユーザ登録すれば一発解決&lt;!-- raw HTML omitted --&gt;。&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;オフィスに無線入れたので、PCの設定入れたい&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;証明書とか使う意識高い系設定なので、ユーザにやらせると絶対間違う…。&lt;/li&gt;
&lt;li&gt;PC何百台とあるので、管理者が1台1台丁寧に丁寧に変えていったらしぬ。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;ADならグループポリシーでボタン一発で解決。&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;それ以外にも、組織変更でアクセス権を一斉に変えたいとか、PCの設定を一斉に変えたいとか、山ほど要求あるので、この&lt;strong&gt;一斉変更のコスト(工数)を大きく下げられるのがADのメリットで&lt;/strong&gt;あり、動かしがたい優位性なわけです。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;!-- raw HTML omitted --&gt;そう、ADならね&lt;!-- raw HTML omitted --&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;とか言いたくなっちゃう。&lt;br&gt;
&lt;strong&gt;キレイに管理できるOSはWindowsに限る&lt;/strong&gt;けど…。&lt;/p&gt;
&lt;p&gt;このあたりの優位性については、&lt;strong&gt;すでにWindows2000の段階で確立されてた&lt;/strong&gt;はずで、あとの機能はだいたい拡張とかオマケだと田中(゜p゜)は思います。&lt;br&gt;
色々機能があって複雑に見えますけどね…。&lt;strong&gt;コスト削減の主要因はシンプル&lt;/strong&gt;なのです。&lt;/p&gt;
&lt;h2 id=&#34;とは言いつつも&#34;&gt;とは言いつつも&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;strong&gt;権限やポリシーというのは企業の組織の構造に深く関わってます。&lt;/strong&gt;&lt;br&gt;
すぐ思いつくのは、部署ごとにフォルダー作ってアクセス権管理したいとか、開発者や偉い人はPCで何でも使わせたいのでポリシー緩めたい、とか。&lt;/p&gt;
&lt;p&gt;ま、最初はそういう風に設計していくのでキレイなんですけどね。&lt;strong&gt;組織変更のたびにカオスが広がる&lt;/strong&gt;んですよね。&lt;br&gt;
ADを長く使ってるどの企業も、以下の構造はだいたいカオスです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;グループポリシー&lt;/li&gt;
&lt;li&gt;フォルダ構造とアクセス権&lt;/li&gt;
&lt;li&gt;セキュリティグループ&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;以下、&lt;strong&gt;田中(゜p゜)の妄想かもしれない悲劇&lt;/strong&gt;の例を紹介します。&lt;/p&gt;
&lt;h2 id=&#34;経年に伴う悲劇の例&#34;&gt;経年に伴う悲劇の例&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;凸凹社は部署ごとにフォルダとセキュリティグループを作成して、アクセス権を管理してました。そこに突然、&lt;strong&gt;部署統合、分割が社長から言い渡されました&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;セキュリティグループの中身は&lt;strong&gt;属人化して複雑に階層構造&lt;/strong&gt;になっており、かつフォルダの構造も同様の状態なので、どちらの部署に移せばいいのか、&lt;strong&gt;誰も判断できません&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;仕方ないので古いセキュリティグループを残し、新しいセキュリティグループに引っ越しました。&lt;/li&gt;
&lt;li&gt;ある日、&lt;strong&gt;情報漏洩事故が起こり、メディアに報道され、凸凹社の株価は大きく下がりました&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;犯行は内部の協力会社の人で、&lt;strong&gt;データをぶっこ抜いて競合他社に売り渡し&lt;/strong&gt;ていました。&lt;strong&gt;原因はお察し&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;ならどうするか理想論&#34;&gt;ならどうするか(理想論)&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;システム側だけではなく、全社的に&lt;strong&gt;どの「組織(グループ)」がどの「業務(システム)」を執り行い、どのような権限を持つべき&lt;/strong&gt;なのか、&lt;strong&gt;運用ポリシーを可視化&lt;/strong&gt;するしかないと思います。システムにしろフォルダにしろ、業務設計のマトリクスをベースにする等。&lt;/li&gt;
&lt;li&gt;ユーザに移管するとカオスが広がるので、&lt;strong&gt;可能な限り主管部門で運用した方が良い&lt;/strong&gt;です。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;棚卸ルールを定め、組織変更のタイミング等で捨てる、移動する処理も必要&lt;/strong&gt;です。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;理想論の部分については、実現できている企業は見たことないです。自分でやってみたいとは思います。&lt;br&gt;
このあたりの設計は運用コスト削減のキモだと思うのですが、&lt;strong&gt;AD屋は業務なんて知ったこっちゃない&lt;/strong&gt;ので&lt;strong&gt;大抵は組織変更一発でカオス&lt;/strong&gt;です。セキュリティ事故も起こります。&lt;/p&gt;
&lt;p&gt;なんだか後半はデメリットばかりになってしまいましたが、こうした経年カオスによるデメリットを差し引いても、&lt;strong&gt;ユーザ、権限、ポリシーを一括管理できるメリットはデカい&lt;/strong&gt;んですよねー。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ADは超便利な「ユーザ」「PC」「サーバー」管理ツールで、対象がたくさんあるほど大きくコスト削減になる。&lt;/li&gt;
&lt;li&gt;権限やグルーピングが企業の組織の構造と深く関わっているので、組織変更のたびにカオスが広がり、いずれセキュリティ事故になる。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>AI・ビックデータ・RPAって美味しいの？</title>
      <link>https://y2tanaka.github.io/git-pages/how-dericious-is-ai/</link>
      <pubDate>Fri, 04 Sep 2020 20:32:45 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-dericious-is-ai/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;美味しいの？シリーズの記念スべき第一弾。&lt;br&gt;
テーマが重くて既にしんどいけど、田中(゜p゜)ガンバル。&lt;/p&gt;
&lt;p&gt;「美味しい」の定義は、既にITインフラエンジニアに片足突っ込んでる人が、今から手がける価値があるか、という観点です。&lt;br&gt;
&lt;strong&gt;既にやってるよ、とか、学問として収めてきました！ なんて人は対象外&lt;/strong&gt;となります。&lt;/p&gt;
&lt;p&gt;率直に言いましょう。&lt;br&gt;
タイトルの技術要素について田中(゜p゜)は実体験などから&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;先進技術は銀の弾丸じゃないよ？&lt;/strong&gt;&lt;br&gt;
&lt;strong&gt;今からやるのはやめといたほうがいいんじゃね？&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;と思ってます。&lt;/p&gt;
&lt;h2 id=&#34;誰何と戦わなければならないか&#34;&gt;誰(何)と戦わなければならないか&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)は一部上場企業の研究開発部門と、GCPのベンチャーでそれぞれ以下の2つのケースで、AIとビックデータに携わるエンジニアの様子を見てきました.&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;どこかの国の機械学習の主席卒業者と統計学の専門家が何年かにわたって研究開発してた&lt;/li&gt;
&lt;li&gt;やる気も技術もある若者がGCPの備え付けの機械学習エンジンをマネタイズすべく、1年がかりで奮闘してた&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;結果どうなったかというと、&lt;strong&gt;(1)のチームは空中分解、(2)はマネタイズが難しく、ほぼPoC(概念検証)の段階でコケていました。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;あと田中(゜p゜)もベンチャー時代に自分でGCPのBigQueryとTableau(BIツール)で&lt;strong&gt;簡単にデータ分析できんじゃね&lt;/strong&gt;？ なんて考えて自分でやってみましたが&lt;strong&gt;正直激甘でしたわ&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;ゴミようなのデータの山から価値のある情報に意味付けしてくのに、学問レベルのデータ分析知識と、経営の知識が両方必要なんですわ。そんな人材、市場にゴロゴロいるわけねーです。&lt;/p&gt;
&lt;p&gt;つまるところ今の段階でマネタイズは難しいし、深い学習と学問の知識が必要なのだと思うのです。なので、将来的にビジネスに繋がるとしたら,&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;将来的にAIとビックデータで食っていくぞ、という覚悟で投資する企業にいる&lt;/li&gt;
&lt;li&gt;AIやビックデータについて、学問を修めている&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;というのが条件となります。&lt;br&gt;
現段階でここを見ているのはITインフラエンジニアの方でしょうから、&lt;strong&gt;おそらく両方満たしてない&lt;/strong&gt;んじゃないでしょうか。&lt;/p&gt;
&lt;p&gt;大体のところ、AI・ビックデータやりたいな、と思う企業が、素人を採用するとは思えないですし、もし入れて不断の努力で知識を手に入れたとしても、&lt;strong&gt;当たる確率は今のところ分からない&lt;/strong&gt;、というのが現状なのです。&lt;br&gt;
個人として、時間に対する投資が大きく、リターンが読めない状態なのかなー、と。&lt;/p&gt;
&lt;p&gt;それにこうした&lt;strong&gt;エンジニアは確保が難しいので、企業側としては英語の壁を乗り越えていってでも、グローバルの労働市場に手を出していく可能性&lt;/strong&gt;があります。実際、&lt;strong&gt;研究開発してたの半分以上が外人でした&lt;/strong&gt;しね。&lt;br&gt;
そうなった時に、闘う相手は誰ですか、という話もあります。&lt;/p&gt;
&lt;p&gt;なんで、&lt;strong&gt;ITインフラエンジニアが今からやるぞ！ というのはあまりオススメできません。&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&#34;rpaについて&#34;&gt;RPAについて&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;すいません。いらすとやでごまかしてますが、田中(゜p゜)はあんま知識無いです。&lt;br&gt;
タイトルに書いてしまったので無理やり書いてみます。「異論反論オブジェクション(古い)」お待ちしてます。&lt;/p&gt;
&lt;p&gt;RPAについて田中(゜p゜)は、人手でやってたExcelのコピペとかファイル操作を、ロボットがやってくれる、というものだと理解してます。&lt;br&gt;
浅あぃ理解っす・・・。&lt;/p&gt;
&lt;p&gt;で、企業でRPA運用してたの何度か見てましたが、まだ発展途上なのか、安定性に難があるのとイレギュラーな処理に対応しきれていないのがあり、&lt;strong&gt;自動化を担当した社員が何度も夜中にコールされてる&lt;/strong&gt;のを見ました。&lt;/p&gt;
&lt;p&gt;「RPA導入コスト＋イレギュラー対応コスト」と、「RPA入れなかった時のコスト」を比較した場合、&lt;strong&gt;果たして本当にコスト削減になったのだろうか&lt;/strong&gt;、などと考えてます。&lt;/p&gt;
&lt;p&gt;それと、&lt;strong&gt;そもそもその業務って無駄なものなんじゃないか&lt;/strong&gt;な、という疑問も残ります。&lt;br&gt;
昨今会計系アプリですら、ベストプラクティスに則ってERPクラウドに移行していくケースもでてきてますから、&lt;strong&gt;アプリに合わせて業務を変えていく&lt;/strong&gt;、という逆転の思考も必要なんじゃないかな、と思います。&lt;/p&gt;
&lt;p&gt;そうなった時、むりくり自動化しなきゃいけない業務ってベストプラクティスに入ってないんじゃない？なんて考えます。&lt;/p&gt;
&lt;p&gt;つまり、&lt;strong&gt;RPAはなんとなく過渡期の技術っぽい&lt;/strong&gt;。&lt;br&gt;
なんで流行ってるのかというと、わかりやすくコスト削減につながるので、担当者が上申を通しやすいからじゃないかな、と思います。&lt;/p&gt;
&lt;p&gt;よって、自信がないながらも、強くはオススメできない領域なのかな、と思います。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;AI・ビックデータはITインフラエンジニアが今からやるのはハードル高いし、リターンも不明確&lt;/li&gt;
&lt;li&gt;RPAは過渡期の技術っぽいので、強くはオススメできない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;…・専門家じゃないのに語るなよ、という内省はありますが、外側から見た時に、こういう視点もあるよ、という感じで生暖かく見守って下さい。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Windows10(OS)て美味しいの？</title>
      <link>https://y2tanaka.github.io/git-pages/how-dericious-is-win10/</link>
      <pubDate>Fri, 04 Sep 2020 20:29:57 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/how-dericious-is-win10/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;美味しいの？ シリーズ第三弾。&lt;br&gt;
なまくら刀で田中(゜p゜)がWindows10に切り込みます。&lt;/p&gt;
&lt;p&gt;ITインフラエンジニアにとって、Windows10は美味しいのか？&lt;br&gt;
結論いうと、&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;特段カッコいいわけじゃないけど、エンタープライズ用途ならやるしかないんじゃない？&lt;/strong&gt;&lt;br&gt;
**マトモにADとOfficeが動くのはWindows10しかないし。&lt;br&gt;
**&lt;br&gt;
という感じです。&lt;br&gt;
純粋なOSの性能だけでいったら、Macとか、Ubuntuのディストリビューションとかでも軽くて見た目が良い物はありますし。&lt;/p&gt;
&lt;p&gt;もちろん動画や、画像などをフルに取り扱うお仕事の場合は、Mac中心なのだと思いますが、とりあえずそれはさておき多くの企業がWindows10を使ってる理由を書きます。&lt;/p&gt;
&lt;h2 id=&#34;それでもwindows10を使う理由&#34;&gt;それでもWindows10を使う理由&lt;/h2&gt;
&lt;p&gt;先に、「&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/how-delicious-ad-is/&#34;&gt;ADって美味しいの？&lt;/a&gt;」でも取り上げましたが、PCの集中管理というのは管理コストを大きく下げられるので、それがマトモに動くだけで、&lt;strong&gt;コスト削減の観点からは大きな価値があります&lt;/strong&gt;。※Macにもドメイン入るツールありますが、ポリシー管理は中途半端です。&lt;/p&gt;
&lt;p&gt;それと、これが最もコアな理由だと思いますが、&lt;strong&gt;Officeがマトモに動くのもWindow10&lt;/strong&gt;です。&lt;br&gt;
田中(゜p゜)は&lt;strong&gt;Microsoftで最も価値のある製品はOffice&lt;/strong&gt;だと思ってまして、ビジネス用途では比肩するもののないソフトウェアだと思ってます。&lt;/p&gt;
&lt;p&gt;ITエンジニア以外の人々の日々のお仕事はExcelや、Wordや、PowerPointでドキュメントを作成し、企業間で共有することなのだと思いますが、&lt;strong&gt;これらの使い勝手により生産性が大きく変わる&lt;/strong&gt;のです。&lt;/p&gt;
&lt;p&gt;試しに田中(゜p゜)はStarOfficeとかGSuiteとかのツールで日々の業務を代替してみましたが、ぶっちゃけ30%以上生産性が下がります。&lt;/p&gt;
&lt;p&gt;もっと言うと、代替ソフトだと&lt;strong&gt;MS Officeのクオリティが再現できなくて、客に出せない&lt;/strong&gt;。&lt;br&gt;
Office on Macも試しましたが、フォントと描画機能の限界で、結局Windows10のPCも買ってもらいました。&lt;/p&gt;
&lt;p&gt;なので、企業がWindows10を使う理由は、&lt;strong&gt;ADによる管理コストの削減と、Officeによる生産性向上(維持)のため&lt;/strong&gt;だと、理解してます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;個人ユース？&lt;/strong&gt;&lt;br&gt;
なんだっていいんじゃないですかね。リンゴマークのアレ、動きが軽くてカッコいいし。こだわりなければ会社と同じのWinndows10なら習熟コストいらんし。&lt;br&gt;
&lt;strong&gt;ちなみに田中(゜p゜)はLubuntu&lt;/strong&gt;ですけど、&lt;/p&gt;
&lt;p&gt;ヤフオクで2万とかでエンタープライズ向けのPC買ってきて、ちょろっとカスタマイズすれば、Mac並の軽さとデスクトップの見た目が手に入るんすよ(^p^)&lt;br&gt;
家で嫌々Office使うときは、VMPlayer上のWindows10動かしてますが、それは面倒くさい。&lt;/p&gt;
&lt;h2 id=&#34;勘弁して欲しいポイント&#34;&gt;勘弁して欲しいポイント&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;正直、Windows10の使い勝手とかは別に大きな不具合はないし気にもならないのですが、更新ポリシーだけはしんどい。&lt;br&gt;
1年に2回メジャーバージョンアップで、1年半経つとサポート切れとか、&lt;strong&gt;運用担当者に対する嫌がらせとしか思えない&lt;/strong&gt;。LTSB版は機能制限あるし。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)が対応したのは1603→1709の時だったですが、結局リアルタイム配布の際のネットワークトラフィックは技術的になんとかなったものの、&lt;strong&gt;2時間くらいエンドユーザの業務が止まるってんで許容されず、予備PCを100台くらいかき集めてローテーションで1500台対応&lt;/strong&gt;しました。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;それを1年半毎に、とかころす気か&lt;/strong&gt;、と思いましたよ。&lt;br&gt;
その後転職してしまったので、今どうしてるか知りませんが。1年半に一度のお祭りなのかなぁ。&lt;br&gt;
このあたりの上手いやり方は、田中(゜p゜)はまだよく分かりません。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;エンタープライズ用途なら、ADによる管理コスト削減と、Officeの生産性からWindows10一択&lt;/li&gt;
&lt;li&gt;アップデートポリシーは、運用担当者にとって嫌がらせ。1年半に一度の嫌な意味での祭り。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>お世話になったサイトたち</title>
      <link>https://y2tanaka.github.io/git-pages/helpful-site/</link>
      <pubDate>Fri, 04 Sep 2020 18:26:47 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/helpful-site/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ITインフラ関連で、お世話になったサイトを紹介しておきます。&lt;br&gt;
正直、実装で困ったらこのあたり見とけば間違いない。&lt;/p&gt;
&lt;p&gt;これらのサイトの中身が全て実装に落とせるレベルにあれば、田中(゜p゜)なんて足元にも及ばないエンジニア様です。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.infraexpert.com/&#34;&gt;&lt;strong&gt;ネットワークエンジニアとして&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
ネットワークの構成要素とか記憶があやふやになったらここ参照してます。というか、Googleでネットワークの技術要素調べたらまずここが出てくるんじゃないかな？ 情報量ハンパない。&lt;br&gt;
Cisco中心ですけど、腐ってもデファクトスタンダードだからね。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.server-world.info/&#34;&gt;&lt;strong&gt;server-world&lt;/strong&gt;&lt;br&gt;
&lt;/a&gt; 同じく、サーバーの技術要素について恐ろしいほどの情報量が掲載されているサイト。&lt;br&gt;
Windows、Linux、各バージョン、各ディストリビューション勢揃いしているのに敬服。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;http://aws.clouddesignpattern.org/index.php/%E3%83%A1%E3%82%A4%E3%83%B3%E3%83%9A%E3%83%BC%E3%82%B8&#34;&gt;&lt;strong&gt;AWSクラウドデザインパターン&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
正直、エンタープライズ系でやりたいことがだいたい書いてある。&lt;br&gt;
田中(゜P゜)が最初AWS使った時は、ここに書いてあることそのままやりました。AzureとかGCPにもこういうサイトがあったらなぁ。&lt;br&gt;
AWSの公式ドキュメントもそうですが、サービス単位で分断されてて、一連の流れとしてまとまってないんですよね。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://www.nic.ad.jp/ja/tech/rfc-jp-links.html&#34;&gt;&lt;strong&gt;JPNIC RFC日本語訳リンク集&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
ネットワーク屋として、他領域との責任分界点でモメた時によく参照してました。「アナタのシステム、RFCの必須要件満たしてませんよ？」は殺し文句。&lt;/p&gt;
&lt;p&gt;&lt;a href=&#34;https://ja.stackoverflow.com/&#34;&gt;&lt;strong&gt;StackOverflow&lt;/strong&gt;&lt;/a&gt;&lt;br&gt;
プログラミングで行き詰まった時によく覗くサイト。エンジニアのフォーラムです。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;http://www.shippai.org/fkd/index.php&#34;&gt;&lt;!-- raw HTML omitted --&gt;失敗知識データベース&lt;!-- raw HTML omitted --&gt;&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
人間は失敗から学び、成長するものだと思いますが、企業における失敗事例を広範囲にわたって集めたサイト。どちらかというと技術的な失敗というより、ステークホルダー(関係者)間の調整に上手くいってないケース多いです。コミュニケーション、大切。&lt;br&gt;
あまり更新されてないのが悲しい。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.wantedly.com/companies/trash-briefing/feed&#34;&gt;BAMV合同会社のSES関連記事&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
ちょっと異色です。&lt;br&gt;
田中(゜p゜)はSES企業に努めてますが、その問題点があからさまに書いてあるサイト。SES企業に勤めてる人は一度見たほうが良いです。業界の構造がとても良く分かります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;&lt;a href=&#34;https://www.irasutoya.com/&#34;&gt;いらすとや&lt;/a&gt;&lt;/strong&gt;&lt;br&gt;
言わずとしれたフリー素材サイト(笑)&lt;br&gt;
記事、ブログのネタに困った時、隙間を埋めるのに大変重宝しております。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>トラブった時にすべきこと</title>
      <link>https://y2tanaka.github.io/git-pages/things-have-to-do-while-trouble/</link>
      <pubDate>Fri, 04 Sep 2020 16:31:42 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/things-have-to-do-while-trouble/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;すいません。この記事はタイトル決めてから中身詰め込んでるんですけど、よく考えたら「トラブル」の定義や状況がたくさんありすぎて、絞り切れないことに気づきました。orz&lt;/p&gt;
&lt;p&gt;ので、ITインフラ観点で、なるべく汎用的に使えるコツみたいなものを書いておきます。&lt;/p&gt;
&lt;h2 id=&#34;基本的な心がけ&#34;&gt;基本的な心がけ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;トリガー引いたのが自分だったとしても、&lt;strong&gt;隠し立てはやめましょう&lt;/strong&gt;。被害拡大したら目もあてられません。田中の過去の経験からいうと、隠していたのがバレた時のダメージの方がはるかに大きいです。&lt;/li&gt;
&lt;li&gt;やっちゃったことよりも、&lt;strong&gt;今後どうやってトラブルを起こさないようにするか、という方が大切&lt;/strong&gt;です。&lt;/li&gt;
&lt;li&gt;契約は法人同士でしてます。個人の責任なんてないので、&lt;strong&gt;会社の責任だと割りきって、トラブルを楽しみ&lt;/strong&gt;ましょう。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;偉い人を巻き込んで、責任を押し付けましょう&lt;/strong&gt;。その分現場でハンドリングする余力が生まれます。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;事前準備&#34;&gt;事前準備&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;「想定される事象」「影響範囲」「対応」「報告経路」をリストアップしておく。&lt;/li&gt;
&lt;li&gt;構築フェーズだったら「リスク管理表」だし、運用だったら「監視対応一覧」「障害時対応一覧」みたいな名前になると思うけど、企業によって異なる。&lt;/li&gt;
&lt;li&gt;「リスト」は関係者間で合意しておいたほうが良い。&lt;/li&gt;
&lt;li&gt;想定外の事象について報告経路を決めておく。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;トラブったら&#34;&gt;トラブったら&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;事前準備の「リスト」の範囲内だったら、リストに従って粛々と対応。&lt;/li&gt;
&lt;li&gt;想定外の事象については、サービス利用ユーザへの影響の有無、影響範囲を確認。&lt;/li&gt;
&lt;li&gt;報告経路に従って、偉い人に報告。影響が大きいほど早くした方が良い。一報を入れた後に、「○○分ごとに連絡入れます」とか、定期報告をその場で定義しておく。&lt;/li&gt;
&lt;li&gt;役割分担の定義。「コントロール役」「報告役」「原因調査役」を分けたほうが良い。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;調査のコツ&#34;&gt;調査のコツ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;原因調査役が調査に集中できるよう、配慮する。&lt;/li&gt;
&lt;li&gt;全体構成図を印刷、もしくはホワイトボードに書き、影響範囲、データフローを書き込んでみる。&lt;/li&gt;
&lt;li&gt;対応内容を時系列で記録する。後の報告書作成時も役立つ。&lt;br&gt;
チャットツールを使って、関係者に展開すれば、報告と記録が同時にできる。&lt;/li&gt;
&lt;li&gt;クライアントに近い部分から調査を進めていき、被疑箇所を潰していく。&lt;/li&gt;
&lt;li&gt;被疑箇所にたどり着いたら原因特定。&lt;/li&gt;
&lt;li&gt;被疑箇所がサーバ等ならばログでエラーを確認。エラーの意味がわからない場合はGoogle先生にブチ込む。英語力があるほど有利。&lt;/li&gt;
&lt;li&gt;原因が特定できたら、復旧見込みを報告。復旧後、再度報告。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;トラブル後対応&#34;&gt;トラブル後対応&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;必要に応じて報告書作成。大体のフォーマットは「冒頭のお詫び文(笑)」「時系列」「原因」「是正策」。トラブルの大きさにより、偉い人、営業と相談したほうが良い。&lt;/li&gt;
&lt;li&gt;事前準備に記載した「リスト」にトラブル時にどうするのか記載し、次回のトラブルの際のルールを定めておく。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;んんん。やはりどのフェーズ、どのペルソナをターゲットにしているのか不明確になってしまった。次の記事では、ケーススタディ書こうかな。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>プロジェクトの愉快な仲間たち</title>
      <link>https://y2tanaka.github.io/git-pages/funny-coworkers/</link>
      <pubDate>Thu, 03 Sep 2020 06:34:01 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/funny-coworkers/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ITインフラのプロジェクトが始まった時に参加してくる関係者と、田中(゜p゜)の持ってるイメージを適当に書いてみました。&lt;/p&gt;
&lt;p&gt;記事の中でこの仲間たちに対するコメントありますが、田中(゜p゜)はこういうステレオタイプをイメージしているのだと思って下さい。&lt;/p&gt;
&lt;h2 id=&#34;発注者側お客様&#34;&gt;発注者側(お客様)&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;役員クラス(プロジェクト責任者)&lt;/strong&gt;&lt;br&gt;
プロジェクト内の絶対権力者。いわゆる受注者側のハイタッチ(上の方でゴニョゴニョやって丸め込む、丸め込まれる)の影の首謀者。&lt;strong&gt;大抵の意思決定権はここにあるので、パスがあるとプロジェクト運営がとても楽&lt;/strong&gt;。技術を半端にかじってると、面倒なことを言ってくることも多い。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;情報システム部門リーダー(プロジェクトマネージャ)&lt;/strong&gt;&lt;br&gt;
いわゆる中間管理職。田中(゜p゜)はこのポジションだったことありますが、イケてない受注者、メンバーの暴走、上からの圧力、エンドユーザの板挟みになって苦労するポジション。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;情報システム部門メンバー&lt;/strong&gt;&lt;br&gt;
たいてい技術オタクか、やる気がないかのどちらか。予算に絡んでないので、唐突にプロジェクトに関係ないことにこだわって話を長引かせたりとか、実現の見込みない突拍子もないアイデアを持ちだして&lt;strong&gt;PMを困らせる&lt;/strong&gt;ことが多い。&lt;br&gt;
このレイヤで引っかかったら、すぐその上の情報システム部門リーダーににエスカレーションして丸め込むのが吉。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;コンサルタント&lt;/strong&gt;&lt;br&gt;
出来もしないことをいけしゃあしゃあと客の経営層に差し込んでしまう&lt;strong&gt;いけ好かない連中&lt;/strong&gt;。ITインフラエンジニアとは&lt;strong&gt;そもそも使う言葉が違う&lt;/strong&gt;ので、&lt;strong&gt;外人だと思うのが吉&lt;/strong&gt;。ちなみに戦略コンサルタントはITインフラ案件なんてめったに出てこないので、たいてい見るのはITコンサルタント。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PMO&lt;/strong&gt;&lt;br&gt;
お客様側にいて、進捗会議とか、ステアリングコミッティとかに出てきて、プロジェクトのあるべき姿とかについて&lt;strong&gt;嫌な意味でありがたいコメントをくれる&lt;/strong&gt;方。上記のコンサルタントがやったりすると、ウザさが更に増す。&lt;/p&gt;
&lt;h2 id=&#34;受注者側&#34;&gt;受注者側&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;プロジェクト責任者&lt;br&gt;
** PMの上にいる偉い人。PMのラインマネージャであることが多い。大規模案件だと役員クラス担当となる。この人もハイタッチの首謀者。プロジェクトのキックオフと受入審査は、発注者側と受注者側の責任者が&lt;/strong&gt;シャンシャンで終われることがプロジェクト成功の要因**となる。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;プロジェクトマネージャ&lt;/strong&gt;&lt;br&gt;
プロジェクトの成否に関わるキーパーソン。色々な能力が要求されるが、要するにこの&lt;strong&gt;愉快な仲間たちを上手く取りまとめ(ステークホルダマネジメント)てゴールに向かう&lt;/strong&gt;のがミッション。あと、意思決定力、、技術力、交渉力、予算管理力、その他諸々の総合力が要求される。&lt;br&gt;
&lt;strong&gt;この人に能力とやる気がないとプロジェクトはしぬ。&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PM補佐(PMO)&lt;/strong&gt;&lt;br&gt;
プロジェクトマネージャの下にいて、プロジェクト管理の事務作業を手伝ったりしてる。会社によってはこのポジションをPMOと言ったりすることもあるようだ。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;品質管理PMO&lt;br&gt;
** ごく&lt;/strong&gt;形式的に**プロジェクトの進捗や課題やリスクやコストなどを見て、プロジェクトのあるべき姿とかについて嫌な意味でありがたいコメントをくれる方々。実際はこの人達がお墨付き出した案件も炎上するし、責任取ってくれたりはしないので、&lt;strong&gt;時間の無駄&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;プロジェクトリーダ&lt;/strong&gt;&lt;br&gt;
だいたい5〜10名ほどのメンバーを取りまとめている長。いわゆる中間管理職で、プロマネ経由のお客様の無茶振りと、&lt;strong&gt;メンバーの暴走 or 怠惰のために苦労&lt;/strong&gt;する。人間的にもこなれた人が多い印象。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;プロジェクトメンバー&lt;/strong&gt;&lt;br&gt;
大抵は技術大好きっ子か、やる気のないおじさん。説明や、資料作りが苦手で、**翻訳が必要になるケースがままある。**間違えて客先の情報システムメンバーとウマがあったりすると、会議がひどく長引いたり、後始末に困ることが多い。&lt;br&gt;
内訳はネットワークエンジニア、サーバーエンジニア、PCエンジニア。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ネットワークエンジニア&lt;/strong&gt;&lt;br&gt;
概念図を書いてきてね、と言っても、&lt;strong&gt;必ず物理の機器を入れちゃう&lt;/strong&gt;お茶目さん。VisualStudio大好きだが、要約してパワポ化したりする気は一切ないので、客に説明する時に困る。VSDなんて普通入れてねーし。尚、田中(゜p゜)はパワポで物理構成図書いたことあるけど&lt;strong&gt;しんだ&lt;/strong&gt;。&lt;br&gt;
客との距離が相当ある技術領域だが、専門用語から抜けられないので、基本的には何を言ってるのかよく分からない。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;サーバエンジニア&lt;/strong&gt;&lt;br&gt;
プロジェクトが大きくなればなるほど&lt;strong&gt;分裂、分業して増えていく不思議な存在&lt;/strong&gt;。知ってるだけで「セキュリティ担当」「AD担当」「グループウェア担当」「ユニファイドコミュニケーション担当」「キッティング担当」「サーバー設定担当」「認証基盤担当」「仮想基盤担当」「共通基盤担当」「クラウド担当」「DB担当」「WEBサーバ担当」「ストレージ担当」「運用基盤担当」等々。&lt;br&gt;
この人達が&lt;strong&gt;謎の用語を使ってお互いの責任分界点で譲り合わない様はまさに地獄&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCエンジニア&lt;/strong&gt;&lt;br&gt;
何故か職種としてあまり出てこない不幸な人達。ゴーストツールを使ってPCを量産するのが主なお仕事。稀にADの端末側ポリシーを決めてたりすることがある。&lt;/p&gt;
&lt;h2 id=&#34;協力会社さん達&#34;&gt;協力会社さん達&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;データセンター担当&lt;/strong&gt;&lt;br&gt;
データセンター構築の際に、スケジュールやラックの仕様、回線の引き込みについて調整する人。構築時の担当はいわゆるいい人が多いが、データセンターの運用ルールには厳しく、融通が効かない。運用フェーズになると、オペレーター出てくるが、夜間に緊急入館すると、上下スウェットで出迎えてくれたりする。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ファシリティ担当&lt;/strong&gt;&lt;br&gt;
サーバーのラッキングやネットワークの配線を手伝ってくれる人達。きちんと指示すればきちんとやってくれるが、適当に依頼しても気を利かせてくれたりはしない。あと、作業時間にうるさく、なかなか作業に融通が効かない。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ディストリビュータ/メーカー担当&lt;/strong&gt;&lt;br&gt;
本当に取り扱っている機器のことしか知らなかったりするので、他メーカーの比較表だったり、ユーザーのニーズを聞いたり、上流工程にからんだことを聞いても大抵が&lt;strong&gt;時間の無駄&lt;/strong&gt;。素直に機器とサポート権を買うだけだと思って付き合ったほうが気が楽。&lt;br&gt;
また、機器や製品が納期通りに納められたらラッキーだと思い、遅れることをを予め計画しておかないと痛い目にあう。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;回線事業者&lt;/strong&gt;&lt;br&gt;
営業はとても調子が良く、&lt;strong&gt;気軽な気持ちで契約を迫ってくる&lt;/strong&gt;が、実際長期の契約になるのでスゴイ金額になる。また、エンタープライズ担当しているエンジニアはほぼ、確実に、技術面、管理面ともにイケてないのでとても苦労する。&lt;br&gt;
&lt;strong&gt;回線の納期はたいてい鯖を読んでる&lt;/strong&gt;ので、「実際どうなの？」などと聞いてみるとか、上の方から圧力かけて納期の短縮を図るのがポイント。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;スマホ担当&lt;/strong&gt;&lt;br&gt;
回線業者とセットになってMDM等のサービスを売ったり作ったりする存在。&lt;strong&gt;何故か回線業者よりもさらにキラキラしたことを言ってくる&lt;/strong&gt;が、実際は売ってるサービスの仕様に縛られ、ユーザには息苦しいサービスしか提供できない。&lt;br&gt;
大量のスマホを納期までに収めるのがメインミッション。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>良いネットワークエンジニアとは</title>
      <link>https://y2tanaka.github.io/git-pages/good-nw-engineer/</link>
      <pubDate>Thu, 03 Sep 2020 04:49:56 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/good-nw-engineer/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;em&gt;&lt;a href=&#34;https://www.irasutoya.com/&#34;&gt;いらすとや&lt;/a&gt;さんで&lt;strong&gt;とても不穏な画像見つけた&lt;/strong&gt;ので貼ってみました。&lt;/em&gt;&lt;/p&gt;
&lt;p&gt;ループガードがなかったころは、&lt;strong&gt;これでネットワーク全体が死ぬ&lt;/strong&gt;とか結構あったなぁ。あとループガード実装してる&lt;strong&gt;HUBが壊れてブロードキャストストームとか気絶した&lt;/strong&gt;なぁ。&lt;/p&gt;
&lt;p&gt;回想から本題に戻ります。&lt;br&gt;
田中(゜p゜)はいちおうネットワーク屋出自だし、PMとしてネットワーク屋さん、回線事業者さんと付き合うことも多いので、良いネットワークエンジニアの条件について書いてみます。&lt;/p&gt;
&lt;p&gt;ちなみに田中は回線事業者、ISPに居たことはないので、やっぱり&lt;strong&gt;エンタープライズ系の観点&lt;/strong&gt;となります。&lt;/p&gt;
&lt;h2 id=&#34;ネットワークエンジニアの実情&#34;&gt;ネットワークエンジニアの実情&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;大抵の&lt;strong&gt;SIer&lt;/strong&gt;でネットワーク屋、サーバ屋は「裏方」であり、&lt;strong&gt;エース級の人材は投入されない&lt;/strong&gt;。よってアレな人が多い。&lt;/li&gt;
&lt;li&gt;ネットワーク構築を本業とする企業では、だいたい約2割が良いエンジニアであり、他6割は普通、残り2割はアレである。&lt;/li&gt;
&lt;li&gt;回線事業者、ISP(Internet Service Provider)側のコアネットワークはビジネスの根幹なので、&lt;strong&gt;次元の違うエンジニアがいる&lt;/strong&gt;。ただし、表には出てこない。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;システムが分かってネットワークが分かる人材は超貴重&lt;/strong&gt;なので、個人的にでもパスを持っておくべし&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;良いネットワークエンジニアとは&#34;&gt;良いネットワークエンジニアとは&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;コストに対する意識がある&lt;!-- raw HTML omitted --&gt;。※重要。本サイトの別ページに飛びます。&lt;/li&gt;
&lt;li&gt;システム(サーバー)とクライアントまでを繋がる仕組みを作るのがネットワークなので、それ以外知らない、と言うのはだいたいイケていない。逆がイケているエンジニア。&lt;/li&gt;
&lt;li&gt;システムが動かない時に&lt;strong&gt;真っ先にネットワークのせいにされる損な役割&lt;/strong&gt;だが、そこでロジカルに押し返せる。プログラマと違い、知らん機器が関係する難しさがそこにはある。下の図参照。&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;h2 id=&#34;具体的には&#34;&gt;具体的には&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;切り分けの順番を知っている。まずPCから大きな方へ上流をたどる。&lt;/li&gt;
&lt;li&gt;プロトコル、経路の構成、回線のSLAのおおよその理解&lt;/li&gt;
&lt;li&gt;Wireshark、Tcpdumpでプロトコルのフローを読める。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;RFCを読んで、必須、推奨要件を理解&lt;/strong&gt;できる。&lt;/li&gt;
&lt;li&gt;トラフィックを計測して、機器のせいでないことを証明できる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「&lt;strong&gt;オメーのシステムRFCに従ってねーじゃん！ このパケット見ろや！&lt;/strong&gt;」もしくは「パケットは正常ですが、帯域食いつぶしてますね。回線は&lt;strong&gt;あなたが勝手に契約したベストエフォートタイプなんで知らんですそんなの&lt;/strong&gt;」と言うのが大体のゴール。&lt;/p&gt;
&lt;p&gt;ちなみにメーカーの機器やアプライアンスは、&lt;strong&gt;RFCの独自の解釈とか、実装漏れにより、他の機器とうまく通信できない(＝相性)なんてのはザラにある&lt;/strong&gt;ということを認識しておいた方が良いです。&lt;/p&gt;
&lt;p&gt;「なんか分からんけど、こういう状況でエラー起きます」と言うのと「このパケットの挙動って不具合ですよね」と言うのでは、解決のスピードが天と地ほど違います。&lt;/p&gt;
&lt;h2 id=&#34;回線事業者との付き合い方&#34;&gt;回線事業者との付き合い方&lt;/h2&gt;
&lt;p&gt;ITインフラ運用における&lt;strong&gt;回線コストって非常に重たく&lt;/strong&gt;、コントロールできると幅が広がるため、参考までに書いておきます。これも良いネットワーク屋の条件かと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;一度専用線を入れてしまうと、移行はメチャクチャ大変で抜けづらいので、&lt;strong&gt;回線の費用だけで十分儲かる&lt;/strong&gt;。よって回線キャリアはあの手この手の特攻価格で回線を入れようと画策してくる。&lt;/li&gt;
&lt;li&gt;名前の知れた大手企業を相手にする際であれば、さらにその傾向は顕著。エース級の営業が付く。&lt;/li&gt;
&lt;li&gt;反対に中小企業向け営業とか、導入後のアカウント営業は大抵イケていない。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;田中(゜p゜)は、設計の工夫でInternetVPNのみで品質を確保する方がカッコ良くて好きなので、&lt;strong&gt;回線キャリア営業からは嫌われてる&lt;/strong&gt;と思います。&lt;/p&gt;
&lt;p&gt;知恵と工夫を凝らして、品質のイマイチな回線から、&lt;strong&gt;設計で性能と安定性を引っ張りだすのが良いネットワークエンジニア&lt;/strong&gt;なのかな、と思ってます。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;システムとPCが分かるネットワークエンジニアになるべし。&lt;/li&gt;
&lt;li&gt;ネットワークのせいにされた際に、ロジカルに反撃できる手段を身に着けよう&lt;/li&gt;
&lt;li&gt;回線キャリアのコストは重たいので、知恵を使って品質とコストのバランスを取れるようになるべし。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>コード(プログラム)書く必要ってあるの？</title>
      <link>https://y2tanaka.github.io/git-pages/necessity-of-program/</link>
      <pubDate>Thu, 03 Sep 2020 02:43:07 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/necessity-of-program/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ITインフラエンジニアなのにコードなんて書く必要ありますか？&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;結論： あるでしょ！！&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;いや、時と場合に応じてですけど。&lt;br&gt;
ただ、&lt;strong&gt;選択肢として持っておかなければならないスキル&lt;/strong&gt;だと田中（゜P゜）は思います。できなくても別にいいけど「必要となった時にできない」では市場価値下がる一方じゃないかなぁ。&lt;/p&gt;
&lt;p&gt;なぜコードを書くかというと、「&lt;strong&gt;人手でやっていた作業の自動化＝コスト削減&lt;/strong&gt;」だからです。&lt;br&gt;
先の記事で書いたように、&lt;strong&gt;経営の人がITインフラに期待するのはコストの削減&lt;/strong&gt;ですから、市場価値にも直結するスキルなのかな、と田中（゜P゜）は思ってます。&lt;/p&gt;
&lt;p&gt;また、自動化のためのスクリプト等を作成するんじゃなくても、OSやアプライアンスの設定ファイルや、変更のためのコマンド実行には、ごくごく&lt;strong&gt;基礎的なプログラミングの知識が必要&lt;/strong&gt;となります。&lt;br&gt;
あと単純な話、&lt;strong&gt;GUIでマウス使ってたくさんの設定するの時間かかるし、ミスも怖いし&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;コードの知識が必要となる場合を簡単にまとめました。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;ITインフラの運用の自動化&lt;/li&gt;
&lt;li&gt;Linuxをベースとしたシステムの構築/運用&lt;/li&gt;
&lt;li&gt;クラウドで大規模なインフラを構築/運用する&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(&lt;strong&gt;1)について。&lt;/strong&gt;&lt;br&gt;
たとえ話、ジョブ管理ツールにWindowsやLinuxの再起動コマンドを仕込みたいなんて場合は当然必要ですし、単純な話、他部署に発行されたアカウント情報からADの登録用のコマンド群を生成するのに必要だったりします。&lt;/p&gt;
&lt;p&gt;田中(゜p゜)の過去の経験だと、&lt;strong&gt;ExcelのVBAでマクロ組まれてて、ボタン押すと情報システム部門内で必要なアカウント登録コマンドが一式出力される&lt;/strong&gt;、みたいなのをよく見ましたが、これだって立派なプログラミングだと思ってます。&lt;br&gt;
というか、&lt;strong&gt;マクロ職人は部署内ですげー重宝&lt;/strong&gt;されてました。属人化の危険性あるんですけどね。&lt;/p&gt;
&lt;p&gt;それと、余談だしあまりおススメできないですが、WBSをExcelでやってる企業なんかだと、マクロで集計だったり図形描画していたケースもありました。印刷の都合上、ExcelのWBSも必要悪なんだと思ってましたが。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;(2)について&lt;/strong&gt;。&lt;br&gt;
Linuxベースのシステムは、よっぽどのことがない限りCLIで運用するので、バッチや設定ファイル作成するのにも、&lt;strong&gt;簡単なプログラミングの知識がないとしんどい&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;Webサーバの膨大なログファイルの中から指定した条件のログを見つけ出すのに、awkでフィルタかけたりとか。&lt;/p&gt;
&lt;p&gt;**(3)について。&lt;br&gt;
** これが今後の本命なんじゃないかと思いますが。代表的なパブリッククラウド(AWS、Azure、GCP)はクライアントOSで叩くコマンドセットか、HTTPS(Web)でリクエストするREST APIを備えていて、&lt;strong&gt;ITインフラの管理をプログラムに組み込める&lt;/strong&gt;のです。&lt;/p&gt;
&lt;p&gt;いわゆるinfrastructure as codeてやつですね。&lt;br&gt;
メタ情報ブッこめば、OSの設定すら自動化できます。&lt;/p&gt;
&lt;p&gt;すると何が起こるか。&lt;br&gt;
どこかの記事で、AWSのCloudFormationとAnsibleの組み合わせで、&lt;strong&gt;プログラムの開発環境の構築期間が1/100近くまで圧縮できた&lt;/strong&gt;という話はしたと思います。&lt;/p&gt;
&lt;p&gt;また極端な例、クラウドのVM(仮想マシン)の費用は起動していた時間の比例するので、営業時間外(20:00～08:00)はサーバ止めとく、みたいなバッチ流せば、&lt;strong&gt;サーバの運用コストが半分&lt;/strong&gt;で済みます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;要は構築の観点でも、運用の観点でもコスト削減に大きく貢献できる&lt;/strong&gt;のですよ。&lt;/p&gt;
&lt;p&gt;また、田中(゜p゜)はプライベートクラウド好きではないですが、とにかくCLI、APIでできることが少ないので、自動化の幅も少ないのです。コストも高いし、さっさと廃れてしまった方が良いと勝手に思ってます。&lt;/p&gt;
&lt;h2 id=&#34;田中pはどこまでやれんのか&#34;&gt;田中(゜p゜)はどこまでやれんのか&lt;/h2&gt;
&lt;p&gt;余談になりますが、田中(゜p゜)が使える言語は以下です。&lt;br&gt;
※プログラミング言語じゃないものも交じってるのは百も承知です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;awk&lt;/li&gt;
&lt;li&gt;CSS&lt;/li&gt;
&lt;li&gt;Go&lt;/li&gt;
&lt;li&gt;HTML&lt;/li&gt;
&lt;li&gt;Javascript&lt;/li&gt;
&lt;li&gt;Perl&lt;/li&gt;
&lt;li&gt;Python&lt;/li&gt;
&lt;li&gt;PowerShell&lt;/li&gt;
&lt;li&gt;SQL&lt;/li&gt;
&lt;li&gt;XML&lt;/li&gt;
&lt;li&gt;YAML&lt;/li&gt;
&lt;li&gt;シェルスクリプト(Bash)&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;走りは、2000年頃、Perlで自分のサイトの掲示板を組んでたことかな。&lt;br&gt;
だいたいはバッチなどの自動化系で必要な言語ですけど、SQLは設定やログをDBに放り込んでる情報系サーバが多くて、ごく基礎的な構文書ける、程度かなぁ。&lt;/p&gt;
&lt;p&gt;プログラマのお仕事も若干やってみたりしましたが、言語を知ってるだけじゃダメでした。生産性向上のために開発環境(eclipse、vscode)、フレームワークの理解が必要で、&lt;strong&gt;片手間にやれるようなもんじゃなかった&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;ITインフラエンジニアがこれからクラウドやるんであれば、Python、YAML構文あたり抑えとけば。Azure/o365ならPowerShellあたりがおススメですかね。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ITインフラエンジニアといえど、プログラミングの初歩的な知識は必要&lt;/li&gt;
&lt;li&gt;特にクラウドを手掛けるのであれば、絶対に必要&lt;/li&gt;
&lt;li&gt;運用の現場では、意外とExcelのVBAが重宝されている&lt;/li&gt;
&lt;li&gt;プログラマに要求されるスキルとはだいぶ異なる&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>クラウド化の足音</title>
      <link>https://y2tanaka.github.io/git-pages/footsteps-of-cloud/</link>
      <pubDate>Thu, 03 Sep 2020 00:59:05 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/footsteps-of-cloud/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ヤバいヤバい。クラウドヤバい。何がヤバいって&lt;strong&gt;ITインフラエンジニアの仕事がなくなっちゃう&lt;/strong&gt;！&lt;br&gt;
…などと、2015年あたりに着手してみた時には思いましたが。&lt;/p&gt;
&lt;p&gt;実際に企業の中で使おうとしてみた時に、技術以外の壁に当たったりして、今は少し頭が冷えてます。&lt;br&gt;
クラウド化が進むとITインフラエンジニアがどうなるのかというと、概ね以下のようになると思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;全体的に徐々に先細り傾向になる&lt;/li&gt;
&lt;li&gt;ハードウェアに寄ってたエンジニアはマジヤバい。&lt;/li&gt;
&lt;li&gt;ソフトウェア販売、更新に寄ってたエンジニア？もかなりヤバい。&lt;/li&gt;
&lt;li&gt;情報基盤系のサービス作ってたエンジニアは細々と生き残る&lt;/li&gt;
&lt;li&gt;コードを書いて自動化し、コスト削減できるエンジニアは生き残る&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;クラウド化とは&#34;&gt;クラウド化とは&lt;/h2&gt;
&lt;p&gt;そもそもクラウド化ですが、以下の2パターンに分類されるのかな、と思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;アプリケーションそのものをインターネットのサービスにアウトソースする&lt;/li&gt;
&lt;li&gt;サーバーをパブリッククラウドに移行する&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;ちなみに、日本国内のサーバーメーカーが「&lt;strong&gt;プライベートクラウド&lt;/strong&gt;」などと言ってるのは&lt;strong&gt;単に仮想化基盤をサービス化しただけ&lt;/strong&gt;であって、いいところはVMWareの仮想マシンをノンリスクで移行できる、ということだけでした。&lt;br&gt;
AWSがVMWareのサポートサービス始めちゃったし、ろくにAPIも叩けないし、&lt;strong&gt;そのうち廃れるんじゃないかなぁ&lt;/strong&gt;、と思います。&lt;/p&gt;
&lt;p&gt;で、前者のアプリケーションのアウトソースについて。&lt;br&gt;
田中(゜p゜)は専門知識なく、あまり語るとボロが出るので、適当にコメントしますが、本業にかかわるビジネスロジックや、管理会計の仕組みを社内で作りこんでる大きめの企業ほど、アウトソースに移行しずらいので、&lt;strong&gt;中小企業ほどメリットを享受できる&lt;/strong&gt;ような気がします。&lt;/p&gt;
&lt;p&gt;後者のサーバーの移行について。&lt;br&gt;
これはITインフラエンジニアの領域ですね。田中(゜p゜)は挑んだことありますが、日本固有と思われる障壁ありました。&lt;/p&gt;
&lt;h2 id=&#34;itインフラのクラウド化によるメリット&#34;&gt;ITインフラのクラウド化によるメリット&lt;/h2&gt;
&lt;p&gt;多分AWSとかの見積もりツール使ってみたことのある人ならわかると思いますが、パブリッククラウドに単純移行しただけではハードウェアの維持コストは安くなりません。むしろオンプレと比すると&lt;strong&gt;5年トータルの維持コストは10～20%ほど高く&lt;/strong&gt;なります。&lt;/p&gt;
&lt;p&gt;これではスポンサーである経営の人を通せません。&lt;strong&gt;何せITインフラに求められるのはコスト削減&lt;/strong&gt;ですから。&lt;br&gt;
じゃあどうやって通すのかというと「&lt;strong&gt;人件費の削減&lt;/strong&gt;」です。クラウド化により以下のようなメリットがあります。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ハード障害に起因するインシデント管理コストが超減る&lt;/li&gt;
&lt;li&gt;コードによりITインフラの管理を自動化できる&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;前者は「超減る」と書きましたが、田中がオンプレのサーバ300台をAWSに移行した後は、年間&lt;strong&gt;160件あったHW起因のインシデントが3件にまで減&lt;/strong&gt;りました。まー、老朽化が進んでたからですけど…。&lt;/p&gt;
&lt;p&gt;後者はクラウドの本質です。いわゆるInfrastructure as Codeつうやつです。&lt;br&gt;
SIerの情報システム部門の課長やってた当時は、実際にユーザー(開発者)の要望に応じて検証環境やプロジェクトの環境作ったりしてたのですが、&lt;strong&gt;1～2か月かかってた環境構築が、CloudFormation使って1時間で終わったり&lt;/strong&gt;するのです。&lt;/p&gt;
&lt;p&gt;ちなみに田中(゜p゜)は2016年当時、オンプレのデータセンターの運用してましたが、業務をITILとかのフレームワーク使って可視化、定量化してたので、どの部分をクラウド自動化するのか、またその効果についてすぐ見積ることができました。&lt;br&gt;
結果、人件費込み〇億の5年維持費が&lt;strong&gt;30%位削減できる&lt;/strong&gt;見積ができたのです。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;わぁ！やったね！&lt;/strong&gt;&lt;br&gt;
これで経営の人たちに、大手を振ってオンプレサーバのクラウド化を上申できるよ！&lt;/p&gt;
&lt;h2 id=&#34;クラウド化を阻んでいるモノ&#34;&gt;クラウド化を阻んでいるモノ&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;ということで、勢い込んで経営層の一人に上申の下ネゴを取りに行きました。&lt;br&gt;
が、答えは「&lt;strong&gt;人件費なんて削減できねーんだよバカヤロウ！(激怒)&lt;/strong&gt;」でした。※原文ママ&lt;/p&gt;
&lt;p&gt;当時はワケ分からなかったですが、結局「終身雇用制度」「解雇の困難さ」が原因だったかなぁ。&lt;/p&gt;
&lt;p&gt;結局のところ&lt;strong&gt;日本の企業の情報システム部門というのは、本業で稼げない人たちの受け皿となってるケースが多く、解雇に対する制限も厳しい&lt;/strong&gt;ため、おいそれと人件費削減なんてできないのです。&lt;/p&gt;
&lt;p&gt;また、そういう人たちは往々にして技術力ないのでベンダーにSES契約でアウトソースします。&lt;strong&gt;SES契約の受託ベンダーにとってみたら、自分たちの食い扶持が減る人件費削減について、積極的に提案してくるワケがない&lt;/strong&gt;のです。協力ももちろんしてくれない。&lt;/p&gt;
&lt;p&gt;つまり、田中(゜p゜)の提案は相当空気読めてなかったのかな、と思ってます。&lt;br&gt;
怒鳴られたのはアレですが、まあ誰が対応しても同じようなことを言われたんでしょうね。結局クラウド化は別の要因もあって経営を通せましたが、それはまた別の機会に。&lt;/p&gt;
&lt;p&gt;ちなみに2016年ごろは、お上の規制なんかもクラウド化の障壁でしたが、&lt;strong&gt;今や官公庁は「クラウドファースト」謳ってますし、Fintechの絡みもあって銀行のフロントなんかでのパブリッククラウド採用も進んでる&lt;/strong&gt;ので、そういうのはほぼないようです。&lt;/p&gt;
&lt;h2 id=&#34;クラウド化の流れは止められない&#34;&gt;クラウド化の流れは止められない&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)が経験したような組織による障壁は、他の企業でも起こってると思われます。&lt;br&gt;
が、欧米のようなドラスティックではないにしろ、以下のような理由でクラウド化の流れは止まらないと田中(゜p゜)は考えてます。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;ITインフラ投資の二大必要悪である「ハードウェア老朽化対応」と「ソフトウェアサポート切れ対応」のクラウドによるヘッジが経営の人に刺さる&lt;/li&gt;
&lt;li&gt;きちんとやればトータルのコストを削減できるのは事実&lt;/li&gt;
&lt;li&gt;削減できない人材も、遅かれ早かれいずれ引退する。&lt;/li&gt;
&lt;li&gt;SESでやってたベンダーも、経営の意思決定には逆らえない。&lt;/li&gt;
&lt;li&gt;そもそもお上(公官庁)がパブリッククラウドを推進してる。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;そうなった時にITインフラエンジニアとしてはどうすればよいのか、というのはまた次回「コード(プログラム)って書く必要あるの？」で説明したいと思います。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ITインフラをパブリッククラウドに移行したからといってコストは下がらない。むしろ上がる。&lt;/li&gt;
&lt;li&gt;プライベートクラウドはまじ論外。&lt;/li&gt;
&lt;li&gt;カギは運用の自動化による人件費の削減。だが、日本の企業においては組織的な壁がある。&lt;/li&gt;
&lt;li&gt;時間の経過とともに壁は崩れ、クラウド化は粛々と進む。&lt;/li&gt;
&lt;li&gt;官公庁や銀行でのパブリッククラウド採用も進んでいる。&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ITインフラエンジニアが選択肢を増やすために</title>
      <link>https://y2tanaka.github.io/git-pages/it-infra-select/</link>
      <pubDate>Wed, 02 Sep 2020 22:12:38 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/it-infra-select/</guid>
      <description>&lt;p&gt;先の記事の中で、「経営者はITインフラを必要悪と考えている」「日本でITインフラエンジニアの仕事は縮小していく」と書きました。&lt;br&gt;
そんな厳しい状況の中で、&lt;strong&gt;ITインフラエンジニアが選択肢を増やしていくためにどんなことができるのか&lt;/strong&gt;、考えてみました。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;お給料市場価値を上げる下げないために&#34;&gt;お給料＝市場価値を上げる(下げない)ために&lt;/h2&gt;
&lt;p&gt;まず、考えるべきはグローバル化だったり、企業からの成長圧力などから、&lt;strong&gt;現状維持＝相対的な後退&lt;/strong&gt;、かもしれない、ということです。グローバルでは資本主義優勢ですが、資本主義は基本的に継続的な成長を企業に求めます。&lt;br&gt;
まったり働きたい人には残念なお知らせです。&lt;/p&gt;
&lt;p&gt;ただ、お給料とは市場価値で、労働者の需要と供給の関係で決まりますから、下げないために、もしくは上げるためには&lt;strong&gt;常に需要の大きい状態にするよう、行動パターンを選択すればいい&lt;/strong&gt;わけです。&lt;/p&gt;
&lt;p&gt;手っ取り早い方法も含めて需要の大きい状態にするのに、いくつか考えてみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;世界/日本で見ても、自分しかできない技術を身に着ける&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;バズってる業界(AI、ビックデータ、RPAとか)に飛び込む&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;複数の専門性を組み合わせて、自分にしかない価値を出す&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;すいません。結構本とかの受け売りで、結論ありきな提案ですけど、まあ気にせず進めます。&lt;/p&gt;
&lt;p&gt;1番上について。&lt;br&gt;
もしそんな人がいたらすでにかなり早い段階から頭角を現してるでしょうし、田中はそういう人ではないのでITインフラの領域でどこを極めればチャンスが大きいのかというのにコメントはできないです。すんません。&lt;/p&gt;
&lt;p&gt;2番目について。&lt;br&gt;
正直こちらはあまりお勧めはできないです。「&lt;strong&gt;バズってる＝廃れたらおしまい&lt;/strong&gt;」ですし、AIもビックデータも深い学問的な知識が必要で、すぐにマネタイズ(お金に換えられる)モノではなさそうだからです。&lt;br&gt;
RPAはコスト削減という観点からはすぐマネタイズできて良い気がしますが、プログラム組んでAPI叩けばよい&lt;strong&gt;標準的な流れの繋ぎでしかないイメージ&lt;/strong&gt;です。&lt;/p&gt;
&lt;p&gt;ということで、お勧めは常人でもなんとかなりそうな&lt;strong&gt;3番目&lt;/strong&gt;の「&lt;strong&gt;複数の専門性を組み合わせて自分にしかない価値を出す&lt;/strong&gt;」でしょうか。ITインフラの領域でいえば「&lt;strong&gt;コスト削減に貢献できる&lt;/strong&gt;」というのも重要な要素かと思います。&lt;/p&gt;
&lt;p&gt;田中の場合は「ネットワーク → インフラ全般の技術力」＋「プロジェクトマネジメント」＋「ラインマネジメント」で売っていて、そこそこのお給料はもらえるようになりました。ネットワークからインフラ全般にスライドしてるのは後で説明します。&lt;/p&gt;
&lt;p&gt;あとパッと思いつくのは「英語」＋「プロジェクトマネジメント」とか、「英語」＋「プログラミング力」とか。&lt;br&gt;
どこかで書いたように、日本語と英語の距離は遠いので、&lt;strong&gt;英語をまともに使えるだけで専門性として武器&lt;/strong&gt;になります。外資系の企業とかで高く買ってくれる可能性が高まると思われます。&lt;/p&gt;
&lt;p&gt;ただ、「英語」＋「専門性」だとグローバルな労働市場でバッティングする気がするので、日本に居た方が良い気もしますが。&lt;/p&gt;
&lt;h2 id=&#34;深い専門性とは&#34;&gt;深い専門性とは？&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;「深い専門性」について、ITインフラエンジニアという領域で、組み合わせによる価値を出していくために、どのような要素が必要なのか、考えてみました。&lt;br&gt;
※本当はもっとたくさん書きたいんですが、何とか3つくらいまでに押し込んでみた。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;特定の技術領域について深い知識を持っている&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;仮説思考を基に、トライアンドエラーができる&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;周辺の領域を考慮し、コストを下げる観点で、自身の「設計/タスク/課題解決/リスク」を関係者に説明、提案できる。&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(1)は深い深いレベルではなく、ネットワークだったら&lt;strong&gt;最低限の設計くらいは自信を持ってできるように&lt;/strong&gt;なって下さいよ、という話です。&lt;br&gt;
CCIEはしんどいけど、CCNPとかCCDPくらいだったら自力だけで何とかなるレベル。ここが専門知識のスタート地点です。&lt;/p&gt;
&lt;p&gt;(2)は、自身の技術の専門性を深め、他の専門知識とつなげていくために必要な素養かな、と思います。&lt;br&gt;
自身の技術領域に閉じていて、何かトラブったら「メーカーに問い合わせます」とか「そこはサーバの領域なんで知りません」とかでは、領域が広がりません。&lt;/p&gt;
&lt;p&gt;とりあえず、&lt;strong&gt;領域外でも&lt;/strong&gt;関係している部分を&lt;strong&gt;調べ、原因の仮説を立て、設定を変えて試してみる&lt;/strong&gt;、という行動パターンが次につながります。&lt;/p&gt;
&lt;p&gt;ちなみにPMBOKの「プロジェクト」の定義は「&lt;strong&gt;独自の製品、サービス、所産を創造するために実施される有期性の業務である&lt;/strong&gt;」ですので、過去前例のない事象とか、トラブルなんてのはあって当たり前というのが前提になってるので、この&lt;strong&gt;仮説思考を基にしたトライアンドエラーという素養は、どこに行っても重宝&lt;/strong&gt;します。&lt;/p&gt;
&lt;p&gt;で、&lt;strong&gt;(3)が最も重要&lt;/strong&gt;なのかな、と思いますが、先の記事にも書いたようにITインフラの本質はエンドユーザーの「&lt;strong&gt;コスト削減&lt;/strong&gt;」にあります。※ごくまれにITインフラ領域でカッコいい仕組みを構築してくれなんていうのもあるかもしれませんが、確率低ーいので取り上げません。&lt;/p&gt;
&lt;h2 id=&#34;cost&#34;&gt;コストに対する意識の差&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;経営者はITインフラに&lt;strong&gt;コスト削減&lt;/strong&gt;を求めていますし、その代行者？であるPMも同様です。であれば、そこに対して&lt;strong&gt;積極的な提言をしてくれるエンジニアというのは価値があると認識されます&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;たとえ話、&lt;strong&gt;なんでこのインターネット回線は、この帯域/タイプなの&lt;/strong&gt;？&lt;br&gt;
と聞かれた時に、イケてるエンジニアとイケてないエンジニアではこう違います。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;イケてないエンジニア：&lt;/strong&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;なんか要件定義書に1Gbps占有タイプって書いてあったので、そうしときました。&lt;/li&gt;
&lt;li&gt;過去、1000人くらいの規模で、同じように1Gbps選定して問題なかったので、実績もあります。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;strong&gt;イケてるエンジニア：&lt;/strong&gt;&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;イケてるエンジニアの方のポイントは「&lt;strong&gt;他の領域に足を踏み込んで仮説を立てている&lt;/strong&gt;」「&lt;strong&gt;知恵を利かせてリスクをヘッジしている&lt;/strong&gt;」「&lt;strong&gt;コスト削減を提案した上で選択肢を出している&lt;/strong&gt;」となります。&lt;/p&gt;
&lt;p&gt;こういう基本行動は、その後領域を広げていく上で大きなアドバンテージになります。&lt;strong&gt;PMや顧客が何に興味持ってるのか&lt;/strong&gt;知らないと提案できないし、&lt;strong&gt;他の技術領域に興味を持って踏み込んでいく&lt;/strong&gt;モチベーションになるからです。&lt;/p&gt;
&lt;p&gt;また、コスト意識のあるエンジニアは、自身の生産性や課題管理についても意識が高く、総じて同じお金を出しても高いアウトプットが返ってきます。&lt;/p&gt;
&lt;h2 id=&#34;リスクをどうとらえるか&#34;&gt;リスクをどうとらえるか&lt;/h2&gt;
&lt;p&gt;ちょっとだけリスクの話が出たので、リスクの話します。リスク管理能力も市場価値に対して影響が大きい能力となります。&lt;/p&gt;
&lt;p&gt;プロジェクトには、「&lt;strong&gt;リスク管理&lt;/strong&gt;」と「&lt;strong&gt;段階的詳細化&lt;/strong&gt;」という考え方があります。要するに、プロジェクト開始当初は最終的にどうなるかよく分からないもの(＝リスク)を、プロジェクト進行とともに潰して、&lt;strong&gt;段々と確実なものにしていく&lt;/strong&gt;、という考え方です。&lt;/p&gt;
&lt;p&gt;前にウォーターフォール型の開発の典型的なフェーズ分けについて書きましたが、左に行けば行くほどプロジェクトのリスクは大きく、右に行けば行くほど決まったことをやればよいのでリスクは小さくなります。&lt;/p&gt;
&lt;p&gt;企画→要求定義→要件定義→設計→構築→テスト→(移行)→(切替)→運用/保守&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;これは、工数見積もりの精度とプロジェクトのフェーズとの相関関係を示したものですが、フェーズの最初の方が情報が少なく、見積のブレ幅が大きいのです。&lt;br&gt;
リスクを大きく見積れば、顧客に対して高い見積もりが出てしまいますし、リスクを小さく見積もれば赤字になる可能性が高まります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;不完全な情報の中からリスクを認識した上で、知恵を利かせて精度の高い予測をし、プロジェクトをうまくハンドリングできれば&lt;/strong&gt;できるほど、その人材の市場価値は高くなります。&lt;br&gt;
これもどちらかというとITインフラに限った話ではなくて、汎用的なスキルに属するものかと思います。&lt;/p&gt;
&lt;p&gt;つまるところ&lt;strong&gt;プロジェクトマネジメント能力身に着けて、上流工程行くのも選択肢&lt;/strong&gt;ですよ、という話です。&lt;/p&gt;
&lt;p&gt;リスクのハンドリングは経営者とか顧客とかエンドユーザーとか、途端に関係者多くなるので、&lt;strong&gt;ストレスも激増&lt;/strong&gt;しますけどね…。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;給料＝市場価値を上げる(下げない)には、複数の専門知識を組み合わせる&lt;/li&gt;
&lt;li&gt;複数の専門知識を身に着けるためには、他の領域に踏み込む基本行動が必要&lt;/li&gt;
&lt;li&gt;リスクを認識し、コントロールできると、お金が稼げる&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;余談&#34;&gt;余談&lt;/h2&gt;
&lt;p&gt;ここまでは、会社に属して給料を上げるという前提で話をしてきましたが、実はもうちょい&lt;strong&gt;リスクを取って、手取りを増やす方法&lt;/strong&gt;があります。&lt;/p&gt;
&lt;p&gt;結論言うと「&lt;strong&gt;フリーランスになる&lt;/strong&gt;」です。&lt;br&gt;
マイクロ法人など立ち上げれば、&lt;strong&gt;節税も期待できます&lt;/strong&gt;。&lt;/p&gt;
&lt;p&gt;つまるところ、病気だったり、高齢化によって仕事を失うリスクを背負って、収入を上げていく、という選択肢です。&lt;/p&gt;
&lt;p&gt;世界的な労働者の流動化(フリーランスの増加)だったり、終身雇用制度の崩壊、年金制度の崩壊などを鑑みると、&lt;strong&gt;会社に属することがリスクヘッジになってない&lt;/strong&gt;気がするので、現実的な選択肢になりつつあると思いますけどね。&lt;/p&gt;
&lt;p&gt;ただ、田中(゜p゜)はまだ実行していないので、お勧めとかそういうことは言えないんです。※いずれやるかも。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>ITインフラエンジニアの今後とか</title>
      <link>https://y2tanaka.github.io/git-pages/it-infra-engineer-future/</link>
      <pubDate>Wed, 02 Sep 2020 20:56:08 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/it-infra-engineer-future/</guid>
      <description>&lt;p&gt;たいそうなタイトルですが、田中(゜p゜)は経済学者でもないし、それ系の専門家でもないので、本を読んだ受け売りとか、業界を見ていて思う知識を基に、今後ITインフラエンジニアがどうなるのか書いてみます。&lt;/p&gt;
&lt;p&gt;結論言うと「&lt;strong&gt;ITインフラでモノ売りを生業としてる人はかなりヤバい&lt;/strong&gt;」「&lt;strong&gt;日本という国の中ではITインフラに限らず緩やかに縮小傾向&lt;/strong&gt;」なんじゃないかと思ってます。&lt;/p&gt;
&lt;h2 id=&#34;グローバルで起こってること&#34;&gt;グローバルで起こってること&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;これは完全に「&lt;a href=&#34;https://www.amazon.co.jp/dp/B004ZX87YO/&#34;&gt;The Shift&lt;/a&gt;」の受け売りです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;先進国の労働人口は高齢化傾向で年金制度が破綻。働く期間は伸びていく。&lt;/li&gt;
&lt;li&gt;大企業は市場縮小と、株主からの拡大への圧迫により歪みが生じている&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;人的/知的リソースがクラウド化し、流動性が増大&lt;/strong&gt;してる&lt;/li&gt;
&lt;li&gt;中国は製造、インドは&lt;strong&gt;ITのアウトソース先として台頭&lt;/strong&gt;してきている&lt;/li&gt;
&lt;li&gt;エネルギー政策により二酸化炭素税が適用されていく。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;「The Shift」だと、先進国の大企業は行き詰って&lt;strong&gt;労働者はマーケットプレイス制&lt;/strong&gt;(Amazonの物販みたいに、労働者の単価と、評価が★で表示される)に移行し、二酸化炭素税の適用により、リモートワークが拡大されて、働き方の自由度は高まるだろう、という予測を立ててます。&lt;/p&gt;
&lt;p&gt;ただし個人個人がそのような選択を取っていった希望のある未来の場合、という条件付きですが。&lt;/p&gt;
&lt;h2 id=&#34;日本という国の特性&#34;&gt;日本という国の特性&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;グローバル化の何がヤバいかって、&lt;strong&gt;グローバルの労働者とガチンコで単価勝負を迫られる&lt;/strong&gt;点に尽きるかと思われますが、日本という国の特性もあり、いきなりグローバル化の波が押し寄せてくるわけではないと思います。&lt;br&gt;
だいたい5～10年遅れで日本に入ってくるというのがお決まりのパターンと言われていますが。&lt;/p&gt;
&lt;p&gt;いきなり飲まれない理由は概ね以下です。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;解雇に対しての規制が異常に厳しい&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;高齢者の発言力が強く、雇用制度がなかなか崩れない&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;日本語と英語(事実上の国際言語)の壁が高い&lt;/strong&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;つまるところ、労働者がマーケットプレイスに出てたとしても、そもそも解雇規制が強く余剰人員をカットできないので企業側に買う余力はありませんし、英語と日本語の壁が高いためにコミュニケーションコストもかかります。&lt;/p&gt;
&lt;p&gt;ITについては&lt;strong&gt;日本特有のコミュニケーション、カルチャーによるギャップに守られ、いきなりインドにアウトソースされてしまうことはない&lt;/strong&gt;と思います。&lt;br&gt;
ただ、英語を駆使して海外へのアウトソースするベンチャーなんかができて、格安でサービス提供するなんてビジネスモデルが当たればヤバいかもしれません。&lt;/p&gt;
&lt;p&gt;製造業については、中国の台頭により、縮小傾向は続くと思われます。&lt;br&gt;
結局のところITへの投資の出所なので、&lt;strong&gt;ITへの投資も縮小傾向になる&lt;/strong&gt;と思われます。&lt;/p&gt;
&lt;h2 id=&#34;itインフラエンジニアはどうか&#34;&gt;ITインフラエンジニアはどうか&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;グローバルの流れ、日本の事情を抑えたうえでITインフラエンジニアがどうなるのか、というのをまとめてみました。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;そもそもITインフラ領域で日本は海外で戦えていないし、海外の労働者マーケットプレイスにITインフラのカテゴリがほぼないので、&lt;strong&gt;労働市場の流動性増大の影響は少ない&lt;/strong&gt;と思われる。&lt;br&gt;
※現地でしか仕事ができず、マーケットプレイスに合わないから？&lt;/li&gt;
&lt;li&gt;ネットワーク、PCは縮小傾向ながらもしばらくは持つはず。現地に行く仕事はアウトソース難しいし。&lt;/li&gt;
&lt;li&gt;サーバの「ハードウェア売り＋セットアップ」、「ソフトウェア販売」は&lt;strong&gt;クラウドに食われて相当ヤバい&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;中点3つ目について。&lt;br&gt;
そもそも「&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/what-is-itinfraengineer/&#34;&gt;経営の人が見たITインフラ&lt;/a&gt;」に書いたように、&lt;strong&gt;ハードウェアの老朽化対応とソフトウェアのサポート切れ対応は、ITインフラの二大必要悪&lt;/strong&gt;であり、これが排除できるクラウド化の出現により、&lt;strong&gt;グローバル化以前にハナからヤバい&lt;/strong&gt;と思われます。&lt;/p&gt;
&lt;h2 id=&#34;他の業界行ったほうがいいの&#34;&gt;他の業界行ったほうがいいの？&lt;/h2&gt;
&lt;p&gt;&lt;strong&gt;花形でゴリゴリ稼ぎたい、というのであれば、その通り&lt;/strong&gt;だと田中(゜p゜)は思います。&lt;br&gt;
例えばITインフラ構築が生業の企業に行ったとしても、最終的なエンドユーザの認識が必要悪なのであれば、こういうジレンマから逃れることはできないです。&lt;/p&gt;
&lt;p&gt;ただ、**「花形ではない必要悪＝食いっぱぐれがない」**ということでもあります。&lt;br&gt;
花形の業務は、利益に対してのプレッシャーがキツかったりとか、一発外すとそれだけでポシャったりしてしまうハイリスクハイリターンなのです。&lt;/p&gt;
&lt;p&gt;どこに行ったって、どんな仕事をしたって、制約事項がつきものなので、その中でお給料上げたりとか、自分のやりたいことをやるというのは一種のゲームなので、&lt;strong&gt;割りきってゲームを楽しむ、という方が生産的&lt;/strong&gt;だと思います。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;グローバルでは労働者の流動性が高まってるが、日本のITインフラエンジニアへの影響は少ない&lt;/li&gt;
&lt;li&gt;ITインフラエンジニアはローリスク、ローリターンなので、一発当てるのは難しい&lt;/li&gt;
&lt;li&gt;ゲームと割り切り、「やりたいことをやる」「給料を上げる」ために工夫するほうが生産的&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>経営の人が見たITインフラ</title>
      <link>https://y2tanaka.github.io/git-pages/exectives-point-of-view-to-itinfra/</link>
      <pubDate>Wed, 02 Sep 2020 20:14:15 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/exectives-point-of-view-to-itinfra/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;田中(゜p゜)がITインフラエンジニア/PM時代、管理層や経営層と呼ばれる人たちの言動について少なからず「何言ってんだコイツラ」とか「現場わかってねー」とか「給料安いんですけど！」とか、不満タラタラでした。&lt;/p&gt;
&lt;p&gt;もちろん今でも何言ってんだ、と思うことはままありますが、逆の立場に片足突っ込んでみると、&lt;strong&gt;その言い分も分からなくもないかな&lt;/strong&gt;、という気がしてます。&lt;/p&gt;
&lt;p&gt;結論から言うと経営側の人の視点からすると「ITインフラ」に対する投資へのモチベーションは、&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;だと思います。&lt;/p&gt;
&lt;p&gt;身近な例を挙げていくと、我々一般庶民も電気使いますよね。電気。&lt;br&gt;
でも我々が気にするのは、「ルームランプがつくかどうか」「エアコンがつくかどうか」であって、その間の&lt;strong&gt;配線とか給電機器がカッコいいとか関係ない&lt;/strong&gt;わけですよ。求めるのは「&lt;strong&gt;安くて最低限安定していればよい&lt;/strong&gt;」なのかな、と。&lt;br&gt;
それと同じです。&lt;/p&gt;
&lt;h2 id=&#34;そもそも経営者の目指すもの&#34;&gt;そもそも経営者の目指すもの&lt;/h2&gt;
&lt;p&gt;企業、特に営利法人については、&lt;strong&gt;利益を上げることがまず最優先&lt;/strong&gt;です。&lt;br&gt;
「社会に対する貢献ガー」という企業もあるでしょうが、まず中小企業については食えなければ話になりませんし、株式を公開している企業であれば、株主からの利益拡大のプレッシャーは想像以上に熾烈なものです。&lt;/p&gt;
&lt;p&gt;「利益」について。田中(゜p゜)は経済の専門家ではないので、知ってる範囲で書きます。&lt;br&gt;
利益とは以下の公式で定義できます。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;売上(収益) ー 支出(費用) ＝ 利益&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;誰でも知ってるよ！という話ですけど。&lt;br&gt;
で、経営側の人は、利益を上げることに責任を持っとるわけですが、その方法は概ね二つです。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;売上を増やす&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;支出を減らす&lt;/strong&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;これも誰でも分かる単純な話ですね。&lt;br&gt;
当然、ITに対する投資に対しても、その原理が働きます。&lt;/p&gt;
&lt;h2 id=&#34;経営者がitに求めるもの&#34;&gt;経営者がITに求めるもの&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;だいたい以下の三つかなと田中(゜p゜)は思ってます。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;販路を増やし、売上を増やす&lt;/li&gt;
&lt;li&gt;業務効率を上げ、人件費を減らす/生産量を増やす&lt;/li&gt;
&lt;li&gt;組織の状態を迅速に把握し、経営の判断スピードを上げる&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;(1)は分かりやすいです。例えば製造業とかで、小売りを卸売り業者経由にしていたのを、ネット通販にして販路拡大する、とか。&lt;/p&gt;
&lt;p&gt;(2)も難しくないです。例えば勤怠をWEBにして、ペーパーレス化すれば、入力の手間も、集計の手間も省けます。&lt;/p&gt;
&lt;p&gt;(3)はちょっと難しいですが、管理会計のしっかりした会社だと、だいたい月単位で各部署の売上、費用、利益の動向が出てきて、その単位で経営の判断を下していくことになります。&lt;/p&gt;
&lt;p&gt;ただ、経営者としてはそれでも遅いことが多くて、特に利益が出ていない、ともすると赤字の部署やプロジェクトに対して&lt;strong&gt;週単位や、日単位でのアクションを要求&lt;/strong&gt;していたりします。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;現場は往々にしてヤベー状況を隠したがる&lt;/strong&gt;ので、それを&lt;strong&gt;可視化した上で早めに手当てしたい&lt;/strong&gt;、ということですね。&lt;/p&gt;
&lt;p&gt;実際経営層がダメだと単に怒られて時間の無駄ですが、有能な経営層であれば早めのアクションのよって被害の食い止め、ともするとリカバリまでできてしまったりします。&lt;br&gt;
また、失敗の要因の分析に加え、成功の要因を分析して、アセット(資産)化につなげられたりもします。&lt;/p&gt;
&lt;p&gt;ここまでできてるのはほんの一握りの会社なんでしょうが…。&lt;/p&gt;
&lt;p&gt;話が長くなりました。&lt;br&gt;
じゃあ経営の人は「&lt;strong&gt;ITインフラ&lt;/strong&gt;」に何を求めるんでしょうか。&lt;/p&gt;
&lt;h2 id=&#34;経営の人がitインフラに求めるもの&#34;&gt;経営の人が「ITインフラ」に求めるもの&lt;/h2&gt;
&lt;p&gt;経営の人がITに求めるものは「&lt;strong&gt;1. 販路を増やし、売上を増やす&lt;/strong&gt;」「&lt;strong&gt;2. 業務効率を上げ&lt;/strong&gt;る」「&lt;strong&gt;3. 組織の状態を迅速に把握し、経営の判断スピードを上げる&lt;/strong&gt;」でした。&lt;/p&gt;
&lt;p&gt;で。&lt;br&gt;
&lt;strong&gt;「ITインフラ」に投資して、この3つのどれかに貢献できますか&lt;/strong&gt;、という話です。PCやサーバーやネットワーク回線が高くて遅かった時代には、これらに投資して業務効率が改善するケースもあったでしょう。&lt;/p&gt;
&lt;p&gt;ですが、PCもサーバーも回線も安くて品質の良いものが手に入る現在、&lt;strong&gt;ITインフラに対する投資は効率が悪い&lt;/strong&gt;、というのが現状だと、田中(゜p゜)は思っています。&lt;/p&gt;
&lt;p&gt;さらに残念なことに、ITインフラの場合は、&lt;strong&gt;利益に一切貢献しないのに投資しなければいけないケースがままあります&lt;/strong&gt;。例えば以下です。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;機器の老朽化対応&lt;/li&gt;
&lt;li&gt;ソフトウェアのサポート切れ&lt;/li&gt;
&lt;li&gt;セキュリティ事故によるシステム強化&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;利益を上げる責任者からしてみれば、&lt;strong&gt;ホント残念な費用の使い方&lt;/strong&gt;、&lt;strong&gt;つまり必要悪&lt;/strong&gt;なのだと思います。&lt;/p&gt;
&lt;p&gt;ただ、これはITインフラだけの話じゃなくて、&lt;strong&gt;経営の人は「本業以外の仕事を必要最低限にしたい」と常に考えている&lt;/strong&gt;、という前提だけは覚えておいたほうがいいと思います。&lt;/p&gt;
&lt;p&gt;ということで、最初に書いた結論でまとめます。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;経営者は利益を上げることに責任を負っている&lt;/li&gt;
&lt;li&gt;ITインフラに対する投資は利益に直接貢献しないことが多い。よって経営者は、できればITインフラに投資したくない。しても最低限にしたいと思っている&lt;/li&gt;
&lt;li&gt;経営の人は「本業以外の仕事を必要最低限にしたい」と常に考えている。ITインフラだけではない&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>ITインフラエンジニアとは？</title>
      <link>https://y2tanaka.github.io/git-pages/what-is-itinfraengineer/</link>
      <pubDate>Wed, 02 Sep 2020 18:45:16 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/what-is-itinfraengineer/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt;いらすとやさん&lt;!-- raw HTML omitted --&gt;のこの絵、悪意あるよなぁ…。&lt;br&gt;
まあ、このサイトでは「ITインフラエンジニア」について言及しますので、定義についてはっきりしておきたいと思います。&lt;/p&gt;
&lt;h2 id=&#34;itインフラエンジニアとは何か&#34;&gt;ITインフラエンジニアとは何か&lt;/h2&gt;
&lt;p&gt;結論から言うと、田中(゜p゜)は「&lt;strong&gt;ユーザが業務アプリケーションを利用する「間」の仕組みを構築/運用する人&lt;/strong&gt;」なのかな、と思ってます。&lt;br&gt;
このサイトにおいては、この概念が最も重要となります。&lt;/p&gt;
&lt;p&gt;じゃあ業務アプリって何、それ以外って何、って突っ込まれるとしにます。&lt;br&gt;
ってか企業や業界によっても違うし！ 厳密に言ったらキリないので、適当にイメージ化してみますね！&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;p&gt;雑ぅ！&lt;br&gt;
ただ、だいたい8割～9割がこの間に収まってますし、あまり厳密に定義しても話が進まないので、こういうことにしておいてください。&lt;/p&gt;
&lt;h2 id=&#34;技術領域について&#34;&gt;技術領域について&lt;/h2&gt;
&lt;p&gt;人材募集時の職務記述書とかだと、おおむね技術領域によって、以下のように記載されてたりします。※PCエンジニアはあまり聞かないけど、必要な領域だと思います。&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;サーバエンジニア&lt;/li&gt;
&lt;li&gt;ネットワークエンジニア&lt;/li&gt;
&lt;li&gt;PC(端末)エンジニア&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;もちろん大規模なインフラ構築となると、分業が高度化するので、各々の領域も詳細化されていきます。こんな感じで。&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;&lt;!-- raw HTML omitted --&gt; &lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;場合によると、取り扱う製品ごとにパートナー雇ったりして、さらにカオスが広がることもあります。あまりに煩雑なので、各担当の役割については他のエントリにぶん投げて先送りにします。&lt;/p&gt;
&lt;p&gt;こういうエンジニア集団を取りまとめるプロジェクトマネージャ(PM)、プロジェクトリーダー(PL)は、だいたいコミュニケーションコストでひーこら言ってます。&lt;/p&gt;
&lt;p&gt;エンジニアはテクニカルトーク大好きで意味わからんし、客とか会社の中の偉い人の相手も必要なので&lt;strong&gt;翻訳も必要&lt;/strong&gt;ですし。&lt;/p&gt;
&lt;p&gt;中小規模の構築だと、数名のメンバーで複数の技術領域を手広くやったりもするので、コミュニケーションコストはもう少しマシなのかな、と思いますが。&lt;/p&gt;
&lt;h2 id=&#34;フェーズについて&#34;&gt;フェーズについて&lt;/h2&gt;
&lt;p&gt;現在のところ、田中(゜p゜)の頭の中は比較的レガシーなので、ITインフラのプロジェクトについてPMBOKのウォーターフォールをイメージしてます。&lt;br&gt;
確かにクラウドうまく使えばアジャイル的な開発も可能なのかな、とは思いますが、今のところ案件で出くわしたことはありません。&lt;/p&gt;
&lt;p&gt;ウォーターフォールでは、だいたいが以下のようなフェーズに分かれてます。&lt;/p&gt;
&lt;p&gt;企画→要求定義→要件定義→&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;設計→構築→テスト→(移行)→(切替)→運用/保守&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;&lt;/p&gt;
&lt;p&gt;全くの新規だと移行と切替はなかったりしますが、割合としては少ないです。&lt;/p&gt;
&lt;p&gt;このうち、黒字部分はコンサルとか営業の領域で、ITインフラエンジニアの領域は赤字以降です。ちなみに&lt;strong&gt;お給料(市場価値)は左に行くほど高い傾向&lt;/strong&gt;にありますが、これは明確な理由があるので、後続の記事の中で説明します。&lt;/p&gt;
&lt;p&gt;赤字のうち、「設計/構築/テスト/移行/切替」を担当するのが「&lt;strong&gt;構築エンジニア&lt;/strong&gt;」、運用保守を担当するのが「&lt;strong&gt;運用エンジニア&lt;/strong&gt;」などとよく言ってます。&lt;/p&gt;
&lt;p&gt;構築エンジニアが作ったシステム、ドキュメントを元に運用エンジニアが複数年システムを維持していく、というイメージです。&lt;br&gt;
運用をアウトソースしてない場合は、客がその役割を担うケースもままあります。&lt;/p&gt;
&lt;p&gt;このあたりはアプリ開発・運用もあまり変わりないかもしれませんね。&lt;/p&gt;
&lt;h2 id=&#34;アプリケーションとの境界線&#34;&gt;アプリケーションとの境界線&lt;/h2&gt;
&lt;p&gt;大規模な基幹システムの開発だと、インフラエンジニアがメンバーの一部としてアサインされて、開発に携わることがあります。&lt;/p&gt;
&lt;p&gt;アプリケーション開発する人々は、往々にしてインフラの知識は希薄です。なので、性能や、可用性などの非機能要件については、インフラエンジニアがリードするケースがままあります。この辺りも含めてアプリ側と会話した上で設計できると、インフラ寄りの&lt;strong&gt;ITアーキテクト&lt;/strong&gt;として、位が上がります。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;結局のところユーザが使いたいのはアプリケーションであって、インフラそのものは後ろに隠れてる&lt;/strong&gt;わけですから。&lt;/p&gt;
&lt;h2 id=&#34;まとめ&#34;&gt;まとめ&lt;/h2&gt;
&lt;ul&gt;
&lt;li&gt;ITインフラエンジニアとは、ユーザが業務アプリケーションを利用する「間」の仕組みを構築/運用する&lt;/li&gt;
&lt;li&gt;ITインフラエンジニアは、担当する技術領域、フェーズにより複数に分類され、分類は案件の規模や、所属する組織のカルチャーによって異なる&lt;/li&gt;
&lt;li&gt;ユーザが使いたいのはアプリケーションであって、インフラそのものは後ろに隠れてる&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>記事一覧</title>
      <link>https://y2tanaka.github.io/git-pages/article/</link>
      <pubDate>Wed, 02 Sep 2020 16:26:35 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/article/</guid>
      <description>&lt;p&gt;業界全体とか、企業全体に関わるような、比較的範囲の広い話を「記事」としてまとめてます。細かい技術の話とか、田中(゜p゜)の活動記録などは「&lt;a href=&#34;https://y2tanaka.github.io/git-pages/blog/&#34;&gt;時事ネタ(ブログ)&lt;/a&gt;」に書いてます。&lt;/p&gt;
&lt;h2 id=&#34;itインフラエンジニアの現実h3&#34;&gt;ITインフラエンジニアの現実&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;itインフラ技術の話h3&#34;&gt;ITインフラ技術の話&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;苦労炎上話h3&#34;&gt;苦労＋炎上話&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;お仕事その他の話h3&#34;&gt;お仕事・その他の話&lt;!-- raw HTML omitted --&gt;&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>書いてる人</title>
      <link>https://y2tanaka.github.io/git-pages/writer/</link>
      <pubDate>Wed, 02 Sep 2020 02:05:01 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/writer/</guid>
      <description>&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p class=&amp;quot;has-text-align-center&amp;quot;&amp;gt;
  田中(゜p゜) &amp;lt;br /&amp;gt;tanaka@tmp-net.biz
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;田中pの経歴&#34;&gt;田中(゜p゜)の経歴&lt;/h2&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;中小企業の情報システム部門に配属。&lt;/li&gt;
&lt;li&gt;大手企業のネットワーク・サーバー(Solaris)運用メンバー&lt;/li&gt;
&lt;li&gt;CEのテクニカルサポートとか。&lt;/li&gt;
&lt;li&gt;インフラ構築希望してたが叶わず&lt;strong&gt;最終的にグレた&lt;/strong&gt;。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;商社のシステム子会社に転職。&lt;/li&gt;
&lt;li&gt;ネットワークエンジニアから&lt;strong&gt;PMに成り上がる&lt;/strong&gt;。しかも&lt;strong&gt;プライム&lt;/strong&gt;。&lt;/li&gt;
&lt;li&gt;配線からアプライアンスからサーバー構築から一通り何でもやった。&lt;/li&gt;
&lt;li&gt;企画から運用まで何でもやった。&lt;/li&gt;
&lt;li&gt;英語おぼつかないのに&lt;strong&gt;海外のデータセンター構築に飛ばされたり&lt;/strong&gt;した。「一人でも生きてそうで&lt;strong&gt;コスパが良い&lt;/strong&gt;」という理由で…。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;一部上場SIerの&lt;strong&gt;情報システム部門の課長クラス&lt;/strong&gt;として勤務&lt;/li&gt;
&lt;li&gt;オンプレサーバのAWS移行とか、GSuite移行とかやった。&lt;/li&gt;
&lt;li&gt;ごくまれに&lt;strong&gt;経営に提案してボコボコにされて&lt;/strong&gt;いた。&lt;/li&gt;
&lt;li&gt;クラウド化で暇になったので、公共案件のプロジェクトの火消しとか手伝った。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;クラウド ベンチャーの&lt;strong&gt;開発部長に成り上がり？&lt;/strong&gt;&lt;/li&gt;
&lt;li&gt;パブリッククラウドの移行コンサルとか、AIやビックデータのPoC(概念検証)とか&lt;/li&gt;
&lt;li&gt;経営のボードメンバーとしても参加した。 ちなみに株はもらっていないので発言権はない。&lt;/li&gt;
&lt;li&gt;戦略性皆無、財務状況壊滅につき、&lt;strong&gt;CFOと一緒に逃げた。&lt;/strong&gt; IPOするって言ってたのに…。&lt;/li&gt;
&lt;/ul&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;ul&gt;
&lt;li&gt;中小のSES企業に勤務。構築PJのリーダーで、10人位部下がいる。&lt;/li&gt;
&lt;li&gt;一部上場企業のITインフラ更改案件の火消しPMOとか、お国の仕事の下請けITインフラ コンサルとか。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;インフラなのに炎上&lt;/strong&gt;の火消し多いっす…・。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&#34;資格&#34;&gt;資格？&lt;/h2&gt;
&lt;p&gt;なんか色々持ってたけど、&lt;strong&gt;だいたい忙しくてExpired&lt;/strong&gt;してます。&lt;br&gt;
PMP、CCNA、CCDP、ITIL、MCP、Google Cloud Architectとか。&lt;br&gt;
現場でやってたものを取ったので、2回以上受けたのはなかった気がする。&lt;/p&gt;
&lt;p&gt;ペーパーホルダーではなかったので、実態に見合ってるような気はします。&lt;/p&gt;
&lt;h2 id=&#34;文体等&#34;&gt;文体等&lt;/h2&gt;
&lt;p&gt;ちなみに田中(゜p゜)は古き良き2ch世代ですので、口調、顔文字等はそれ系です。&lt;br&gt;
やる夫と猛虎弁に毒されている時期もあった。原住民ではない。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>このサイトは何？</title>
      <link>https://y2tanaka.github.io/git-pages/about/</link>
      <pubDate>Wed, 02 Sep 2020 01:37:58 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/about/</guid>
      <description>&lt;h1 id=&#34;span-stylefont-size-28px-classfont-sizeこのサイトは何span&#34;&gt;&lt;!-- raw HTML omitted --&gt;このサイトは何？&lt;!-- raw HTML omitted --&gt;&lt;/h1&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;pre&gt;&lt;code&gt;&amp;lt;p&amp;gt;
  このサイトはざっくり&amp;lt;span style=&amp;quot;background-color: #00ffff;&amp;quot; class=&amp;quot;background-color&amp;quot;&amp;gt;ITインフラのキラキラしてない現状と、明るい？かもしれない未来について&amp;lt;/span&amp;gt;のサイトです。&amp;lt;br /&amp;gt;正直、身も蓋もない話が多いですけどお急ぎの方は&amp;lt;a href=&amp;quot;https://tmp-net.biz/article/&amp;quot;&amp;gt;まず記事一覧&amp;lt;/a&amp;gt;へどうぞ。
&amp;lt;/p&amp;gt;

&amp;lt;h2&amp;gt;
  コンテンツ
&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;
  内容は主に以下の3つで、ほぼテキストです。
&amp;lt;/p&amp;gt;

&amp;lt;div class=&amp;quot;wp-block-group&amp;quot;&amp;gt;
  &amp;lt;div class=&amp;quot;wp-block-group__inner-container&amp;quot;&amp;gt;
    &amp;lt;ol id=&amp;quot;block-a75e936c-3c22-4027-84a9-f234948b36f3&amp;quot;&amp;gt;
      &amp;lt;li&amp;gt;
        ITインフラの現状と、行く末について想像してみる
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        田中(゜p゜)が長いのキャリアで学んだ苦い思い出を伝えたい
      &amp;lt;/li&amp;gt;
      &amp;lt;li&amp;gt;
        ITインフラエンジニアが集う場所を提供する
      &amp;lt;/li&amp;gt;
    &amp;lt;/ol&amp;gt;
    
    &amp;lt;p&amp;gt;
      田中(゜p゜)は管理層→経営層のレイヤでそこそこ苦労していたので、偉い人達がITインフラの現場をどう見ていたのか、どう立ちまわるのがいいのか、経験と予測をてきとうに書いてます。→&amp;lt;a href=&amp;quot;https://tmp-net.biz/article/&amp;quot;&amp;gt;記事一覧&amp;lt;/a&amp;gt;へどうぞ。&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;メニューから2階層以内でアクセスできるようになってます。&amp;lt;br /&amp;gt;記事間に関連性を持たせ、「次へ」で進めばだいたい関連コンテンツに進みます。
    &amp;lt;/p&amp;gt;
  &amp;lt;/div&amp;gt;
&amp;lt;/div&amp;gt;

&amp;lt;h2&amp;gt;
  コミュニケーション
&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;
  基本、&amp;lt;a href=&amp;quot;https://tmp-net.biz/blog/&amp;quot;&amp;gt;ブログに対するコメント&amp;lt;/a&amp;gt;と、&amp;lt;a href=&amp;quot;https://tmp-net.biz/?post_type=forum&amp;quot;&amp;gt;フォーラム&amp;lt;/a&amp;gt;を用意してます。&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;どっかに書きますが、ITインフラエンジニアは、いろんな要素があって企業に囲われてしまうケースが多く、&amp;lt;span style=&amp;quot;background-color: #00ffff;&amp;quot; class=&amp;quot;background-color&amp;quot;&amp;gt;&amp;lt;strong&amp;gt;横のつながりが希薄&amp;lt;/strong&amp;gt;な気がする&amp;lt;/span&amp;gt;のです。よってそれを提供できたらいいな、と考えてます。
&amp;lt;/p&amp;gt;

&amp;lt;p&amp;gt;
  プログラマーさんとかは言語やフレームワーク単位でコミュニティあるので、企業を超えた交流がやりやすいのかな、と勝手に思ってますが。
&amp;lt;/p&amp;gt;

&amp;lt;h2&amp;gt;
  書いてる人
&amp;lt;/h2&amp;gt;

&amp;lt;p&amp;gt;
  &amp;lt;a href=&amp;quot;https://tmp-net.biz/about/writer/&amp;quot;&amp;gt;書いてる人はこちら&amp;lt;/a&amp;gt;&amp;lt;br /&amp;gt;&amp;lt;br /&amp;gt;いちおう肩書はITコンサルタントですが、キラキラしてません。ホントウに叩き上げです。&amp;lt;br /&amp;gt;言い換えればソルジャー。戦場を駆け抜けて来た人です。キラキラとは反対のポジションです。
&amp;lt;/p&amp;gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;!-- raw HTML omitted --&gt;
&lt;h2 id=&#34;おまけこのサイトの構成&#34;&gt;おまけ：このサイトの構成&lt;/h2&gt;
&lt;p&gt;GCEのCentOS8でやってましたが、趣味が高じて&lt;a href=&#34;https://y2tanaka.github.io/git-pages/article/migration-site-to-gae/&#34;&gt;WordPress on GAE&lt;/a&gt; に移行しちゃいました。(2020/09/29)&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;Google Domain&lt;!-- raw HTML omitted --&gt;でドメイン取得。&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;GCP(Google)のGCE無料枠&lt;!-- raw HTML omitted --&gt;活用&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&lt;!-- raw HTML omitted --&gt;CentOS最新版＋Wordpress最新版&lt;!-- raw HTML omitted --&gt; ※2020/09/01時点&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://qiita.com/takutakutaku/items/c8873c7085e450b602bc&#34;&gt;Let`s Encrypt証明書によるSSL化&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;li&gt;&lt;!-- raw HTML omitted --&gt;&lt;a href=&#34;https://www.rem-system.com/httpd-http2/&#34;&gt;HTTP2対応&lt;/a&gt;&lt;!-- raw HTML omitted --&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;田中(゜p゜)はWebエンジニアではないので、フロントの表示技術については2世代くらい遅れとると思いますが、コンテンツとインフラだけは、エンジニアとしての矜持を維持すべく、なんとか他よりリードしてるっぽいものを作りたいと考えとります。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>お問い合わせ</title>
      <link>https://y2tanaka.github.io/git-pages/inquery/</link>
      <pubDate>Tue, 01 Sep 2020 05:13:16 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/inquery/</guid>
      <description>&lt;p&gt;お問い合わせ、ご要望等はこちらから。&lt;/p&gt;
&lt;!-- raw HTML omitted --&gt;
</description>
    </item>
    
    <item>
      <title>免責事項・著作権について</title>
      <link>https://y2tanaka.github.io/git-pages/copyright/</link>
      <pubDate>Tue, 01 Sep 2020 04:30:09 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/copyright/</guid>
      <description>&lt;h2 id=&#34;免責事項&#34;&gt;&lt;strong&gt;免責事項&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトからのリンクやバナーなどで移動したサイトで提供される情報、サービス等について一切の責任を負いません。&lt;br&gt;
また当サイトのコンテンツ・情報について、できる限り正確な情報を提供するように努めていますが、正確性や安全性を保証するものではありません。情報が古くなっていることもあります。&lt;br&gt;
当サイトに掲載された内容によって生じた損害等の一切の責任を負いかねます。&lt;/p&gt;
&lt;h2 id=&#34;著作権について&#34;&gt;&lt;strong&gt;著作権について&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトで掲載している文章や画像などにつきましては、無断転載することを禁止します。&lt;br&gt;
当サイトは著作権や肖像権の侵害を目的としたものではありません。著作権や肖像権に関して問題がございましたら、お問い合わせフォームよりご連絡ください。迅速に対応いたします。&lt;/p&gt;
&lt;h2 id=&#34;リンクについて&#34;&gt;&lt;strong&gt;リンクについて&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトへのリンクに制限は基本ありません。リンクを行う場合の許可や連絡は不要です。&lt;br&gt;
ただし、インラインフレームの使用や画像の直リンクはご遠慮ください。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>プライバシーポリシー</title>
      <link>https://y2tanaka.github.io/git-pages/policy/</link>
      <pubDate>Tue, 01 Sep 2020 03:26:09 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/policy/</guid>
      <description>&lt;h2 id=&#34;個人情報の利用目的&#34;&gt;&lt;strong&gt;個人情報の利用目的&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトでは、問い合わせや記事へのコメントの際、名前やメールアドレス等の個人情報を入力頂く場合があります。&lt;br&gt;
取得した個人情報は、お問い合わせに対する回答や必要な情報を電子メールなどをでご連絡する場合に利用させていただくものであり、これらの目的以外では利用しません。&lt;/p&gt;
&lt;h2 id=&#34;広告について&#34;&gt;&lt;strong&gt;広告について&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトでは、第三者配信の広告サービス（Googleアドセンス、A8.net）を利用しており、ユーザーの興味に応じた商品やサービスの広告を表示するため、クッキー（Cookie）を使用しています。&lt;br&gt;
クッキーを使用することで当サイトはユーザーのコンピュータを識別できるようになりますが、ユーザー個人を特定できるものではありません。&lt;/p&gt;
&lt;p&gt;Cookieを無効にする方法やGoogleアドセンスに関する詳細は「&lt;!-- raw HTML omitted --&gt;広告 – ポリシーと規約 – Google&lt;!-- raw HTML omitted --&gt;」を確認ください。&lt;/p&gt;
&lt;p&gt;また、&lt;a href=&#34;https://tmp-net.biz/&#34;&gt;tmp-net.biz&lt;/a&gt;は、Amazon.co.jpを宣伝しリンクすることによってサイトが紹介料を獲得できる手段を提供することを目的に設定されたアフィリエイトプログラムである、Amazonアソシエイト・プログラムの参加者です。&lt;/p&gt;
&lt;h2 id=&#34;コメントについて&#34;&gt;&lt;strong&gt;コメントについて&lt;/strong&gt;&lt;/h2&gt;
&lt;p&gt;当サイトへのコメントを残す際に、IP アドレスを収集しています。&lt;br&gt;
これはサイトの標準機能としてサポートされている機能で、スパムや荒らしへの対応以外にこのIPアドレスを使用することはありません。&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Contact</title>
      <link>https://y2tanaka.github.io/git-pages/contact/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/contact/</guid>
      <description>&lt;p class=&#34;error message js-hidden&#34;&gt;You must have Javascript enabled to use this function.&lt;/p&gt;
&lt;p class=&#34;contact-submitted status message hidden&#34;&gt;Your message was sent.&lt;/p&gt;
&lt;p class=&#34;contact-error error message hidden&#34;&gt;There was an error sending the message.&lt;/p&gt;

&lt;form class=&#34;contact-form hidden&#34; action=&#34;#&#34; method=&#34;post&#34; accept-charset=&#34;UTF-8&#34;&gt;
  &lt;label for=&#34;edit-name&#34;&gt;Name&lt;/label&gt;
  &lt;input type=&#34;text&#34; id=&#34;edit-name&#34; name=&#34;name&#34; placeholder=&#34;Your name&#34; tabindex=&#34;1&#34; required autofocus&gt;&lt;span&gt;&lt;/span&gt;
  &lt;label for=&#34;edit-mail&#34;&gt;E-mail address&lt;/label&gt;
  &lt;input type=&#34;email&#34; id=&#34;edit-mail&#34; name=&#34;email&#34; placeholder=&#34;Your e-mail address&#34; tabindex=&#34;2&#34; required&gt;&lt;span&gt;&lt;/span&gt;
  &lt;input type=&#34;text&#34; id=&#34;edit-url&#34; class=&#34;hidden&#34; name=&#34;url&#34; placeholder=&#34;Skip if you are a human&#34;&gt;
  &lt;label for=&#34;edit-subject&#34;&gt;Subject&lt;/label&gt;
  &lt;input type=&#34;text&#34; id=&#34;edit-subject&#34; name=&#34;subject&#34; placeholder=&#34;A short subject&#34; tabindex=&#34;3&#34; required&gt;&lt;span&gt;&lt;/span&gt;
  &lt;label for=&#34;edit-message&#34;&gt;Message&lt;/label&gt;
  &lt;textarea id=&#34;edit-message&#34; name=&#34;message&#34; rows=&#34;5&#34; placeholder=&#34;The messages goes here…&#34; tabindex=&#34;4&#34; required&gt;&lt;/textarea&gt;&lt;span&gt;&lt;/span&gt;
  &lt;button type=&#34;submit&#34; name=&#34;submit&#34; class=&#34;form-submit&#34; disabled&gt;Send message&lt;/button&gt;
&lt;/form&gt;

</description>
    </item>
    
    <item>
      <title>Search</title>
      <link>https://y2tanaka.github.io/git-pages/search/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://y2tanaka.github.io/git-pages/search/</guid>
      <description>&lt;p class=&#34;error message js-hidden&#34;&gt;You must have Javascript enabled to use this function.&lt;/p&gt;
&lt;p class=&#34;search-loading status message hidden&#34;&gt;Loading search index…&lt;/p&gt;

&lt;div class=&#34;search-input hidden&#34;&gt;
  &lt;form id=&#34;search-form&#34; class=&#34;search-form&#34; action=&#34;#&#34; method=&#34;post&#34; accept-charset=&#34;UTF-8&#34; role=&#34;search&#34;&gt;
    &lt;label for=&#34;query&#34; class=&#34;visually-hidden&#34;&gt;Search&lt;/label&gt;
    &lt;input type=&#34;search&#34; id=&#34;query&#34; name=&#34;query&#34; class=&#34;search-text&#34; placeholder=&#34;Enter the terms you wish to search for.&#34; maxlength=&#34;128&#34;&gt;
    &lt;button type=&#34;submit&#34; name=&#34;submit&#34; class=&#34;form-submit&#34; &gt;Search&lt;/button&gt;
  &lt;/form&gt;
&lt;/div&gt;

&lt;div class=&#34;search-results&#34;&gt;&lt;/div&gt;

&lt;template&gt;
  &lt;article class=&#34;search-result list-view&#34;&gt;
    &lt;header&gt;
      &lt;h2 class=&#34;title title-submitted&#34;&gt;&lt;a href=&#34;#&#34;&gt;Title here&lt;/a&gt;&lt;/h2&gt;
      &lt;div class=&#34;submitted&#34;&gt;&lt;time class=&#34;created-date&#34;&gt;Date here&lt;/time&gt;&lt;/div&gt;
    &lt;/header&gt;
    &lt;div class=&#34;content&#34;&gt;Summary here&lt;/div&gt;
  &lt;/article&gt;
&lt;/template&gt;

</description>
    </item>
    
  </channel>
</rss>
